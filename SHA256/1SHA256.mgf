I 000042 55 4005 1705867545882 sha256_pkg
(_unit VHDL(sha256_pkg 0 5(sha256_pkg 0 39))
	(_version vef)
	(_time 1705867545888 2024.01.21 15:05:45)
	(_source(\../src/sha256_pkg.vhd\))
	(_parameters tan)
	(_code 4c4f494e171b195f484e59131b491a4b4c4a1e4a4b)
	(_ent
		(_time 1705867545882)
	)
	(_object
		(_cnst(_int WORD_SIZE -1 0 6(_ent((i 32)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~15 0 8(_array -2((_dto i 31 i 0)))))
		(_type(_int K_DATA 0 8(_array 0((_to i 0 i 63)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~152 0 9(_array -2((_dto i 31 i 0)))))
		(_type(_int M_DATA 0 9(_array 2((_to i 0 i 15)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~154 0 10(_array -2((_dto i 31 i 0)))))
		(_type(_int H_DATA 0 10(_array 4((_to i 0 i 7)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~156 0 13(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~158 0 15(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1510 0 17(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1512 0 19(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1514 0 20(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1516 0 21(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1518 0 23(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1520 0 24(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1522 0 25(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1524 0 28(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1526 0 30(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1528 0 32(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1530 0 34(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~16 0 40(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~162 0 46(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~164 0 52(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~166 0 58(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~168 0 59(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1610 0 60(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1612 0 66(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1614 0 67(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1616 0 68(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1618 0 74(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1620 0 80(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1622 0 86(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1624 0 92(_array -2((_dto i 31 i 0)))))
		(_subprogram
			(_int ROTR 0 0 40(_ent(_func)))
			(_int ROTL 1 0 46(_ent(_func)))
			(_int SHR 2 0 52(_ent(_func)))
			(_int CH 3 0 58(_ent(_func)))
			(_int MAJ 4 0 66(_ent(_func)))
			(_int SIGMA_UCASE_0 5 0 74(_ent(_func -3 15)))
			(_int SIGMA_UCASE_1 6 0 80(_ent(_func -3 16)))
			(_int SIGMA_LCASE_0 7 0 86(_ent(_func -3 17)))
			(_int SIGMA_LCASE_1 8 0 92(_ent(_func -3 18)))
		)
		(_type(_ext std.standard.NATURAL(0 NATURAL)))
		(_type(_ext ieee.std_logic_1164.STD_LOGIC(1 STD_LOGIC)))
		(_type(_ext ieee.std_logic_1164.STD_LOGIC_VECTOR(1 STD_LOGIC_VECTOR)))
		(_type(_ext ieee.NUMERIC_STD.UNSIGNED(2 UNSIGNED)))
		(_type(_ext std.standard.INTEGER(0 INTEGER)))
	)
	(_use(std(standard))(ieee(std_logic_1164))(ieee(NUMERIC_STD)))
	(_model . sha256_pkg 9 -1)
)
I 000052 55 12845         1705867572640 sha256_ARCH
(_unit VHDL(sha256 0 6(sha256_arch 0 22))
	(_version vef)
	(_time 1705867572641 2024.01.21 15:06:12)
	(_source(\../src/sha256.vhd\))
	(_parameters tan)
	(_code ca9c9c9f939d9fd9c8c8cfcfdc9198ccc2cccbc9c8c9cf)
	(_ent
		(_time 1705867572637)
	)
	(_generate MESSAGE_BLOCK_INTERMEDIATE 0 239(_for 4 )
		(_object
			(_cnst(_int i 4 0 240(_arch)))
			(_prcs
				(line__243(_arch 2 0 243(_assignment(_trgt(24(_object 3)))(_sens(4(_range 7)))(_read(4(_range 8))))))
			)
		)
	)
	(_generate MESSAGE_SCHEDULE_INTERMEDIATE_00 0 246(_for 5 )
		(_object
			(_cnst(_int i 5 0 247(_arch)))
			(_prcs
				(line__249(_arch 3 0 249(_assignment(_trgt(25(_object 4)))(_sens(21(_object 4)))(_read(21(_object 4))))))
			)
		)
	)
	(_generate MESSAGE_SCHEDULE_INTERMEDIATE_01 0 252(_for 6 )
		(_object
			(_cnst(_int i 6 0 253(_arch)))
			(_prcs
				(line__255(_arch 4 0 255(_assignment(_trgt(25(_object 5)))(_sens(25(_index 9))(25(_index 10))(25(_index 11))(25(_index 12)))(_read(25(_index 13))(25(_index 14))(25(_index 15))(25(_index 16))))))
			)
		)
	)
	(_object
		(_gen(_int RESET_VALUE -1 0 8 \'0'\ (_ent gms((i 2)))))
		(_port(_int clk -1 0 11(_ent(_in)(_event))))
		(_port(_int rst -1 0 12(_ent(_in)(_event))))
		(_port(_int data_ready -1 0 13(_ent(_in))))
		(_port(_int n_blocks -2 0 14(_ent(_in))))
		(_type(_int ~STD_LOGIC_VECTOR{0~to~{16*WORD_SIZE}-1}~12 0 15(_array -1((_to i 0 i 511)))))
		(_port(_int msg_block_in 0 0 15(_ent(_in))))
		(_port(_int finished -1 0 17(_ent(_out))))
		(_type(_int ~STD_LOGIC_VECTOR{{WORD_SIZE*8}-1~downto~0}~12 0 18(_array -1((_dto i 255 i 0)))))
		(_port(_int data_out 1 0 18(_ent(_out))))
		(_sig(_int HASH_ROUND_COUNTER -2 0 23(_arch(_uni((i 0))))))
		(_sig(_int MSG_BLOCK_COUNTER -2 0 24(_arch(_uni((i 0))))))
		(_sig(_int HASH_02_COUNTER -2 0 25(_arch(_uni((i 0))))))
		(_cnst(_int HASH_02_COUNT_LIMIT -2 0 26(_arch((i 64)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~13 0 29(_array -1((_dto i 31 i 0)))))
		(_sig(_int T1 2 0 29(_arch(_uni((_others(i 2)))))))
		(_sig(_int T2 2 0 30(_arch(_uni((_others(i 2)))))))
		(_sig(_int a 2 0 33(_arch(_uni((_others(i 2)))))))
		(_sig(_int b 2 0 34(_arch(_uni((_others(i 2)))))))
		(_sig(_int c 2 0 35(_arch(_uni((_others(i 2)))))))
		(_sig(_int d 2 0 36(_arch(_uni((_others(i 2)))))))
		(_sig(_int e 2 0 37(_arch(_uni((_others(i 2)))))))
		(_sig(_int f 2 0 38(_arch(_uni((_others(i 2)))))))
		(_sig(_int g 2 0 39(_arch(_uni((_others(i 2)))))))
		(_sig(_int h 2 0 40(_arch(_uni((_others(i 2)))))))
		(_cnst(_int K -3 0 42(_arch(((_string \"01000010100010100010111110011000"\))((_string \"01110001001101110100010010010001"\))((_string \"10110101110000001111101111001111"\))((_string \"11101001101101011101101110100101"\))((_string \"00111001010101101100001001011011"\))((_string \"01011001111100010001000111110001"\))((_string \"10010010001111111000001010100100"\))((_string \"10101011000111000101111011010101"\))((_string \"11011000000001111010101010011000"\))((_string \"00010010100000110101101100000001"\))((_string \"00100100001100011000010110111110"\))((_string \"01010101000011000111110111000011"\))((_string \"01110010101111100101110101110100"\))((_string \"10000000110111101011000111111110"\))((_string \"10011011110111000000011010100111"\))((_string \"11000001100110111111000101110100"\))((_string \"11100100100110110110100111000001"\))((_string \"11101111101111100100011110000110"\))((_string \"00001111110000011001110111000110"\))((_string \"00100100000011001010000111001100"\))((_string \"00101101111010010010110001101111"\))((_string \"01001010011101001000010010101010"\))((_string \"01011100101100001010100111011100"\))((_string \"01110110111110011000100011011010"\))((_string \"10011000001111100101000101010010"\))((_string \"10101000001100011100011001101101"\))((_string \"10110000000000110010011111001000"\))((_string \"10111111010110010111111111000111"\))((_string \"11000110111000000000101111110011"\))((_string \"11010101101001111001000101000111"\))((_string \"00000110110010100110001101010001"\))((_string \"00010100001010010010100101100111"\))((_string \"00100111101101110000101010000101"\))((_string \"00101110000110110010000100111000"\))((_string \"01001101001011000110110111111100"\))((_string \"01010011001110000000110100010011"\))((_string \"01100101000010100111001101010100"\))((_string \"01110110011010100000101010111011"\))((_string \"10000001110000101100100100101110"\))((_string \"10010010011100100010110010000101"\))((_string \"10100010101111111110100010100001"\))((_string \"10101000000110100110011001001011"\))((_string \"11000010010010111000101101110000"\))((_string \"11000111011011000101000110100011"\))((_string \"11010001100100101110100000011001"\))((_string \"11010110100110010000011000100100"\))((_string \"11110100000011100011010110000101"\))((_string \"00010000011010101010000001110000"\))((_string \"00011001101001001100000100010110"\))((_string \"00011110001101110110110000001000"\))((_string \"00100111010010000111011101001100"\))((_string \"00110100101100001011110010110101"\))((_string \"00111001000111000000110010110011"\))((_string \"01001110110110001010101001001010"\))((_string \"01011011100111001100101001001111"\))((_string \"01101000001011100110111111110011"\))((_string \"01110100100011111000001011101110"\))((_string \"01111000101001010110001101101111"\))((_string \"10000100110010000111100000010100"\))((_string \"10001100110001110000001000001000"\))((_string \"10010000101111101111111111111010"\))((_string \"10100100010100000110110011101011"\))((_string \"10111110111110011010001111110111"\))((_string \"11000110011100010111100011110010"\))))))
		(_sig(_int W -3 0 62(_arch(_uni(((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\)))))))
		(_sig(_int M -4 0 83(_arch(_uni))))
		(_sig(_int HV -5 0 85(_arch(_uni))))
		(_sig(_int HV_INITIAL_VALUES -5 0 86(_arch(_uni(((_string \"01101010000010011110011001100111"\))((_string \"10111011011001111010111010000101"\))((_string \"00111100011011101111001101110010"\))((_string \"10100101010011111111010100111010"\))((_string \"01010001000011100101001001111111"\))((_string \"10011011000001010110100010001100"\))((_string \"00011111100000111101100110101011"\))((_string \"01011011111000001100110100011001"\)))))))
		(_sig(_int M_INT -4 0 91(_arch(_uni))))
		(_sig(_int W_INT -3 0 94(_arch(_uni))))
		(_type(_int SHA_256_HASH_CORE_STATE 0 97(_enum1 RESET IDLE READ_MSG_BLOCK PREP_MSG_SCHEDULE_00 PREP_MSG_SCHEDULE_01 PREP_MSG_SCHEDULE_02 PREP_MSG_SCHEDULE_03 HASH_01 HASH_02 HASH_02b HASH_02c HASH_03 DONE (_to i 0 i 12))))
		(_sig(_int CURRENT_STATE 3 0 98(_arch(_uni)(_event))))
		(_sig(_int NEXT_STATE 3 0 98(_arch(_uni))))
		(_sig(_int PREVIOUS_STATE 3 0 99(_arch(_uni((i 2))))))
		(_type(_int ~INTEGER~range~0~to~15~13 0 240(_scalar (_to i 0 i 15))))
		(_type(_int ~INTEGER~range~0~to~15~135 0 247(_scalar (_to i 0 i 15))))
		(_type(_int ~INTEGER~range~16~to~63~13 0 253(_scalar (_to i 16 i 63))))
		(_prcs
			(line__104(_arch 0 0 104(_prcs(_trgt(26))(_sens(0)(1)(7)(9)(26)(2)(3))(_dssslsensitivity 2))))
			(line__159(_arch 1 0 159(_prcs(_trgt(7)(8)(9)(10)(11)(12)(13)(14)(15)(16)(17)(18)(19)(20(t_48_63))(20(t_32_47))(20(t_16_31))(20(t_0_15))(20)(21)(22(7))(22(6))(22(5))(22(4))(22(3))(22(2))(22(1))(22(0))(22))(_sens(26)(0)(1)(7)(9)(10)(11)(12)(13)(14)(15)(16)(17)(18)(19)(20)(21)(22)(23)(24)(25(t_48_63))(25(t_32_47))(25(t_16_31))(25(t_0_15))(3))(_dssslsensitivity 3))))
			(line__259(_arch 5 0 259(_assignment(_trgt(5))(_sens(26)))))
			(line__262(_arch 6 0 262(_assignment(_alias((data_out)(HV(0))(HV(1))(HV(2))(HV(3))(HV(4))(HV(5))(HV(6))(HV(7))))(_trgt(6))(_sens(22(7))(22(6))(22(5))(22(4))(22(3))(22(2))(22(1))(22(0))))))
		)
		(_subprogram
			(_ext SIGMA_UCASE_1(2 6))
			(_ext CH(2 3))
			(_ext SIGMA_UCASE_0(2 5))
			(_ext MAJ(2 4))
			(_ext SIGMA_LCASE_1(2 8))
			(_ext SIGMA_LCASE_0(2 7))
		)
		(_type(_ext ieee.std_logic_1164.STD_LOGIC(0 STD_LOGIC)))
		(_type(_ext std.standard.NATURAL(1 NATURAL)))
		(_var(_ext sha256.sha256_pkg.WORD_SIZE(2 WORD_SIZE)))
		(_type(_ext sha256.sha256_pkg.K_DATA(2 K_DATA)))
		(_type(_ext sha256.sha256_pkg.M_DATA(2 M_DATA)))
		(_type(_ext sha256.sha256_pkg.H_DATA(2 H_DATA)))
		(_type(_ext ieee.std_logic_1164.STD_ULOGIC(0 STD_ULOGIC)))
		(_type(_ext ieee.NUMERIC_STD.UNSIGNED(3 UNSIGNED)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1526(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1526)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1512(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1512)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1514(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1514)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1516(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1516)))
		(_type(_ext ieee.std_logic_1164.STD_LOGIC_VECTOR(0 STD_LOGIC_VECTOR)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1524(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1524)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1518(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1518)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1520(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1520)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1522(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1522)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1530(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1530)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1528(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1528)))
		(_type(_ext std.standard.INTEGER(1 INTEGER)))
	)
	(_use(ieee(std_logic_1164))(std(standard))(.(sha256_pkg))(ieee(NUMERIC_STD)))
	(_model . sha256_ARCH 17 -1)
)
I 000042 55 4005 1705867545881 sha256_pkg
(_unit VHDL(sha256_pkg 0 5(sha256_pkg 0 39))
	(_version vef)
	(_time 1705867572653 2024.01.21 15:06:12)
	(_source(\../src/sha256_pkg.vhd\))
	(_parameters tan)
	(_code da8c8c88838d8fc9ded8cf858ddf8cdddadc88dcdd)
	(_ent
		(_time 1705867545881)
	)
	(_object
		(_cnst(_int WORD_SIZE -1 0 6(_ent((i 32)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~15 0 8(_array -2((_dto i 31 i 0)))))
		(_type(_int K_DATA 0 8(_array 0((_to i 0 i 63)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~152 0 9(_array -2((_dto i 31 i 0)))))
		(_type(_int M_DATA 0 9(_array 2((_to i 0 i 15)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~154 0 10(_array -2((_dto i 31 i 0)))))
		(_type(_int H_DATA 0 10(_array 4((_to i 0 i 7)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~156 0 13(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~158 0 15(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1510 0 17(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1512 0 19(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1514 0 20(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1516 0 21(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1518 0 23(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1520 0 24(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1522 0 25(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1524 0 28(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1526 0 30(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1528 0 32(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1530 0 34(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~16 0 40(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~162 0 46(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~164 0 52(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~166 0 58(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~168 0 59(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1610 0 60(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1612 0 66(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1614 0 67(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1616 0 68(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1618 0 74(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1620 0 80(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1622 0 86(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1624 0 92(_array -2((_dto i 31 i 0)))))
		(_subprogram
			(_int ROTR 0 0 40(_ent(_func)))
			(_int ROTL 1 0 46(_ent(_func)))
			(_int SHR 2 0 52(_ent(_func)))
			(_int CH 3 0 58(_ent(_func)))
			(_int MAJ 4 0 66(_ent(_func)))
			(_int SIGMA_UCASE_0 5 0 74(_ent(_func -3 15)))
			(_int SIGMA_UCASE_1 6 0 80(_ent(_func -3 16)))
			(_int SIGMA_LCASE_0 7 0 86(_ent(_func -3 17)))
			(_int SIGMA_LCASE_1 8 0 92(_ent(_func -3 18)))
		)
		(_type(_ext std.standard.NATURAL(0 NATURAL)))
		(_type(_ext ieee.std_logic_1164.STD_LOGIC(1 STD_LOGIC)))
		(_type(_ext ieee.std_logic_1164.STD_LOGIC_VECTOR(1 STD_LOGIC_VECTOR)))
		(_type(_ext ieee.NUMERIC_STD.UNSIGNED(2 UNSIGNED)))
		(_type(_ext std.standard.INTEGER(0 INTEGER)))
	)
	(_use(std(standard))(ieee(std_logic_1164))(ieee(NUMERIC_STD)))
	(_model . sha256_pkg 9 -1)
)
I 000049 55 3605          1705867572664 behavior
(_unit VHDL(sha256_tb 0 6(behavior 0 10))
	(_version vef)
	(_time 1705867572665 2024.01.21 15:06:12)
	(_source(\../src/sha256_testbench.vhd\))
	(_parameters tan)
	(_code e9bfbfbae8bebcfaeebffcb6beecbfeeedefebeeea)
	(_ent
		(_time 1705867572662)
	)
	(_comp
		(sha256
			(_object
				(_gen(_int RESET_VALUE -1 0 15(_ent((i 2)))))
				(_port(_int clk -1 0 18(_ent (_in))))
				(_port(_int rst -1 0 19(_ent (_in))))
				(_port(_int data_ready -1 0 20(_ent (_in))))
				(_port(_int n_blocks -2 0 21(_ent (_in))))
				(_port(_int msg_block_in 0 0 22(_ent (_in))))
				(_port(_int finished -1 0 23(_ent (_out))))
				(_port(_int data_out 1 0 24(_ent (_out))))
			)
		)
	)
	(_inst uut 0 48(_comp sha256)
		(_gen
			((RESET_VALUE)((i 2)))
		)
		(_port
			((clk)(clk))
			((rst)(rst))
			((data_ready)(data_ready))
			((n_blocks)(n_blocks))
			((msg_block_in)(msg_block_in))
			((finished)(finished))
			((data_out)(data_out))
		)
		(_use(_ent . sha256)
			(_gen
				((RESET_VALUE)((i 2)))
			)
		)
	)
	(_object
		(_type(_int ~STD_LOGIC_VECTOR{0~to~{16*WORD_SIZE}-1}~13 0 22(_array -1((_to i 0 i 511)))))
		(_type(_int ~STD_LOGIC_VECTOR{{WORD_SIZE*8}-1~downto~0}~13 0 24(_array -1((_dto i 255 i 0)))))
		(_cnst(_int WORD_SIZE -2 0 29(_arch((i 32)))))
		(_sig(_int clk -1 0 32(_arch(_uni((i 2))))))
		(_sig(_int rst -1 0 33(_arch(_uni((i 2))))))
		(_sig(_int data_ready -1 0 34(_arch(_uni((i 2))))))
		(_sig(_int n_blocks -2 0 35(_arch(_uni((i 0))))))
		(_type(_int ~STD_LOGIC_VECTOR{0~to~{16*WORD_SIZE}-1}~132 0 36(_array -1((_to i 0 i 511)))))
		(_sig(_int msg_block_in 2 0 36(_arch(_uni((_others(i 2)))))))
		(_sig(_int finished -1 0 39(_arch(_uni))))
		(_type(_int ~STD_LOGIC_VECTOR{{WORD_SIZE*8}-1~downto~0}~134 0 40(_array -1((_dto i 255 i 0)))))
		(_sig(_int data_out 3 0 40(_arch(_uni))))
		(_cnst(_int clk_period -3 0 43(_arch((ns 4621819117588971520)))))
		(_cnst(_int \clk_period/2\ -3 0 0(_int gms(_code 2))))
		(_prcs
			(clk_process(_arch 0 0 63(_prcs(_wait_for)(_trgt(0)))))
			(stim_proc(_arch 1 0 72(_prcs(_wait_for)(_trgt(1)(2)(3)(4)))))
		)
		(_type(_ext ieee.std_logic_1164.STD_LOGIC(0 STD_LOGIC)))
		(_type(_ext std.standard.NATURAL(1 NATURAL)))
		(_var(_ext sha256.sha256_pkg.WORD_SIZE(2 WORD_SIZE)))
		(_type(_ext std.standard.TIME(1 TIME)))
	)
	(_use(ieee(std_logic_1164))(std(standard))(.(sha256_pkg))(ieee(NUMERIC_STD)))
	(_static
		
	)
	(_model . behavior 3 -1)
)
I 000052 55 12845         1705867691677 sha256_ARCH
(_unit VHDL(sha256 0 6(sha256_arch 0 22))
	(_version vef)
	(_time 1705867691678 2024.01.21 15:08:11)
	(_source(\../src/sha256.vhd\))
	(_parameters tan)
	(_code d1d18483d88684c2d3d3d4d4c78a83d7d9d7d0d2d3d2d4)
	(_ent
		(_time 1705867572636)
	)
	(_generate MESSAGE_BLOCK_INTERMEDIATE 0 239(_for 4 )
		(_object
			(_cnst(_int i 4 0 240(_arch)))
			(_prcs
				(line__243(_arch 2 0 243(_assignment(_trgt(24(_object 3)))(_sens(4(_range 7)))(_read(4(_range 8))))))
			)
		)
	)
	(_generate MESSAGE_SCHEDULE_INTERMEDIATE_00 0 246(_for 5 )
		(_object
			(_cnst(_int i 5 0 247(_arch)))
			(_prcs
				(line__249(_arch 3 0 249(_assignment(_trgt(25(_object 4)))(_sens(21(_object 4)))(_read(21(_object 4))))))
			)
		)
	)
	(_generate MESSAGE_SCHEDULE_INTERMEDIATE_01 0 252(_for 6 )
		(_object
			(_cnst(_int i 6 0 253(_arch)))
			(_prcs
				(line__255(_arch 4 0 255(_assignment(_trgt(25(_object 5)))(_sens(25(_index 9))(25(_index 10))(25(_index 11))(25(_index 12)))(_read(25(_index 13))(25(_index 14))(25(_index 15))(25(_index 16))))))
			)
		)
	)
	(_object
		(_gen(_int RESET_VALUE -1 0 8 \'0'\ (_ent gms((i 2)))))
		(_port(_int clk -1 0 11(_ent(_in)(_event))))
		(_port(_int rst -1 0 12(_ent(_in)(_event))))
		(_port(_int data_ready -1 0 13(_ent(_in))))
		(_port(_int n_blocks -2 0 14(_ent(_in))))
		(_type(_int ~STD_LOGIC_VECTOR{0~to~{16*WORD_SIZE}-1}~12 0 15(_array -1((_to i 0 i 511)))))
		(_port(_int msg_block_in 0 0 15(_ent(_in))))
		(_port(_int finished -1 0 17(_ent(_out))))
		(_type(_int ~STD_LOGIC_VECTOR{{WORD_SIZE*8}-1~downto~0}~12 0 18(_array -1((_dto i 255 i 0)))))
		(_port(_int data_out 1 0 18(_ent(_out))))
		(_sig(_int HASH_ROUND_COUNTER -2 0 23(_arch(_uni((i 0))))))
		(_sig(_int MSG_BLOCK_COUNTER -2 0 24(_arch(_uni((i 0))))))
		(_sig(_int HASH_02_COUNTER -2 0 25(_arch(_uni((i 0))))))
		(_cnst(_int HASH_02_COUNT_LIMIT -2 0 26(_arch((i 64)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~13 0 29(_array -1((_dto i 31 i 0)))))
		(_sig(_int T1 2 0 29(_arch(_uni((_others(i 2)))))))
		(_sig(_int T2 2 0 30(_arch(_uni((_others(i 2)))))))
		(_sig(_int a 2 0 33(_arch(_uni((_others(i 2)))))))
		(_sig(_int b 2 0 34(_arch(_uni((_others(i 2)))))))
		(_sig(_int c 2 0 35(_arch(_uni((_others(i 2)))))))
		(_sig(_int d 2 0 36(_arch(_uni((_others(i 2)))))))
		(_sig(_int e 2 0 37(_arch(_uni((_others(i 2)))))))
		(_sig(_int f 2 0 38(_arch(_uni((_others(i 2)))))))
		(_sig(_int g 2 0 39(_arch(_uni((_others(i 2)))))))
		(_sig(_int h 2 0 40(_arch(_uni((_others(i 2)))))))
		(_cnst(_int K -3 0 42(_arch(((_string \"01000010100010100010111110011000"\))((_string \"01110001001101110100010010010001"\))((_string \"10110101110000001111101111001111"\))((_string \"11101001101101011101101110100101"\))((_string \"00111001010101101100001001011011"\))((_string \"01011001111100010001000111110001"\))((_string \"10010010001111111000001010100100"\))((_string \"10101011000111000101111011010101"\))((_string \"11011000000001111010101010011000"\))((_string \"00010010100000110101101100000001"\))((_string \"00100100001100011000010110111110"\))((_string \"01010101000011000111110111000011"\))((_string \"01110010101111100101110101110100"\))((_string \"10000000110111101011000111111110"\))((_string \"10011011110111000000011010100111"\))((_string \"11000001100110111111000101110100"\))((_string \"11100100100110110110100111000001"\))((_string \"11101111101111100100011110000110"\))((_string \"00001111110000011001110111000110"\))((_string \"00100100000011001010000111001100"\))((_string \"00101101111010010010110001101111"\))((_string \"01001010011101001000010010101010"\))((_string \"01011100101100001010100111011100"\))((_string \"01110110111110011000100011011010"\))((_string \"10011000001111100101000101010010"\))((_string \"10101000001100011100011001101101"\))((_string \"10110000000000110010011111001000"\))((_string \"10111111010110010111111111000111"\))((_string \"11000110111000000000101111110011"\))((_string \"11010101101001111001000101000111"\))((_string \"00000110110010100110001101010001"\))((_string \"00010100001010010010100101100111"\))((_string \"00100111101101110000101010000101"\))((_string \"00101110000110110010000100111000"\))((_string \"01001101001011000110110111111100"\))((_string \"01010011001110000000110100010011"\))((_string \"01100101000010100111001101010100"\))((_string \"01110110011010100000101010111011"\))((_string \"10000001110000101100100100101110"\))((_string \"10010010011100100010110010000101"\))((_string \"10100010101111111110100010100001"\))((_string \"10101000000110100110011001001011"\))((_string \"11000010010010111000101101110000"\))((_string \"11000111011011000101000110100011"\))((_string \"11010001100100101110100000011001"\))((_string \"11010110100110010000011000100100"\))((_string \"11110100000011100011010110000101"\))((_string \"00010000011010101010000001110000"\))((_string \"00011001101001001100000100010110"\))((_string \"00011110001101110110110000001000"\))((_string \"00100111010010000111011101001100"\))((_string \"00110100101100001011110010110101"\))((_string \"00111001000111000000110010110011"\))((_string \"01001110110110001010101001001010"\))((_string \"01011011100111001100101001001111"\))((_string \"01101000001011100110111111110011"\))((_string \"01110100100011111000001011101110"\))((_string \"01111000101001010110001101101111"\))((_string \"10000100110010000111100000010100"\))((_string \"10001100110001110000001000001000"\))((_string \"10010000101111101111111111111010"\))((_string \"10100100010100000110110011101011"\))((_string \"10111110111110011010001111110111"\))((_string \"11000110011100010111100011110010"\))))))
		(_sig(_int W -3 0 62(_arch(_uni(((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\)))))))
		(_sig(_int M -4 0 83(_arch(_uni))))
		(_sig(_int HV -5 0 85(_arch(_uni))))
		(_sig(_int HV_INITIAL_VALUES -5 0 86(_arch(_uni(((_string \"01101010000010011110011001100111"\))((_string \"10111011011001111010111010000101"\))((_string \"00111100011011101111001101110010"\))((_string \"10100101010011111111010100111010"\))((_string \"01010001000011100101001001111111"\))((_string \"10011011000001010110100010001100"\))((_string \"00011111100000111101100110101011"\))((_string \"01011011111000001100110100011001"\)))))))
		(_sig(_int M_INT -4 0 91(_arch(_uni))))
		(_sig(_int W_INT -3 0 94(_arch(_uni))))
		(_type(_int SHA_256_HASH_CORE_STATE 0 97(_enum1 RESET IDLE READ_MSG_BLOCK PREP_MSG_SCHEDULE_00 PREP_MSG_SCHEDULE_01 PREP_MSG_SCHEDULE_02 PREP_MSG_SCHEDULE_03 HASH_01 HASH_02 HASH_02b HASH_02c HASH_03 DONE (_to i 0 i 12))))
		(_sig(_int CURRENT_STATE 3 0 98(_arch(_uni)(_event))))
		(_sig(_int NEXT_STATE 3 0 98(_arch(_uni))))
		(_sig(_int PREVIOUS_STATE 3 0 99(_arch(_uni((i 2))))))
		(_type(_int ~INTEGER~range~0~to~15~13 0 240(_scalar (_to i 0 i 15))))
		(_type(_int ~INTEGER~range~0~to~15~135 0 247(_scalar (_to i 0 i 15))))
		(_type(_int ~INTEGER~range~16~to~63~13 0 253(_scalar (_to i 16 i 63))))
		(_prcs
			(line__104(_arch 0 0 104(_prcs(_trgt(26))(_sens(0)(1)(7)(9)(26)(2)(3))(_dssslsensitivity 2))))
			(line__159(_arch 1 0 159(_prcs(_trgt(7)(8)(9)(10)(11)(12)(13)(14)(15)(16)(17)(18)(19)(20(t_48_63))(20(t_32_47))(20(t_16_31))(20(t_0_15))(20)(21)(22(7))(22(6))(22(5))(22(4))(22(3))(22(2))(22(1))(22(0))(22))(_sens(26)(0)(1)(7)(9)(10)(11)(12)(13)(14)(15)(16)(17)(18)(19)(20)(21)(22)(23)(24)(25(t_48_63))(25(t_32_47))(25(t_16_31))(25(t_0_15))(3))(_dssslsensitivity 3))))
			(line__259(_arch 5 0 259(_assignment(_trgt(5))(_sens(26)))))
			(line__262(_arch 6 0 262(_assignment(_alias((data_out)(HV(0))(HV(1))(HV(2))(HV(3))(HV(4))(HV(5))(HV(6))(HV(7))))(_trgt(6))(_sens(22(7))(22(6))(22(5))(22(4))(22(3))(22(2))(22(1))(22(0))))))
		)
		(_subprogram
			(_ext SIGMA_UCASE_1(2 6))
			(_ext CH(2 3))
			(_ext SIGMA_UCASE_0(2 5))
			(_ext MAJ(2 4))
			(_ext SIGMA_LCASE_1(2 8))
			(_ext SIGMA_LCASE_0(2 7))
		)
		(_type(_ext ieee.std_logic_1164.STD_LOGIC(0 STD_LOGIC)))
		(_type(_ext std.standard.NATURAL(1 NATURAL)))
		(_var(_ext sha256.sha256_pkg.WORD_SIZE(2 WORD_SIZE)))
		(_type(_ext sha256.sha256_pkg.K_DATA(2 K_DATA)))
		(_type(_ext sha256.sha256_pkg.M_DATA(2 M_DATA)))
		(_type(_ext sha256.sha256_pkg.H_DATA(2 H_DATA)))
		(_type(_ext ieee.std_logic_1164.STD_ULOGIC(0 STD_ULOGIC)))
		(_type(_ext ieee.NUMERIC_STD.UNSIGNED(3 UNSIGNED)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1526(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1526)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1512(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1512)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1514(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1514)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1516(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1516)))
		(_type(_ext ieee.std_logic_1164.STD_LOGIC_VECTOR(0 STD_LOGIC_VECTOR)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1524(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1524)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1518(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1518)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1520(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1520)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1522(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1522)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1530(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1530)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1528(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1528)))
		(_type(_ext std.standard.INTEGER(1 INTEGER)))
	)
	(_use(ieee(std_logic_1164))(std(standard))(.(sha256_pkg))(ieee(NUMERIC_STD)))
	(_model . sha256_ARCH 17 -1)
)
I 000042 55 4164 1705867545881 sha256_pkg
(_unit VHDL(sha256_pkg 0 5(sha256_pkg 0 39))
	(_version vef)
	(_time 1705868614095 2024.01.21 15:23:34)
	(_source(\../src/sha256_pkg.vhd\))
	(_parameters tan)
	(_code f7f9f6a7f8a0a2e4f3a0e2a8a0f2a1f0f7f1a5f1f0)
	(_ent
		(_time 1705867545881)
	)
	(_object
		(_cnst(_int WORD_SIZE -1 0 6(_ent((i 32)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~15 0 8(_array -2((_dto i 31 i 0)))))
		(_type(_int K_DATA 0 8(_array 0((_to i 0 i 63)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~152 0 9(_array -2((_dto i 31 i 0)))))
		(_type(_int M_DATA 0 9(_array 2((_to i 0 i 15)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~154 0 10(_array -2((_dto i 31 i 0)))))
		(_type(_int H_DATA 0 10(_array 4((_to i 0 i 7)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~156 0 13(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~158 0 15(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1510 0 17(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1512 0 19(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1514 0 20(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1516 0 21(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1518 0 23(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1520 0 24(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1522 0 25(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1524 0 28(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1526 0 30(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1528 0 32(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1530 0 34(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~16 0 40(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~162 0 46(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~164 0 52(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~166 0 58(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~168 0 59(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1610 0 60(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1612 0 66(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1614 0 67(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1616 0 68(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1618 0 74(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1620 0 80(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1622 0 86(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1624 0 92(_array -2((_dto i 31 i 0)))))
		(_subprogram
			(_int ROTR 0 0 40(_ent(_func)))
			(_int ROTL 1 0 46(_ent(_func)))
			(_int SHR 2 0 52(_ent(_func)))
			(_int CH 3 0 58(_ent(_func)))
			(_int MAJ 4 0 66(_ent(_func)))
			(_int SIGMA_UCASE_0 5 0 74(_ent(_func -3 15)))
			(_int SIGMA_UCASE_1 6 0 80(_ent(_func -3 16)))
			(_int SIGMA_LCASE_0 7 0 86(_ent(_func -3 17)))
			(_int SIGMA_LCASE_1 8 0 92(_ent(_func -3 18)))
			(_int to_std_logic_vector 9 0 99(_arch(_func -3 -5)))
		)
		(_type(_ext std.standard.NATURAL(0 NATURAL)))
		(_type(_ext ieee.std_logic_1164.STD_LOGIC(1 STD_LOGIC)))
		(_type(_ext ieee.std_logic_1164.STD_LOGIC_VECTOR(1 STD_LOGIC_VECTOR)))
		(_type(_ext ieee.NUMERIC_STD.UNSIGNED(2 UNSIGNED)))
		(_type(_ext std.standard.STRING(0 STRING)))
		(_type(_ext std.standard.CHARACTER(0 CHARACTER)))
		(_type(_ext std.standard.INTEGER(0 INTEGER)))
	)
	(_use(std(standard))(ieee(std_logic_1164))(ieee(NUMERIC_STD)))
	(_model . sha256_pkg 10 -1)
)
I 000052 55 12845         1705869351133 sha256_ARCH
(_unit VHDL(sha256 0 6(sha256_arch 0 22))
	(_version vef)
	(_time 1705869351134 2024.01.21 15:35:51)
	(_source(\../src/sha256.vhd\))
	(_parameters tan)
	(_code 0e5d0f0853595b1d0c0c0b0818555c0806080f0d0c0d0b)
	(_ent
		(_time 1705867572636)
	)
	(_generate MESSAGE_BLOCK_INTERMEDIATE 0 239(_for 4 )
		(_object
			(_cnst(_int i 4 0 240(_arch)))
			(_prcs
				(line__242(_arch 2 0 242(_assignment(_trgt(24(_object 3)))(_sens(4(_range 7)))(_read(4(_range 8))))))
			)
		)
	)
	(_generate MESSAGE_SCHEDULE_INTERMEDIATE_00 0 245(_for 5 )
		(_object
			(_cnst(_int i 5 0 246(_arch)))
			(_prcs
				(line__248(_arch 3 0 248(_assignment(_trgt(25(_object 4)))(_sens(21(_object 4)))(_read(21(_object 4))))))
			)
		)
	)
	(_generate MESSAGE_SCHEDULE_INTERMEDIATE_01 0 251(_for 6 )
		(_object
			(_cnst(_int i 6 0 252(_arch)))
			(_prcs
				(line__254(_arch 4 0 254(_assignment(_trgt(25(_object 5)))(_sens(25(_index 9))(25(_index 10))(25(_index 11))(25(_index 12)))(_read(25(_index 13))(25(_index 14))(25(_index 15))(25(_index 16))))))
			)
		)
	)
	(_object
		(_gen(_int RESET_VALUE -1 0 8 \'0'\ (_ent gms((i 2)))))
		(_port(_int clk -1 0 11(_ent(_in)(_event))))
		(_port(_int rst -1 0 12(_ent(_in)(_event))))
		(_port(_int data_ready -1 0 13(_ent(_in))))
		(_port(_int n_blocks -2 0 14(_ent(_in))))
		(_type(_int ~STD_LOGIC_VECTOR{0~to~{16*WORD_SIZE}-1}~12 0 15(_array -1((_to i 0 i 511)))))
		(_port(_int msg_block_in 0 0 15(_ent(_in))))
		(_port(_int finished -1 0 17(_ent(_out))))
		(_type(_int ~STD_LOGIC_VECTOR{{WORD_SIZE*8}-1~downto~0}~12 0 18(_array -1((_dto i 255 i 0)))))
		(_port(_int data_out 1 0 18(_ent(_out))))
		(_sig(_int HASH_ROUND_COUNTER -2 0 23(_arch(_uni((i 0))))))
		(_sig(_int MSG_BLOCK_COUNTER -2 0 24(_arch(_uni((i 0))))))
		(_sig(_int HASH_02_COUNTER -2 0 25(_arch(_uni((i 0))))))
		(_cnst(_int HASH_02_COUNT_LIMIT -2 0 26(_arch((i 64)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~13 0 29(_array -1((_dto i 31 i 0)))))
		(_sig(_int T1 2 0 29(_arch(_uni((_others(i 2)))))))
		(_sig(_int T2 2 0 30(_arch(_uni((_others(i 2)))))))
		(_sig(_int a 2 0 33(_arch(_uni((_others(i 2)))))))
		(_sig(_int b 2 0 34(_arch(_uni((_others(i 2)))))))
		(_sig(_int c 2 0 35(_arch(_uni((_others(i 2)))))))
		(_sig(_int d 2 0 36(_arch(_uni((_others(i 2)))))))
		(_sig(_int e 2 0 37(_arch(_uni((_others(i 2)))))))
		(_sig(_int f 2 0 38(_arch(_uni((_others(i 2)))))))
		(_sig(_int g 2 0 39(_arch(_uni((_others(i 2)))))))
		(_sig(_int h 2 0 40(_arch(_uni((_others(i 2)))))))
		(_cnst(_int K -3 0 42(_arch(((_string \"01000010100010100010111110011000"\))((_string \"01110001001101110100010010010001"\))((_string \"10110101110000001111101111001111"\))((_string \"11101001101101011101101110100101"\))((_string \"00111001010101101100001001011011"\))((_string \"01011001111100010001000111110001"\))((_string \"10010010001111111000001010100100"\))((_string \"10101011000111000101111011010101"\))((_string \"11011000000001111010101010011000"\))((_string \"00010010100000110101101100000001"\))((_string \"00100100001100011000010110111110"\))((_string \"01010101000011000111110111000011"\))((_string \"01110010101111100101110101110100"\))((_string \"10000000110111101011000111111110"\))((_string \"10011011110111000000011010100111"\))((_string \"11000001100110111111000101110100"\))((_string \"11100100100110110110100111000001"\))((_string \"11101111101111100100011110000110"\))((_string \"00001111110000011001110111000110"\))((_string \"00100100000011001010000111001100"\))((_string \"00101101111010010010110001101111"\))((_string \"01001010011101001000010010101010"\))((_string \"01011100101100001010100111011100"\))((_string \"01110110111110011000100011011010"\))((_string \"10011000001111100101000101010010"\))((_string \"10101000001100011100011001101101"\))((_string \"10110000000000110010011111001000"\))((_string \"10111111010110010111111111000111"\))((_string \"11000110111000000000101111110011"\))((_string \"11010101101001111001000101000111"\))((_string \"00000110110010100110001101010001"\))((_string \"00010100001010010010100101100111"\))((_string \"00100111101101110000101010000101"\))((_string \"00101110000110110010000100111000"\))((_string \"01001101001011000110110111111100"\))((_string \"01010011001110000000110100010011"\))((_string \"01100101000010100111001101010100"\))((_string \"01110110011010100000101010111011"\))((_string \"10000001110000101100100100101110"\))((_string \"10010010011100100010110010000101"\))((_string \"10100010101111111110100010100001"\))((_string \"10101000000110100110011001001011"\))((_string \"11000010010010111000101101110000"\))((_string \"11000111011011000101000110100011"\))((_string \"11010001100100101110100000011001"\))((_string \"11010110100110010000011000100100"\))((_string \"11110100000011100011010110000101"\))((_string \"00010000011010101010000001110000"\))((_string \"00011001101001001100000100010110"\))((_string \"00011110001101110110110000001000"\))((_string \"00100111010010000111011101001100"\))((_string \"00110100101100001011110010110101"\))((_string \"00111001000111000000110010110011"\))((_string \"01001110110110001010101001001010"\))((_string \"01011011100111001100101001001111"\))((_string \"01101000001011100110111111110011"\))((_string \"01110100100011111000001011101110"\))((_string \"01111000101001010110001101101111"\))((_string \"10000100110010000111100000010100"\))((_string \"10001100110001110000001000001000"\))((_string \"10010000101111101111111111111010"\))((_string \"10100100010100000110110011101011"\))((_string \"10111110111110011010001111110111"\))((_string \"11000110011100010111100011110010"\))))))
		(_sig(_int W -3 0 62(_arch(_uni(((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\)))))))
		(_sig(_int M -4 0 83(_arch(_uni))))
		(_sig(_int HV -5 0 85(_arch(_uni))))
		(_sig(_int HV_INITIAL_VALUES -5 0 86(_arch(_uni(((_string \"01101010000010011110011001100111"\))((_string \"10111011011001111010111010000101"\))((_string \"00111100011011101111001101110010"\))((_string \"10100101010011111111010100111010"\))((_string \"01010001000011100101001001111111"\))((_string \"10011011000001010110100010001100"\))((_string \"00011111100000111101100110101011"\))((_string \"01011011111000001100110100011001"\)))))))
		(_sig(_int M_INT -4 0 91(_arch(_uni))))
		(_sig(_int W_INT -3 0 94(_arch(_uni))))
		(_type(_int SHA_256_HASH_CORE_STATE 0 97(_enum1 RESET IDLE READ_MSG_BLOCK PREP_MSG_SCHEDULE_00 PREP_MSG_SCHEDULE_01 PREP_MSG_SCHEDULE_02 PREP_MSG_SCHEDULE_03 HASH_01 HASH_02 HASH_02b HASH_02c HASH_03 DONE (_to i 0 i 12))))
		(_sig(_int CURRENT_STATE 3 0 98(_arch(_uni)(_event))))
		(_sig(_int NEXT_STATE 3 0 98(_arch(_uni))))
		(_sig(_int PREVIOUS_STATE 3 0 99(_arch(_uni((i 2))))))
		(_type(_int ~INTEGER~range~0~to~15~13 0 240(_scalar (_to i 0 i 15))))
		(_type(_int ~INTEGER~range~0~to~15~135 0 246(_scalar (_to i 0 i 15))))
		(_type(_int ~INTEGER~range~16~to~63~13 0 252(_scalar (_to i 16 i 63))))
		(_prcs
			(line__104(_arch 0 0 104(_prcs(_trgt(26))(_sens(0)(1)(2)(3)(7)(9)(26))(_dssslsensitivity 2))))
			(line__159(_arch 1 0 159(_prcs(_trgt(7)(8)(9)(10)(11)(12)(13)(14)(15)(16)(17)(18)(19)(20(t_48_63))(20(t_32_47))(20(t_16_31))(20(t_0_15))(20)(21)(22(7))(22(6))(22(5))(22(4))(22(3))(22(2))(22(1))(22(0))(22))(_sens(0)(1)(26)(3)(7)(9)(10)(11)(12)(13)(14)(15)(16)(17)(18)(19)(20)(21)(22)(23)(24)(25(t_48_63))(25(t_32_47))(25(t_16_31))(25(t_0_15)))(_dssslsensitivity 3))))
			(line__258(_arch 5 0 258(_assignment(_trgt(5))(_sens(26)))))
			(line__261(_arch 6 0 261(_assignment(_alias((data_out)(HV(0))(HV(1))(HV(2))(HV(3))(HV(4))(HV(5))(HV(6))(HV(7))))(_trgt(6))(_sens(22(7))(22(6))(22(5))(22(4))(22(3))(22(2))(22(1))(22(0))))))
		)
		(_subprogram
			(_ext SIGMA_UCASE_1(2 6))
			(_ext CH(2 3))
			(_ext SIGMA_UCASE_0(2 5))
			(_ext MAJ(2 4))
			(_ext SIGMA_LCASE_1(2 8))
			(_ext SIGMA_LCASE_0(2 7))
		)
		(_type(_ext ieee.std_logic_1164.STD_LOGIC(0 STD_LOGIC)))
		(_type(_ext std.standard.NATURAL(1 NATURAL)))
		(_var(_ext sha256.sha256_pkg.WORD_SIZE(2 WORD_SIZE)))
		(_type(_ext sha256.sha256_pkg.K_DATA(2 K_DATA)))
		(_type(_ext sha256.sha256_pkg.M_DATA(2 M_DATA)))
		(_type(_ext sha256.sha256_pkg.H_DATA(2 H_DATA)))
		(_type(_ext ieee.std_logic_1164.STD_ULOGIC(0 STD_ULOGIC)))
		(_type(_ext ieee.NUMERIC_STD.UNSIGNED(3 UNSIGNED)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1526(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1526)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1512(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1512)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1514(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1514)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1516(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1516)))
		(_type(_ext ieee.std_logic_1164.STD_LOGIC_VECTOR(0 STD_LOGIC_VECTOR)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1524(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1524)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1518(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1518)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1520(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1520)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1522(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1522)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1530(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1530)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1528(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1528)))
		(_type(_ext std.standard.INTEGER(1 INTEGER)))
	)
	(_use(ieee(std_logic_1164))(std(standard))(.(sha256_pkg))(ieee(NUMERIC_STD)))
	(_model . sha256_ARCH 17 -1)
)
I 000049 55 4279          1705869351146 behavior
(_unit VHDL(sha256_tb 0 6(behavior 0 10))
	(_version vef)
	(_time 1705869351147 2024.01.21 15:35:51)
	(_source(\../src/sha256_testbench.vhd\))
	(_parameters tan)
	(_code 1e4d1f1943494b0d1a1c0b41491b48191a181c191d)
	(_ent
		(_time 1705867572661)
	)
	(_comp
		(sha256
			(_object
				(_gen(_int RESET_VALUE -1 0 15(_ent((i 2)))))
				(_port(_int clk -1 0 18(_ent (_in))))
				(_port(_int rst -1 0 19(_ent (_in))))
				(_port(_int data_ready -1 0 20(_ent (_in))))
				(_port(_int n_blocks -2 0 21(_ent (_in))))
				(_port(_int msg_block_in 0 0 22(_ent (_in))))
				(_port(_int finished -1 0 23(_ent (_out))))
				(_port(_int data_out 1 0 24(_ent (_out))))
			)
		)
	)
	(_inst uut 0 48(_comp sha256)
		(_gen
			((RESET_VALUE)((i 2)))
		)
		(_port
			((clk)(clk))
			((rst)(rst))
			((data_ready)(data_ready))
			((n_blocks)(n_blocks))
			((msg_block_in)(msg_block_in))
			((finished)(finished))
			((data_out)(data_out))
		)
		(_use(_ent . sha256)
			(_gen
				((RESET_VALUE)((i 2)))
			)
		)
	)
	(_object
		(_type(_int ~STD_LOGIC_VECTOR{0~to~{16*WORD_SIZE}-1}~13 0 22(_array -1((_to i 0 i 511)))))
		(_type(_int ~STD_LOGIC_VECTOR{{WORD_SIZE*8}-1~downto~0}~13 0 24(_array -1((_dto i 255 i 0)))))
		(_cnst(_int WORD_SIZE -2 0 29(_arch((i 32)))))
		(_sig(_int clk -1 0 32(_arch(_uni((i 2))))))
		(_sig(_int rst -1 0 33(_arch(_uni((i 2))))))
		(_sig(_int data_ready -1 0 34(_arch(_uni((i 2))))))
		(_sig(_int n_blocks -2 0 35(_arch(_uni((i 0))))))
		(_type(_int ~STD_LOGIC_VECTOR{0~to~{16*WORD_SIZE}-1}~132 0 36(_array -1((_to i 0 i 511)))))
		(_sig(_int msg_block_in 2 0 36(_arch(_uni((_others(i 2)))))))
		(_sig(_int finished -1 0 39(_arch(_uni))))
		(_type(_int ~STD_LOGIC_VECTOR{{WORD_SIZE*8}-1~downto~0}~134 0 40(_array -1((_dto i 255 i 0)))))
		(_sig(_int data_out 3 0 40(_arch(_uni))))
		(_cnst(_int clk_period -3 0 43(_arch((ns 4621819117588971520)))))
		(_cnst(_int \clk_period/2\ -3 0 0(_int gms(_code 2))))
		(_prcs
			(clk_process(_arch 0 0 63(_prcs(_wait_for)(_trgt(0)))))
			(stim_proc(_arch 1 0 72(_prcs(_wait_for)(_trgt(1)(2)(3)(4))(_mon)(_read(6)))))
		)
		(_type(_ext ieee.std_logic_1164.STD_LOGIC(0 STD_LOGIC)))
		(_type(_ext std.standard.NATURAL(1 NATURAL)))
		(_var(_ext sha256.sha256_pkg.WORD_SIZE(2 WORD_SIZE)))
		(_type(_ext std.standard.TIME(1 TIME)))
	)
	(_use(ieee(std_logic_1164))(std(standard))(.(sha256_pkg))(ieee(NUMERIC_STD)))
	(_static
		
		
		(1752392008 1668180256 1701999215 1881175139 544372079 1981833580 1969581153 1650532466 99)
	)
	(_model . behavior 3 -1)
)
I 000052 55 12845         1705869367524 sha256_ARCH
(_unit VHDL(sha256 0 6(sha256_arch 0 22))
	(_version vef)
	(_time 1705869367525 2024.01.21 15:36:07)
	(_source(\../src/sha256.vhd\))
	(_parameters tan)
	(_code 151314121842400617171013034e47131d131416171610)
	(_ent
		(_time 1705867572636)
	)
	(_generate MESSAGE_BLOCK_INTERMEDIATE 0 239(_for 4 )
		(_object
			(_cnst(_int i 4 0 240(_arch)))
			(_prcs
				(line__242(_arch 2 0 242(_assignment(_trgt(24(_object 3)))(_sens(4(_range 7)))(_read(4(_range 8))))))
			)
		)
	)
	(_generate MESSAGE_SCHEDULE_INTERMEDIATE_00 0 245(_for 5 )
		(_object
			(_cnst(_int i 5 0 246(_arch)))
			(_prcs
				(line__248(_arch 3 0 248(_assignment(_trgt(25(_object 4)))(_sens(21(_object 4)))(_read(21(_object 4))))))
			)
		)
	)
	(_generate MESSAGE_SCHEDULE_INTERMEDIATE_01 0 251(_for 6 )
		(_object
			(_cnst(_int i 6 0 252(_arch)))
			(_prcs
				(line__254(_arch 4 0 254(_assignment(_trgt(25(_object 5)))(_sens(25(_index 9))(25(_index 10))(25(_index 11))(25(_index 12)))(_read(25(_index 13))(25(_index 14))(25(_index 15))(25(_index 16))))))
			)
		)
	)
	(_object
		(_gen(_int RESET_VALUE -1 0 8 \'0'\ (_ent gms((i 2)))))
		(_port(_int clk -1 0 11(_ent(_in)(_event))))
		(_port(_int rst -1 0 12(_ent(_in)(_event))))
		(_port(_int data_ready -1 0 13(_ent(_in))))
		(_port(_int n_blocks -2 0 14(_ent(_in))))
		(_type(_int ~STD_LOGIC_VECTOR{0~to~{16*WORD_SIZE}-1}~12 0 15(_array -1((_to i 0 i 511)))))
		(_port(_int msg_block_in 0 0 15(_ent(_in))))
		(_port(_int finished -1 0 17(_ent(_out))))
		(_type(_int ~STD_LOGIC_VECTOR{{WORD_SIZE*8}-1~downto~0}~12 0 18(_array -1((_dto i 255 i 0)))))
		(_port(_int data_out 1 0 18(_ent(_out))))
		(_sig(_int HASH_ROUND_COUNTER -2 0 23(_arch(_uni((i 0))))))
		(_sig(_int MSG_BLOCK_COUNTER -2 0 24(_arch(_uni((i 0))))))
		(_sig(_int HASH_02_COUNTER -2 0 25(_arch(_uni((i 0))))))
		(_cnst(_int HASH_02_COUNT_LIMIT -2 0 26(_arch((i 64)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~13 0 29(_array -1((_dto i 31 i 0)))))
		(_sig(_int T1 2 0 29(_arch(_uni((_others(i 2)))))))
		(_sig(_int T2 2 0 30(_arch(_uni((_others(i 2)))))))
		(_sig(_int a 2 0 33(_arch(_uni((_others(i 2)))))))
		(_sig(_int b 2 0 34(_arch(_uni((_others(i 2)))))))
		(_sig(_int c 2 0 35(_arch(_uni((_others(i 2)))))))
		(_sig(_int d 2 0 36(_arch(_uni((_others(i 2)))))))
		(_sig(_int e 2 0 37(_arch(_uni((_others(i 2)))))))
		(_sig(_int f 2 0 38(_arch(_uni((_others(i 2)))))))
		(_sig(_int g 2 0 39(_arch(_uni((_others(i 2)))))))
		(_sig(_int h 2 0 40(_arch(_uni((_others(i 2)))))))
		(_cnst(_int K -3 0 42(_arch(((_string \"01000010100010100010111110011000"\))((_string \"01110001001101110100010010010001"\))((_string \"10110101110000001111101111001111"\))((_string \"11101001101101011101101110100101"\))((_string \"00111001010101101100001001011011"\))((_string \"01011001111100010001000111110001"\))((_string \"10010010001111111000001010100100"\))((_string \"10101011000111000101111011010101"\))((_string \"11011000000001111010101010011000"\))((_string \"00010010100000110101101100000001"\))((_string \"00100100001100011000010110111110"\))((_string \"01010101000011000111110111000011"\))((_string \"01110010101111100101110101110100"\))((_string \"10000000110111101011000111111110"\))((_string \"10011011110111000000011010100111"\))((_string \"11000001100110111111000101110100"\))((_string \"11100100100110110110100111000001"\))((_string \"11101111101111100100011110000110"\))((_string \"00001111110000011001110111000110"\))((_string \"00100100000011001010000111001100"\))((_string \"00101101111010010010110001101111"\))((_string \"01001010011101001000010010101010"\))((_string \"01011100101100001010100111011100"\))((_string \"01110110111110011000100011011010"\))((_string \"10011000001111100101000101010010"\))((_string \"10101000001100011100011001101101"\))((_string \"10110000000000110010011111001000"\))((_string \"10111111010110010111111111000111"\))((_string \"11000110111000000000101111110011"\))((_string \"11010101101001111001000101000111"\))((_string \"00000110110010100110001101010001"\))((_string \"00010100001010010010100101100111"\))((_string \"00100111101101110000101010000101"\))((_string \"00101110000110110010000100111000"\))((_string \"01001101001011000110110111111100"\))((_string \"01010011001110000000110100010011"\))((_string \"01100101000010100111001101010100"\))((_string \"01110110011010100000101010111011"\))((_string \"10000001110000101100100100101110"\))((_string \"10010010011100100010110010000101"\))((_string \"10100010101111111110100010100001"\))((_string \"10101000000110100110011001001011"\))((_string \"11000010010010111000101101110000"\))((_string \"11000111011011000101000110100011"\))((_string \"11010001100100101110100000011001"\))((_string \"11010110100110010000011000100100"\))((_string \"11110100000011100011010110000101"\))((_string \"00010000011010101010000001110000"\))((_string \"00011001101001001100000100010110"\))((_string \"00011110001101110110110000001000"\))((_string \"00100111010010000111011101001100"\))((_string \"00110100101100001011110010110101"\))((_string \"00111001000111000000110010110011"\))((_string \"01001110110110001010101001001010"\))((_string \"01011011100111001100101001001111"\))((_string \"01101000001011100110111111110011"\))((_string \"01110100100011111000001011101110"\))((_string \"01111000101001010110001101101111"\))((_string \"10000100110010000111100000010100"\))((_string \"10001100110001110000001000001000"\))((_string \"10010000101111101111111111111010"\))((_string \"10100100010100000110110011101011"\))((_string \"10111110111110011010001111110111"\))((_string \"11000110011100010111100011110010"\))))))
		(_sig(_int W -3 0 62(_arch(_uni(((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\)))))))
		(_sig(_int M -4 0 83(_arch(_uni))))
		(_sig(_int HV -5 0 85(_arch(_uni))))
		(_sig(_int HV_INITIAL_VALUES -5 0 86(_arch(_uni(((_string \"01101010000010011110011001100111"\))((_string \"10111011011001111010111010000101"\))((_string \"00111100011011101111001101110010"\))((_string \"10100101010011111111010100111010"\))((_string \"01010001000011100101001001111111"\))((_string \"10011011000001010110100010001100"\))((_string \"00011111100000111101100110101011"\))((_string \"01011011111000001100110100011001"\)))))))
		(_sig(_int M_INT -4 0 91(_arch(_uni))))
		(_sig(_int W_INT -3 0 94(_arch(_uni))))
		(_type(_int SHA_256_HASH_CORE_STATE 0 97(_enum1 RESET IDLE READ_MSG_BLOCK PREP_MSG_SCHEDULE_00 PREP_MSG_SCHEDULE_01 PREP_MSG_SCHEDULE_02 PREP_MSG_SCHEDULE_03 HASH_01 HASH_02 HASH_02b HASH_02c HASH_03 DONE (_to i 0 i 12))))
		(_sig(_int CURRENT_STATE 3 0 98(_arch(_uni)(_event))))
		(_sig(_int NEXT_STATE 3 0 98(_arch(_uni))))
		(_sig(_int PREVIOUS_STATE 3 0 99(_arch(_uni((i 2))))))
		(_type(_int ~INTEGER~range~0~to~15~13 0 240(_scalar (_to i 0 i 15))))
		(_type(_int ~INTEGER~range~0~to~15~135 0 246(_scalar (_to i 0 i 15))))
		(_type(_int ~INTEGER~range~16~to~63~13 0 252(_scalar (_to i 16 i 63))))
		(_prcs
			(line__104(_arch 0 0 104(_prcs(_trgt(26))(_sens(0)(1)(7)(9)(26)(2)(3))(_dssslsensitivity 2))))
			(line__159(_arch 1 0 159(_prcs(_trgt(7)(8)(9)(10)(11)(12)(13)(14)(15)(16)(17)(18)(19)(20(t_48_63))(20(t_32_47))(20(t_16_31))(20(t_0_15))(20)(21)(22(7))(22(6))(22(5))(22(4))(22(3))(22(2))(22(1))(22(0))(22))(_sens(26)(0)(1)(7)(9)(10)(11)(12)(13)(14)(15)(16)(17)(18)(19)(20)(21)(22)(23)(24)(25(t_48_63))(25(t_32_47))(25(t_16_31))(25(t_0_15))(3))(_dssslsensitivity 3))))
			(line__258(_arch 5 0 258(_assignment(_trgt(5))(_sens(26)))))
			(line__261(_arch 6 0 261(_assignment(_alias((data_out)(HV(0))(HV(1))(HV(2))(HV(3))(HV(4))(HV(5))(HV(6))(HV(7))))(_trgt(6))(_sens(22(7))(22(6))(22(5))(22(4))(22(3))(22(2))(22(1))(22(0))))))
		)
		(_subprogram
			(_ext SIGMA_UCASE_1(2 6))
			(_ext CH(2 3))
			(_ext SIGMA_UCASE_0(2 5))
			(_ext MAJ(2 4))
			(_ext SIGMA_LCASE_1(2 8))
			(_ext SIGMA_LCASE_0(2 7))
		)
		(_type(_ext ieee.std_logic_1164.STD_LOGIC(0 STD_LOGIC)))
		(_type(_ext std.standard.NATURAL(1 NATURAL)))
		(_var(_ext sha256.sha256_pkg.WORD_SIZE(2 WORD_SIZE)))
		(_type(_ext sha256.sha256_pkg.K_DATA(2 K_DATA)))
		(_type(_ext sha256.sha256_pkg.M_DATA(2 M_DATA)))
		(_type(_ext sha256.sha256_pkg.H_DATA(2 H_DATA)))
		(_type(_ext ieee.std_logic_1164.STD_ULOGIC(0 STD_ULOGIC)))
		(_type(_ext ieee.NUMERIC_STD.UNSIGNED(3 UNSIGNED)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1526(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1526)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1512(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1512)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1514(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1514)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1516(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1516)))
		(_type(_ext ieee.std_logic_1164.STD_LOGIC_VECTOR(0 STD_LOGIC_VECTOR)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1524(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1524)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1518(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1518)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1520(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1520)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1522(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1522)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1530(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1530)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1528(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1528)))
		(_type(_ext std.standard.INTEGER(1 INTEGER)))
	)
	(_use(ieee(std_logic_1164))(std(standard))(.(sha256_pkg))(ieee(NUMERIC_STD)))
	(_model . sha256_ARCH 17 -1)
)
I 000042 55 4005 1705867545881 sha256_pkg
(_unit VHDL(sha256_pkg 0 5(sha256_pkg 0 39))
	(_version vef)
	(_time 1705869367536 2024.01.21 15:36:07)
	(_source(\../src/sha256_pkg.vhd\))
	(_parameters tan)
	(_code 24222520287371372024317b732172232422762223)
	(_ent
		(_time 1705867545881)
	)
	(_object
		(_cnst(_int WORD_SIZE -1 0 6(_ent((i 32)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~15 0 8(_array -2((_dto i 31 i 0)))))
		(_type(_int K_DATA 0 8(_array 0((_to i 0 i 63)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~152 0 9(_array -2((_dto i 31 i 0)))))
		(_type(_int M_DATA 0 9(_array 2((_to i 0 i 15)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~154 0 10(_array -2((_dto i 31 i 0)))))
		(_type(_int H_DATA 0 10(_array 4((_to i 0 i 7)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~156 0 13(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~158 0 15(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1510 0 17(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1512 0 19(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1514 0 20(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1516 0 21(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1518 0 23(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1520 0 24(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1522 0 25(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1524 0 28(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1526 0 30(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1528 0 32(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1530 0 34(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~16 0 40(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~162 0 46(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~164 0 52(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~166 0 58(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~168 0 59(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1610 0 60(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1612 0 66(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1614 0 67(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1616 0 68(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1618 0 74(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1620 0 80(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1622 0 86(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1624 0 92(_array -2((_dto i 31 i 0)))))
		(_subprogram
			(_int ROTR 0 0 40(_ent(_func)))
			(_int ROTL 1 0 46(_ent(_func)))
			(_int SHR 2 0 52(_ent(_func)))
			(_int CH 3 0 58(_ent(_func)))
			(_int MAJ 4 0 66(_ent(_func)))
			(_int SIGMA_UCASE_0 5 0 74(_ent(_func -3 15)))
			(_int SIGMA_UCASE_1 6 0 80(_ent(_func -3 16)))
			(_int SIGMA_LCASE_0 7 0 86(_ent(_func -3 17)))
			(_int SIGMA_LCASE_1 8 0 92(_ent(_func -3 18)))
		)
		(_type(_ext std.standard.NATURAL(0 NATURAL)))
		(_type(_ext ieee.std_logic_1164.STD_LOGIC(1 STD_LOGIC)))
		(_type(_ext ieee.std_logic_1164.STD_LOGIC_VECTOR(1 STD_LOGIC_VECTOR)))
		(_type(_ext ieee.NUMERIC_STD.UNSIGNED(2 UNSIGNED)))
		(_type(_ext std.standard.INTEGER(0 INTEGER)))
	)
	(_use(std(standard))(ieee(std_logic_1164))(ieee(NUMERIC_STD)))
	(_model . sha256_pkg 9 -1)
)
I 000049 55 4279          1705869367543 behavior
(_unit VHDL(sha256_tb 0 6(behavior 0 10))
	(_version vef)
	(_time 1705869367544 2024.01.21 15:36:07)
	(_source(\../src/sha256_testbench.vhd\))
	(_parameters tan)
	(_code 24222520287371372026317b732172232022262327)
	(_ent
		(_time 1705867572661)
	)
	(_comp
		(sha256
			(_object
				(_gen(_int RESET_VALUE -1 0 15(_ent((i 2)))))
				(_port(_int clk -1 0 18(_ent (_in))))
				(_port(_int rst -1 0 19(_ent (_in))))
				(_port(_int data_ready -1 0 20(_ent (_in))))
				(_port(_int n_blocks -2 0 21(_ent (_in))))
				(_port(_int msg_block_in 0 0 22(_ent (_in))))
				(_port(_int finished -1 0 23(_ent (_out))))
				(_port(_int data_out 1 0 24(_ent (_out))))
			)
		)
	)
	(_inst uut 0 48(_comp sha256)
		(_gen
			((RESET_VALUE)((i 2)))
		)
		(_port
			((clk)(clk))
			((rst)(rst))
			((data_ready)(data_ready))
			((n_blocks)(n_blocks))
			((msg_block_in)(msg_block_in))
			((finished)(finished))
			((data_out)(data_out))
		)
		(_use(_ent . sha256)
			(_gen
				((RESET_VALUE)((i 2)))
			)
		)
	)
	(_object
		(_type(_int ~STD_LOGIC_VECTOR{0~to~{16*WORD_SIZE}-1}~13 0 22(_array -1((_to i 0 i 511)))))
		(_type(_int ~STD_LOGIC_VECTOR{{WORD_SIZE*8}-1~downto~0}~13 0 24(_array -1((_dto i 255 i 0)))))
		(_cnst(_int WORD_SIZE -2 0 29(_arch((i 32)))))
		(_sig(_int clk -1 0 32(_arch(_uni((i 2))))))
		(_sig(_int rst -1 0 33(_arch(_uni((i 2))))))
		(_sig(_int data_ready -1 0 34(_arch(_uni((i 2))))))
		(_sig(_int n_blocks -2 0 35(_arch(_uni((i 0))))))
		(_type(_int ~STD_LOGIC_VECTOR{0~to~{16*WORD_SIZE}-1}~132 0 36(_array -1((_to i 0 i 511)))))
		(_sig(_int msg_block_in 2 0 36(_arch(_uni((_others(i 2)))))))
		(_sig(_int finished -1 0 39(_arch(_uni))))
		(_type(_int ~STD_LOGIC_VECTOR{{WORD_SIZE*8}-1~downto~0}~134 0 40(_array -1((_dto i 255 i 0)))))
		(_sig(_int data_out 3 0 40(_arch(_uni))))
		(_cnst(_int clk_period -3 0 43(_arch((ns 4621819117588971520)))))
		(_cnst(_int \clk_period/2\ -3 0 0(_int gms(_code 2))))
		(_prcs
			(clk_process(_arch 0 0 63(_prcs(_wait_for)(_trgt(0)))))
			(stim_proc(_arch 1 0 72(_prcs(_wait_for)(_trgt(1)(2)(3)(4))(_mon)(_read(6)))))
		)
		(_type(_ext ieee.std_logic_1164.STD_LOGIC(0 STD_LOGIC)))
		(_type(_ext std.standard.NATURAL(1 NATURAL)))
		(_var(_ext sha256.sha256_pkg.WORD_SIZE(2 WORD_SIZE)))
		(_type(_ext std.standard.TIME(1 TIME)))
	)
	(_use(ieee(std_logic_1164))(std(standard))(.(sha256_pkg))(ieee(NUMERIC_STD)))
	(_static
		
		
		(1752392008 1668180256 1701999215 1881175139 544372079 1981833580 1969581153 1650532466 99)
	)
	(_model . behavior 3 -1)
)
I 000049 55 4279          1705869440206 behavior
(_unit VHDL(sha256_tb 0 6(behavior 0 10))
	(_version vef)
	(_time 1705869440207 2024.01.21 15:37:20)
	(_source(\../src/sha256_testbench.vhd\))
	(_parameters tan)
	(_code f5f0a2a5f8a2a0e6f1f7e0aaa2f0a3f2f1f3f7f2f6)
	(_ent
		(_time 1705867572661)
	)
	(_comp
		(sha256
			(_object
				(_gen(_int RESET_VALUE -1 0 15(_ent((i 2)))))
				(_port(_int clk -1 0 18(_ent (_in))))
				(_port(_int rst -1 0 19(_ent (_in))))
				(_port(_int data_ready -1 0 20(_ent (_in))))
				(_port(_int n_blocks -2 0 21(_ent (_in))))
				(_port(_int msg_block_in 0 0 22(_ent (_in))))
				(_port(_int finished -1 0 23(_ent (_out))))
				(_port(_int data_out 1 0 24(_ent (_out))))
			)
		)
	)
	(_inst uut 0 48(_comp sha256)
		(_gen
			((RESET_VALUE)((i 2)))
		)
		(_port
			((clk)(clk))
			((rst)(rst))
			((data_ready)(data_ready))
			((n_blocks)(n_blocks))
			((msg_block_in)(msg_block_in))
			((finished)(finished))
			((data_out)(data_out))
		)
		(_use(_ent . sha256)
			(_gen
				((RESET_VALUE)((i 2)))
			)
		)
	)
	(_object
		(_type(_int ~STD_LOGIC_VECTOR{0~to~{16*WORD_SIZE}-1}~13 0 22(_array -1((_to i 0 i 511)))))
		(_type(_int ~STD_LOGIC_VECTOR{{WORD_SIZE*8}-1~downto~0}~13 0 24(_array -1((_dto i 255 i 0)))))
		(_cnst(_int WORD_SIZE -2 0 29(_arch((i 32)))))
		(_sig(_int clk -1 0 32(_arch(_uni((i 2))))))
		(_sig(_int rst -1 0 33(_arch(_uni((i 2))))))
		(_sig(_int data_ready -1 0 34(_arch(_uni((i 2))))))
		(_sig(_int n_blocks -2 0 35(_arch(_uni((i 0))))))
		(_type(_int ~STD_LOGIC_VECTOR{0~to~{16*WORD_SIZE}-1}~132 0 36(_array -1((_to i 0 i 511)))))
		(_sig(_int msg_block_in 2 0 36(_arch(_uni((_others(i 2)))))))
		(_sig(_int finished -1 0 39(_arch(_uni))))
		(_type(_int ~STD_LOGIC_VECTOR{{WORD_SIZE*8}-1~downto~0}~134 0 40(_array -1((_dto i 255 i 0)))))
		(_sig(_int data_out 3 0 40(_arch(_uni))))
		(_cnst(_int clk_period -3 0 43(_arch((ns 4621819117588971520)))))
		(_cnst(_int \clk_period/2\ -3 0 0(_int gms(_code 2))))
		(_prcs
			(clk_process(_arch 0 0 63(_prcs(_wait_for)(_trgt(0)))))
			(stim_proc(_arch 1 0 72(_prcs(_wait_for)(_trgt(1)(2)(3)(4))(_mon)(_read(6)))))
		)
		(_type(_ext ieee.std_logic_1164.STD_LOGIC(0 STD_LOGIC)))
		(_type(_ext std.standard.NATURAL(1 NATURAL)))
		(_var(_ext sha256.sha256_pkg.WORD_SIZE(2 WORD_SIZE)))
		(_type(_ext std.standard.TIME(1 TIME)))
	)
	(_use(ieee(std_logic_1164))(std(standard))(.(sha256_pkg))(ieee(NUMERIC_STD)))
	(_static
		
		
		(1752392008 1668180256 1701999215 1881175139 544372079 1981833580 1969581153 1650532466 99)
	)
	(_model . behavior 3 -1)
)
I 000049 55 4279          1705869537193 behavior
(_unit VHDL(sha256_tb 0 6(behavior 0 10))
	(_version vef)
	(_time 1705869537194 2024.01.21 15:38:57)
	(_source(\../src/sha256_testbench.vhd\))
	(_parameters tan)
	(_code dd8bd68f818a88ced9dfc8828ad88bdad9dbdfdade)
	(_ent
		(_time 1705867572661)
	)
	(_comp
		(sha256
			(_object
				(_gen(_int RESET_VALUE -1 0 15(_ent((i 2)))))
				(_port(_int clk -1 0 18(_ent (_in))))
				(_port(_int rst -1 0 19(_ent (_in))))
				(_port(_int data_ready -1 0 20(_ent (_in))))
				(_port(_int n_blocks -2 0 21(_ent (_in))))
				(_port(_int msg_block_in 0 0 22(_ent (_in))))
				(_port(_int finished -1 0 23(_ent (_out))))
				(_port(_int data_out 1 0 24(_ent (_out))))
			)
		)
	)
	(_inst uut 0 48(_comp sha256)
		(_gen
			((RESET_VALUE)((i 2)))
		)
		(_port
			((clk)(clk))
			((rst)(rst))
			((data_ready)(data_ready))
			((n_blocks)(n_blocks))
			((msg_block_in)(msg_block_in))
			((finished)(finished))
			((data_out)(data_out))
		)
		(_use(_ent . sha256)
			(_gen
				((RESET_VALUE)((i 2)))
			)
		)
	)
	(_object
		(_type(_int ~STD_LOGIC_VECTOR{0~to~{16*WORD_SIZE}-1}~13 0 22(_array -1((_to i 0 i 511)))))
		(_type(_int ~STD_LOGIC_VECTOR{{WORD_SIZE*8}-1~downto~0}~13 0 24(_array -1((_dto i 255 i 0)))))
		(_cnst(_int WORD_SIZE -2 0 29(_arch((i 32)))))
		(_sig(_int clk -1 0 32(_arch(_uni((i 2))))))
		(_sig(_int rst -1 0 33(_arch(_uni((i 2))))))
		(_sig(_int data_ready -1 0 34(_arch(_uni((i 2))))))
		(_sig(_int n_blocks -2 0 35(_arch(_uni((i 0))))))
		(_type(_int ~STD_LOGIC_VECTOR{0~to~{16*WORD_SIZE}-1}~132 0 36(_array -1((_to i 0 i 511)))))
		(_sig(_int msg_block_in 2 0 36(_arch(_uni((_others(i 2)))))))
		(_sig(_int finished -1 0 39(_arch(_uni))))
		(_type(_int ~STD_LOGIC_VECTOR{{WORD_SIZE*8}-1~downto~0}~134 0 40(_array -1((_dto i 255 i 0)))))
		(_sig(_int data_out 3 0 40(_arch(_uni))))
		(_cnst(_int clk_period -3 0 43(_arch((ns 4621819117588971520)))))
		(_cnst(_int \clk_period/2\ -3 0 0(_int gms(_code 2))))
		(_prcs
			(clk_process(_arch 0 0 63(_prcs(_wait_for)(_trgt(0)))))
			(stim_proc(_arch 1 0 72(_prcs(_wait_for)(_trgt(1)(2)(3)(4))(_mon)(_read(6)))))
		)
		(_type(_ext ieee.std_logic_1164.STD_LOGIC(0 STD_LOGIC)))
		(_type(_ext std.standard.NATURAL(1 NATURAL)))
		(_var(_ext sha256.sha256_pkg.WORD_SIZE(2 WORD_SIZE)))
		(_type(_ext std.standard.TIME(1 TIME)))
	)
	(_use(ieee(std_logic_1164))(std(standard))(.(sha256_pkg))(ieee(NUMERIC_STD)))
	(_static
		(33751810 50463234 33751810 33751554 33751810 50528770 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018)
		
		(1752392008 1668180256 1701999215 1881175139 544372079 1981833580 1969581153 1650532466 99)
	)
	(_model . behavior 3 -1)
)
I 000049 55 4279          1705869583838 behavior
(_unit VHDL(sha256_tb 0 6(behavior 0 10))
	(_version vef)
	(_time 1705869583839 2024.01.21 15:39:43)
	(_source(\../src/sha256_testbench.vhd\))
	(_parameters tan)
	(_code 0d0f580b515a581e090f18525a085b0a090b0f0a0e)
	(_ent
		(_time 1705867572661)
	)
	(_comp
		(sha256
			(_object
				(_gen(_int RESET_VALUE -1 0 15(_ent((i 2)))))
				(_port(_int clk -1 0 18(_ent (_in))))
				(_port(_int rst -1 0 19(_ent (_in))))
				(_port(_int data_ready -1 0 20(_ent (_in))))
				(_port(_int n_blocks -2 0 21(_ent (_in))))
				(_port(_int msg_block_in 0 0 22(_ent (_in))))
				(_port(_int finished -1 0 23(_ent (_out))))
				(_port(_int data_out 1 0 24(_ent (_out))))
			)
		)
	)
	(_inst uut 0 48(_comp sha256)
		(_gen
			((RESET_VALUE)((i 2)))
		)
		(_port
			((clk)(clk))
			((rst)(rst))
			((data_ready)(data_ready))
			((n_blocks)(n_blocks))
			((msg_block_in)(msg_block_in))
			((finished)(finished))
			((data_out)(data_out))
		)
		(_use(_ent . sha256)
			(_gen
				((RESET_VALUE)((i 2)))
			)
		)
	)
	(_object
		(_type(_int ~STD_LOGIC_VECTOR{0~to~{16*WORD_SIZE}-1}~13 0 22(_array -1((_to i 0 i 511)))))
		(_type(_int ~STD_LOGIC_VECTOR{{WORD_SIZE*8}-1~downto~0}~13 0 24(_array -1((_dto i 255 i 0)))))
		(_cnst(_int WORD_SIZE -2 0 29(_arch((i 32)))))
		(_sig(_int clk -1 0 32(_arch(_uni((i 2))))))
		(_sig(_int rst -1 0 33(_arch(_uni((i 2))))))
		(_sig(_int data_ready -1 0 34(_arch(_uni((i 2))))))
		(_sig(_int n_blocks -2 0 35(_arch(_uni((i 0))))))
		(_type(_int ~STD_LOGIC_VECTOR{0~to~{16*WORD_SIZE}-1}~132 0 36(_array -1((_to i 0 i 511)))))
		(_sig(_int msg_block_in 2 0 36(_arch(_uni((_others(i 2)))))))
		(_sig(_int finished -1 0 39(_arch(_uni))))
		(_type(_int ~STD_LOGIC_VECTOR{{WORD_SIZE*8}-1~downto~0}~134 0 40(_array -1((_dto i 255 i 0)))))
		(_sig(_int data_out 3 0 40(_arch(_uni))))
		(_cnst(_int clk_period -3 0 43(_arch((ns 4621819117588971520)))))
		(_cnst(_int \clk_period/2\ -3 0 0(_int gms(_code 2))))
		(_prcs
			(clk_process(_arch 0 0 63(_prcs(_wait_for)(_trgt(0)))))
			(stim_proc(_arch 1 0 72(_prcs(_wait_for)(_trgt(1)(2)(3)(4))(_mon)(_read(6)))))
		)
		(_type(_ext ieee.std_logic_1164.STD_LOGIC(0 STD_LOGIC)))
		(_type(_ext std.standard.NATURAL(1 NATURAL)))
		(_var(_ext sha256.sha256_pkg.WORD_SIZE(2 WORD_SIZE)))
		(_type(_ext std.standard.TIME(1 TIME)))
	)
	(_use(ieee(std_logic_1164))(std(standard))(.(sha256_pkg))(ieee(NUMERIC_STD)))
	(_static
		
		
		(1752392008 1668180256 1701999215 1881175139 544372079 1981833580 1969581153 1650532466 99)
	)
	(_model . behavior 3 -1)
)
I 000049 55 4279          1705869666928 behavior
(_unit VHDL(sha256_tb 0 6(behavior 0 10))
	(_version vef)
	(_time 1705869666929 2024.01.21 15:41:06)
	(_source(\../src/sha256_testbench.vhd\))
	(_parameters tan)
	(_code 93c5939c98c4c68094c586ccc496c5949795919490)
	(_ent
		(_time 1705867572661)
	)
	(_comp
		(sha256
			(_object
				(_gen(_int RESET_VALUE -1 0 15(_ent((i 2)))))
				(_port(_int clk -1 0 18(_ent (_in))))
				(_port(_int rst -1 0 19(_ent (_in))))
				(_port(_int data_ready -1 0 20(_ent (_in))))
				(_port(_int n_blocks -2 0 21(_ent (_in))))
				(_port(_int msg_block_in 0 0 22(_ent (_in))))
				(_port(_int finished -1 0 23(_ent (_out))))
				(_port(_int data_out 1 0 24(_ent (_out))))
			)
		)
	)
	(_inst uut 0 48(_comp sha256)
		(_gen
			((RESET_VALUE)((i 2)))
		)
		(_port
			((clk)(clk))
			((rst)(rst))
			((data_ready)(data_ready))
			((n_blocks)(n_blocks))
			((msg_block_in)(msg_block_in))
			((finished)(finished))
			((data_out)(data_out))
		)
		(_use(_ent . sha256)
			(_gen
				((RESET_VALUE)((i 2)))
			)
		)
	)
	(_object
		(_type(_int ~STD_LOGIC_VECTOR{0~to~{16*WORD_SIZE}-1}~13 0 22(_array -1((_to i 0 i 511)))))
		(_type(_int ~STD_LOGIC_VECTOR{{WORD_SIZE*8}-1~downto~0}~13 0 24(_array -1((_dto i 255 i 0)))))
		(_cnst(_int WORD_SIZE -2 0 29(_arch((i 32)))))
		(_sig(_int clk -1 0 32(_arch(_uni((i 2))))))
		(_sig(_int rst -1 0 33(_arch(_uni((i 2))))))
		(_sig(_int data_ready -1 0 34(_arch(_uni((i 2))))))
		(_sig(_int n_blocks -2 0 35(_arch(_uni((i 0))))))
		(_type(_int ~STD_LOGIC_VECTOR{0~to~{16*WORD_SIZE}-1}~132 0 36(_array -1((_to i 0 i 511)))))
		(_sig(_int msg_block_in 2 0 36(_arch(_uni((_others(i 2)))))))
		(_sig(_int finished -1 0 39(_arch(_uni))))
		(_type(_int ~STD_LOGIC_VECTOR{{WORD_SIZE*8}-1~downto~0}~134 0 40(_array -1((_dto i 255 i 0)))))
		(_sig(_int data_out 3 0 40(_arch(_uni))))
		(_cnst(_int clk_period -3 0 43(_arch((ns 4621819117588971520)))))
		(_cnst(_int \clk_period/2\ -3 0 0(_int gms(_code 2))))
		(_prcs
			(clk_process(_arch 0 0 63(_prcs(_wait_for)(_trgt(0)))))
			(stim_proc(_arch 1 0 72(_prcs(_wait_for)(_trgt(2)(3)(4))(_mon)(_read(5)(6)))))
		)
		(_type(_ext ieee.std_logic_1164.STD_LOGIC(0 STD_LOGIC)))
		(_type(_ext std.standard.NATURAL(1 NATURAL)))
		(_var(_ext sha256.sha256_pkg.WORD_SIZE(2 WORD_SIZE)))
		(_type(_ext std.standard.TIME(1 TIME)))
	)
	(_use(ieee(std_logic_1164))(std(standard))(.(sha256_pkg))(ieee(NUMERIC_STD)))
	(_static
		(33751810 50463234 33751810 33751554 33751810 50528770 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018)
		
		(1752392008 1668180256 1701999215 1881175139 544372079 1981833580 1969581153 1650532466 99)
	)
	(_model . behavior 3 -1)
)
I 000049 55 4279          1705869677331 behavior
(_unit VHDL(sha256_tb 0 6(behavior 0 10))
	(_version vef)
	(_time 1705869677332 2024.01.21 15:41:17)
	(_source(\../src/sha256_testbench.vhd\))
	(_parameters tan)
	(_code 3a6e6a3f636d6f293d682f656d3f6c3d3e3c383d39)
	(_ent
		(_time 1705867572661)
	)
	(_comp
		(sha256
			(_object
				(_gen(_int RESET_VALUE -1 0 15(_ent((i 2)))))
				(_port(_int clk -1 0 18(_ent (_in))))
				(_port(_int rst -1 0 19(_ent (_in))))
				(_port(_int data_ready -1 0 20(_ent (_in))))
				(_port(_int n_blocks -2 0 21(_ent (_in))))
				(_port(_int msg_block_in 0 0 22(_ent (_in))))
				(_port(_int finished -1 0 23(_ent (_out))))
				(_port(_int data_out 1 0 24(_ent (_out))))
			)
		)
	)
	(_inst uut 0 48(_comp sha256)
		(_gen
			((RESET_VALUE)((i 2)))
		)
		(_port
			((clk)(clk))
			((rst)(rst))
			((data_ready)(data_ready))
			((n_blocks)(n_blocks))
			((msg_block_in)(msg_block_in))
			((finished)(finished))
			((data_out)(data_out))
		)
		(_use(_ent . sha256)
			(_gen
				((RESET_VALUE)((i 2)))
			)
		)
	)
	(_object
		(_type(_int ~STD_LOGIC_VECTOR{0~to~{16*WORD_SIZE}-1}~13 0 22(_array -1((_to i 0 i 511)))))
		(_type(_int ~STD_LOGIC_VECTOR{{WORD_SIZE*8}-1~downto~0}~13 0 24(_array -1((_dto i 255 i 0)))))
		(_cnst(_int WORD_SIZE -2 0 29(_arch((i 32)))))
		(_sig(_int clk -1 0 32(_arch(_uni((i 2))))))
		(_sig(_int rst -1 0 33(_arch(_uni((i 2))))))
		(_sig(_int data_ready -1 0 34(_arch(_uni((i 2))))))
		(_sig(_int n_blocks -2 0 35(_arch(_uni((i 0))))))
		(_type(_int ~STD_LOGIC_VECTOR{0~to~{16*WORD_SIZE}-1}~132 0 36(_array -1((_to i 0 i 511)))))
		(_sig(_int msg_block_in 2 0 36(_arch(_uni((_others(i 2)))))))
		(_sig(_int finished -1 0 39(_arch(_uni))))
		(_type(_int ~STD_LOGIC_VECTOR{{WORD_SIZE*8}-1~downto~0}~134 0 40(_array -1((_dto i 255 i 0)))))
		(_sig(_int data_out 3 0 40(_arch(_uni))))
		(_cnst(_int clk_period -3 0 43(_arch((ns 4621819117588971520)))))
		(_cnst(_int \clk_period/2\ -3 0 0(_int gms(_code 2))))
		(_prcs
			(clk_process(_arch 0 0 63(_prcs(_wait_for)(_trgt(0)))))
			(stim_proc(_arch 1 0 72(_prcs(_wait_for)(_trgt(2)(3)(4))(_mon)(_read(5)(6)))))
		)
		(_type(_ext ieee.std_logic_1164.STD_LOGIC(0 STD_LOGIC)))
		(_type(_ext std.standard.NATURAL(1 NATURAL)))
		(_var(_ext sha256.sha256_pkg.WORD_SIZE(2 WORD_SIZE)))
		(_type(_ext std.standard.TIME(1 TIME)))
	)
	(_use(ieee(std_logic_1164))(std(standard))(.(sha256_pkg))(ieee(NUMERIC_STD)))
	(_static
		
		
		(1752392008 1668180256 1701999215 1881175139 544372079 1981833580 1969581153 1650532466 99)
	)
	(_model . behavior 3 -1)
)
I 000049 55 4282          1705871138741 behavior
(_unit VHDL(sha256_tb 0 6(behavior 0 10))
	(_version vef)
	(_time 1705871138742 2024.01.21 16:05:38)
	(_source(\../src/sha256_testbench.vhd\))
	(_parameters tan)
	(_code e7e1ecb4e8b0b2f4e0b7f2b8b0e2b1e0e3e1e5e0e4)
	(_ent
		(_time 1705867572661)
	)
	(_comp
		(sha256
			(_object
				(_gen(_int RESET_VALUE -1 0 15(_ent((i 2)))))
				(_port(_int clk -1 0 18(_ent (_in))))
				(_port(_int rst -1 0 19(_ent (_in))))
				(_port(_int data_ready -1 0 20(_ent (_in))))
				(_port(_int n_blocks -2 0 21(_ent (_in))))
				(_port(_int msg_block_in 0 0 22(_ent (_in))))
				(_port(_int finished -1 0 23(_ent (_out))))
				(_port(_int data_out 1 0 24(_ent (_out))))
			)
		)
	)
	(_inst uut 0 48(_comp sha256)
		(_gen
			((RESET_VALUE)((i 2)))
		)
		(_port
			((clk)(clk))
			((rst)(rst))
			((data_ready)(data_ready))
			((n_blocks)(n_blocks))
			((msg_block_in)(msg_block_in))
			((finished)(finished))
			((data_out)(data_out))
		)
		(_use(_ent . sha256)
			(_gen
				((RESET_VALUE)((i 2)))
			)
		)
	)
	(_object
		(_type(_int ~STD_LOGIC_VECTOR{0~to~{16*WORD_SIZE}-1}~13 0 22(_array -1((_to i 0 i 511)))))
		(_type(_int ~STD_LOGIC_VECTOR{{WORD_SIZE*8}-1~downto~0}~13 0 24(_array -1((_dto i 255 i 0)))))
		(_cnst(_int WORD_SIZE -2 0 29(_arch((i 32)))))
		(_sig(_int clk -1 0 32(_arch(_uni((i 2))))))
		(_sig(_int rst -1 0 33(_arch(_uni((i 2))))))
		(_sig(_int data_ready -1 0 34(_arch(_uni((i 2))))))
		(_sig(_int n_blocks -2 0 35(_arch(_uni((i 0))))))
		(_type(_int ~STD_LOGIC_VECTOR{0~to~{16*WORD_SIZE}-1}~132 0 36(_array -1((_to i 0 i 511)))))
		(_sig(_int msg_block_in 2 0 36(_arch(_uni((_others(i 2)))))))
		(_sig(_int finished -1 0 39(_arch(_uni))))
		(_type(_int ~STD_LOGIC_VECTOR{{WORD_SIZE*8}-1~downto~0}~134 0 40(_array -1((_dto i 255 i 0)))))
		(_sig(_int data_out 3 0 40(_arch(_uni))))
		(_cnst(_int clk_period -3 0 43(_arch((ns 4621819117588971520)))))
		(_cnst(_int \clk_period/2\ -3 0 0(_int gms(_code 2))))
		(_prcs
			(clk_process(_arch 0 0 63(_prcs(_wait_for)(_trgt(0)))))
			(stim_proc(_arch 1 0 72(_prcs(_wait_for)(_trgt(1)(2)(3)(4))(_mon)(_read(5)(6)))))
		)
		(_type(_ext ieee.std_logic_1164.STD_LOGIC(0 STD_LOGIC)))
		(_type(_ext std.standard.NATURAL(1 NATURAL)))
		(_var(_ext sha256.sha256_pkg.WORD_SIZE(2 WORD_SIZE)))
		(_type(_ext std.standard.TIME(1 TIME)))
	)
	(_use(ieee(std_logic_1164))(std(standard))(.(sha256_pkg))(ieee(NUMERIC_STD)))
	(_static
		
		
		(1752392008 1668180256 1701999215 1881175139 544372079 1981833580 1969581153 1650532466 99)
	)
	(_model . behavior 3 -1)
)
I 000049 55 4282          1705871198794 behavior
(_unit VHDL(sha256_tb 0 6(behavior 0 10))
	(_version vef)
	(_time 1705871198795 2024.01.21 16:06:38)
	(_source(\../src/sha256_testbench.vhd\))
	(_parameters tan)
	(_code 767176777821236571216329217320717270747175)
	(_ent
		(_time 1705867572661)
	)
	(_comp
		(sha256
			(_object
				(_gen(_int RESET_VALUE -1 0 15(_ent((i 2)))))
				(_port(_int clk -1 0 18(_ent (_in))))
				(_port(_int rst -1 0 19(_ent (_in))))
				(_port(_int data_ready -1 0 20(_ent (_in))))
				(_port(_int n_blocks -2 0 21(_ent (_in))))
				(_port(_int msg_block_in 0 0 22(_ent (_in))))
				(_port(_int finished -1 0 23(_ent (_out))))
				(_port(_int data_out 1 0 24(_ent (_out))))
			)
		)
	)
	(_inst uut 0 48(_comp sha256)
		(_gen
			((RESET_VALUE)((i 2)))
		)
		(_port
			((clk)(clk))
			((rst)(rst))
			((data_ready)(data_ready))
			((n_blocks)(n_blocks))
			((msg_block_in)(msg_block_in))
			((finished)(finished))
			((data_out)(data_out))
		)
		(_use(_ent . sha256)
			(_gen
				((RESET_VALUE)((i 2)))
			)
		)
	)
	(_object
		(_type(_int ~STD_LOGIC_VECTOR{0~to~{16*WORD_SIZE}-1}~13 0 22(_array -1((_to i 0 i 511)))))
		(_type(_int ~STD_LOGIC_VECTOR{{WORD_SIZE*8}-1~downto~0}~13 0 24(_array -1((_dto i 255 i 0)))))
		(_cnst(_int WORD_SIZE -2 0 29(_arch((i 32)))))
		(_sig(_int clk -1 0 32(_arch(_uni((i 2))))))
		(_sig(_int rst -1 0 33(_arch(_uni((i 2))))))
		(_sig(_int data_ready -1 0 34(_arch(_uni((i 2))))))
		(_sig(_int n_blocks -2 0 35(_arch(_uni((i 0))))))
		(_type(_int ~STD_LOGIC_VECTOR{0~to~{16*WORD_SIZE}-1}~132 0 36(_array -1((_to i 0 i 511)))))
		(_sig(_int msg_block_in 2 0 36(_arch(_uni((_others(i 2)))))))
		(_sig(_int finished -1 0 39(_arch(_uni))))
		(_type(_int ~STD_LOGIC_VECTOR{{WORD_SIZE*8}-1~downto~0}~134 0 40(_array -1((_dto i 255 i 0)))))
		(_sig(_int data_out 3 0 40(_arch(_uni))))
		(_cnst(_int clk_period -3 0 43(_arch((ns 4621819117588971520)))))
		(_cnst(_int \clk_period/2\ -3 0 0(_int gms(_code 2))))
		(_prcs
			(clk_process(_arch 0 0 63(_prcs(_wait_for)(_trgt(0)))))
			(stim_proc(_arch 1 0 72(_prcs(_wait_for)(_trgt(1)(2)(3)(4))(_mon)(_read(5)(6)))))
		)
		(_type(_ext ieee.std_logic_1164.STD_LOGIC(0 STD_LOGIC)))
		(_type(_ext std.standard.NATURAL(1 NATURAL)))
		(_var(_ext sha256.sha256_pkg.WORD_SIZE(2 WORD_SIZE)))
		(_type(_ext std.standard.TIME(1 TIME)))
	)
	(_use(ieee(std_logic_1164))(std(standard))(.(sha256_pkg))(ieee(NUMERIC_STD)))
	(_static
		
		
		(1752392008 1668180256 1701999215 1881175139 544372079 1981833580 1969581153 1650532466 99)
	)
	(_model . behavior 3 -1)
)
I 000049 55 4861          1705871267147 behavior
(_unit VHDL(sha256_tb 0 6(behavior 0 10))
	(_version vef)
	(_time 1705871267148 2024.01.21 16:07:47)
	(_source(\../src/sha256_testbench.vhd\))
	(_parameters tan)
	(_code 6e69386e33393b7d6a6c7b31396b38696a686c696d)
	(_ent
		(_time 1705867572661)
	)
	(_comp
		(sha256
			(_object
				(_gen(_int RESET_VALUE -1 0 15(_ent((i 2)))))
				(_port(_int clk -1 0 18(_ent (_in))))
				(_port(_int rst -1 0 19(_ent (_in))))
				(_port(_int data_ready -1 0 20(_ent (_in))))
				(_port(_int n_blocks -2 0 21(_ent (_in))))
				(_port(_int msg_block_in 0 0 22(_ent (_in))))
				(_port(_int finished -1 0 23(_ent (_out))))
				(_port(_int data_out 1 0 24(_ent (_out))))
			)
		)
	)
	(_inst uut 0 48(_comp sha256)
		(_gen
			((RESET_VALUE)((i 2)))
		)
		(_port
			((clk)(clk))
			((rst)(rst))
			((data_ready)(data_ready))
			((n_blocks)(n_blocks))
			((msg_block_in)(msg_block_in))
			((finished)(finished))
			((data_out)(data_out))
		)
		(_use(_ent . sha256)
			(_gen
				((RESET_VALUE)((i 2)))
			)
		)
	)
	(_object
		(_type(_int ~STD_LOGIC_VECTOR{0~to~{16*WORD_SIZE}-1}~13 0 22(_array -1((_to i 0 i 511)))))
		(_type(_int ~STD_LOGIC_VECTOR{{WORD_SIZE*8}-1~downto~0}~13 0 24(_array -1((_dto i 255 i 0)))))
		(_cnst(_int WORD_SIZE -2 0 29(_arch((i 32)))))
		(_sig(_int clk -1 0 32(_arch(_uni((i 2))))))
		(_sig(_int rst -1 0 33(_arch(_uni((i 2))))))
		(_sig(_int data_ready -1 0 34(_arch(_uni((i 2))))))
		(_sig(_int n_blocks -2 0 35(_arch(_uni((i 0))))))
		(_type(_int ~STD_LOGIC_VECTOR{0~to~{16*WORD_SIZE}-1}~132 0 36(_array -1((_to i 0 i 511)))))
		(_sig(_int msg_block_in 2 0 36(_arch(_uni((_others(i 2)))))))
		(_sig(_int finished -1 0 39(_arch(_uni))))
		(_type(_int ~STD_LOGIC_VECTOR{{WORD_SIZE*8}-1~downto~0}~134 0 40(_array -1((_dto i 255 i 0)))))
		(_sig(_int data_out 3 0 40(_arch(_uni))))
		(_cnst(_int clk_period -3 0 43(_arch((ns 4621819117588971520)))))
		(_cnst(_int \clk_period/2\ -3 0 0(_int gms(_code 2))))
		(_prcs
			(clk_process(_arch 0 0 63(_prcs(_wait_for)(_trgt(0)))))
			(stim_proc(_arch 1 0 72(_prcs(_wait_for)(_trgt(1)(2)(3)(4))(_mon)(_read(5)(6)))))
		)
		(_type(_ext ieee.std_logic_1164.STD_LOGIC(0 STD_LOGIC)))
		(_type(_ext std.standard.NATURAL(1 NATURAL)))
		(_var(_ext sha256.sha256_pkg.WORD_SIZE(2 WORD_SIZE)))
		(_type(_ext std.standard.TIME(1 TIME)))
	)
	(_use(ieee(std_logic_1164))(std(standard))(.(sha256_pkg))(ieee(NUMERIC_STD)))
	(_static
		
		
		(1752392008 1668180256 1701999215 1881175139 544372079 1981833580 1969581153 1650532466 99)
		
		(1953719636)
	)
	(_model . behavior 3 -1)
)
I 000049 55 4861          1705871289152 behavior
(_unit VHDL(sha256_tb 0 6(behavior 0 10))
	(_version vef)
	(_time 1705871289153 2024.01.21 16:08:09)
	(_source(\../src/sha256_testbench.vhd\))
	(_parameters tan)
	(_code 6e6f696e33393b7d6a6d7b31396b38696a686c696d)
	(_ent
		(_time 1705867572661)
	)
	(_comp
		(sha256
			(_object
				(_gen(_int RESET_VALUE -1 0 15(_ent((i 2)))))
				(_port(_int clk -1 0 18(_ent (_in))))
				(_port(_int rst -1 0 19(_ent (_in))))
				(_port(_int data_ready -1 0 20(_ent (_in))))
				(_port(_int n_blocks -2 0 21(_ent (_in))))
				(_port(_int msg_block_in 0 0 22(_ent (_in))))
				(_port(_int finished -1 0 23(_ent (_out))))
				(_port(_int data_out 1 0 24(_ent (_out))))
			)
		)
	)
	(_inst uut 0 48(_comp sha256)
		(_gen
			((RESET_VALUE)((i 2)))
		)
		(_port
			((clk)(clk))
			((rst)(rst))
			((data_ready)(data_ready))
			((n_blocks)(n_blocks))
			((msg_block_in)(msg_block_in))
			((finished)(finished))
			((data_out)(data_out))
		)
		(_use(_ent . sha256)
			(_gen
				((RESET_VALUE)((i 2)))
			)
		)
	)
	(_object
		(_type(_int ~STD_LOGIC_VECTOR{0~to~{16*WORD_SIZE}-1}~13 0 22(_array -1((_to i 0 i 511)))))
		(_type(_int ~STD_LOGIC_VECTOR{{WORD_SIZE*8}-1~downto~0}~13 0 24(_array -1((_dto i 255 i 0)))))
		(_cnst(_int WORD_SIZE -2 0 29(_arch((i 32)))))
		(_sig(_int clk -1 0 32(_arch(_uni((i 2))))))
		(_sig(_int rst -1 0 33(_arch(_uni((i 2))))))
		(_sig(_int data_ready -1 0 34(_arch(_uni((i 2))))))
		(_sig(_int n_blocks -2 0 35(_arch(_uni((i 0))))))
		(_type(_int ~STD_LOGIC_VECTOR{0~to~{16*WORD_SIZE}-1}~132 0 36(_array -1((_to i 0 i 511)))))
		(_sig(_int msg_block_in 2 0 36(_arch(_uni((_others(i 2)))))))
		(_sig(_int finished -1 0 39(_arch(_uni))))
		(_type(_int ~STD_LOGIC_VECTOR{{WORD_SIZE*8}-1~downto~0}~134 0 40(_array -1((_dto i 255 i 0)))))
		(_sig(_int data_out 3 0 40(_arch(_uni))))
		(_cnst(_int clk_period -3 0 43(_arch((ns 4621819117588971520)))))
		(_cnst(_int \clk_period/2\ -3 0 0(_int gms(_code 2))))
		(_prcs
			(clk_process(_arch 0 0 63(_prcs(_wait_for)(_trgt(0)))))
			(stim_proc(_arch 1 0 72(_prcs(_wait_for)(_trgt(1)(2)(3)(4))(_mon)(_read(5)(6)))))
		)
		(_type(_ext ieee.std_logic_1164.STD_LOGIC(0 STD_LOGIC)))
		(_type(_ext std.standard.NATURAL(1 NATURAL)))
		(_var(_ext sha256.sha256_pkg.WORD_SIZE(2 WORD_SIZE)))
		(_type(_ext std.standard.TIME(1 TIME)))
	)
	(_use(ieee(std_logic_1164))(std(standard))(.(sha256_pkg))(ieee(NUMERIC_STD)))
	(_static
		
		
		(1752392008 1668180256 1701999215 1881175139 544372079 1981833580 1969581153 1650532466 99)
		
		(1953719636)
	)
	(_model . behavior 3 -1)
)
I 000049 55 4861          1705871324206 behavior
(_unit VHDL(sha256_tb 0 6(behavior 0 10))
	(_version vef)
	(_time 1705871324207 2024.01.21 16:08:44)
	(_source(\../src/sha256_testbench.vhd\))
	(_parameters tan)
	(_code 55070256580200465154400a025003525153575256)
	(_ent
		(_time 1705867572661)
	)
	(_comp
		(sha256
			(_object
				(_gen(_int RESET_VALUE -1 0 15(_ent((i 2)))))
				(_port(_int clk -1 0 18(_ent (_in))))
				(_port(_int rst -1 0 19(_ent (_in))))
				(_port(_int data_ready -1 0 20(_ent (_in))))
				(_port(_int n_blocks -2 0 21(_ent (_in))))
				(_port(_int msg_block_in 0 0 22(_ent (_in))))
				(_port(_int finished -1 0 23(_ent (_out))))
				(_port(_int data_out 1 0 24(_ent (_out))))
			)
		)
	)
	(_inst uut 0 48(_comp sha256)
		(_gen
			((RESET_VALUE)((i 2)))
		)
		(_port
			((clk)(clk))
			((rst)(rst))
			((data_ready)(data_ready))
			((n_blocks)(n_blocks))
			((msg_block_in)(msg_block_in))
			((finished)(finished))
			((data_out)(data_out))
		)
		(_use(_ent . sha256)
			(_gen
				((RESET_VALUE)((i 2)))
			)
		)
	)
	(_object
		(_type(_int ~STD_LOGIC_VECTOR{0~to~{16*WORD_SIZE}-1}~13 0 22(_array -1((_to i 0 i 511)))))
		(_type(_int ~STD_LOGIC_VECTOR{{WORD_SIZE*8}-1~downto~0}~13 0 24(_array -1((_dto i 255 i 0)))))
		(_cnst(_int WORD_SIZE -2 0 29(_arch((i 32)))))
		(_sig(_int clk -1 0 32(_arch(_uni((i 2))))))
		(_sig(_int rst -1 0 33(_arch(_uni((i 2))))))
		(_sig(_int data_ready -1 0 34(_arch(_uni((i 2))))))
		(_sig(_int n_blocks -2 0 35(_arch(_uni((i 0))))))
		(_type(_int ~STD_LOGIC_VECTOR{0~to~{16*WORD_SIZE}-1}~132 0 36(_array -1((_to i 0 i 511)))))
		(_sig(_int msg_block_in 2 0 36(_arch(_uni((_others(i 2)))))))
		(_sig(_int finished -1 0 39(_arch(_uni))))
		(_type(_int ~STD_LOGIC_VECTOR{{WORD_SIZE*8}-1~downto~0}~134 0 40(_array -1((_dto i 255 i 0)))))
		(_sig(_int data_out 3 0 40(_arch(_uni))))
		(_cnst(_int clk_period -3 0 43(_arch((ns 4621819117588971520)))))
		(_cnst(_int \clk_period/2\ -3 0 0(_int gms(_code 2))))
		(_prcs
			(clk_process(_arch 0 0 63(_prcs(_wait_for)(_trgt(0)))))
			(stim_proc(_arch 1 0 72(_prcs(_wait_for)(_trgt(1)(2)(3)(4))(_mon)(_read(5)(6)))))
		)
		(_type(_ext ieee.std_logic_1164.STD_LOGIC(0 STD_LOGIC)))
		(_type(_ext std.standard.NATURAL(1 NATURAL)))
		(_var(_ext sha256.sha256_pkg.WORD_SIZE(2 WORD_SIZE)))
		(_type(_ext std.standard.TIME(1 TIME)))
	)
	(_use(ieee(std_logic_1164))(std(standard))(.(sha256_pkg))(ieee(NUMERIC_STD)))
	(_static
		
		
		(1752392008 1668180256 1701999215 1881175139 544372079 1981833580 1969581153 1650532466 99)
		
		(1953719636)
	)
	(_model . behavior 3 -1)
)
I 000049 55 4335          1705871463567 behavior
(_unit VHDL(sha256_tb 0 6(behavior 0 10))
	(_version vef)
	(_time 1705871463568 2024.01.21 16:11:03)
	(_source(\../src/sha256_testbench.vhd\))
	(_parameters tan)
	(_code b4b3e3e0b8e3e1a7b0b6a1ebe3b1e2b3b0b2b6b3b7)
	(_ent
		(_time 1705867572661)
	)
	(_comp
		(sha256
			(_object
				(_gen(_int RESET_VALUE -1 0 15(_ent((i 2)))))
				(_port(_int clk -1 0 18(_ent (_in))))
				(_port(_int rst -1 0 19(_ent (_in))))
				(_port(_int data_ready -1 0 20(_ent (_in))))
				(_port(_int n_blocks -2 0 21(_ent (_in))))
				(_port(_int msg_block_in 0 0 22(_ent (_in))))
				(_port(_int finished -1 0 23(_ent (_out))))
				(_port(_int data_out 1 0 24(_ent (_out))))
			)
		)
	)
	(_inst uut 0 48(_comp sha256)
		(_gen
			((RESET_VALUE)((i 2)))
		)
		(_port
			((clk)(clk))
			((rst)(rst))
			((data_ready)(data_ready))
			((n_blocks)(n_blocks))
			((msg_block_in)(msg_block_in))
			((finished)(finished))
			((data_out)(data_out))
		)
		(_use(_ent . sha256)
			(_gen
				((RESET_VALUE)((i 2)))
			)
		)
	)
	(_object
		(_type(_int ~STD_LOGIC_VECTOR{0~to~{16*WORD_SIZE}-1}~13 0 22(_array -1((_to i 0 i 511)))))
		(_type(_int ~STD_LOGIC_VECTOR{{WORD_SIZE*8}-1~downto~0}~13 0 24(_array -1((_dto i 255 i 0)))))
		(_cnst(_int WORD_SIZE -2 0 29(_arch((i 32)))))
		(_sig(_int clk -1 0 32(_arch(_uni((i 2))))))
		(_sig(_int rst -1 0 33(_arch(_uni((i 2))))))
		(_sig(_int data_ready -1 0 34(_arch(_uni((i 2))))))
		(_sig(_int n_blocks -2 0 35(_arch(_uni((i 0))))))
		(_type(_int ~STD_LOGIC_VECTOR{0~to~{16*WORD_SIZE}-1}~132 0 36(_array -1((_to i 0 i 511)))))
		(_sig(_int msg_block_in 2 0 36(_arch(_uni((_others(i 2)))))))
		(_sig(_int finished -1 0 39(_arch(_uni))))
		(_type(_int ~STD_LOGIC_VECTOR{{WORD_SIZE*8}-1~downto~0}~134 0 40(_array -1((_dto i 255 i 0)))))
		(_sig(_int data_out 3 0 40(_arch(_uni))))
		(_cnst(_int clk_period -3 0 43(_arch((ns 4621819117588971520)))))
		(_cnst(_int \clk_period/2\ -3 0 0(_int gms(_code 2))))
		(_prcs
			(clk_process(_arch 0 0 63(_prcs(_wait_for)(_trgt(0)))))
			(stim_proc(_arch 1 0 72(_prcs(_wait_for)(_trgt(1)(2)(3)(4))(_mon)(_read(5)(6)))))
		)
		(_type(_ext ieee.std_logic_1164.STD_LOGIC(0 STD_LOGIC)))
		(_type(_ext std.standard.NATURAL(1 NATURAL)))
		(_var(_ext sha256.sha256_pkg.WORD_SIZE(2 WORD_SIZE)))
		(_type(_ext std.standard.TIME(1 TIME)))
	)
	(_use(ieee(std_logic_1164))(std(standard))(.(sha256_pkg))(ieee(NUMERIC_STD)))
	(_static
		
		
		(1752392008 1668180256 1701999215 1881175139 544372079 1981833580 1969581153 1650532466 99)
		(1752392008 1953459744 1852401184 1701344105 100)
	)
	(_model . behavior 3 -1)
)
I 000049 55 4332          1705871481198 behavior
(_unit VHDL(sha256_tb 0 6(behavior 0 10))
	(_version vef)
	(_time 1705871481199 2024.01.21 16:11:21)
	(_source(\../src/sha256_testbench.vhd\))
	(_parameters tan)
	(_code 8d8f8c83d1dad89e898e98d2da88db8a898b8f8a8e)
	(_ent
		(_time 1705867572661)
	)
	(_comp
		(sha256
			(_object
				(_gen(_int RESET_VALUE -1 0 15(_ent((i 2)))))
				(_port(_int clk -1 0 18(_ent (_in))))
				(_port(_int rst -1 0 19(_ent (_in))))
				(_port(_int data_ready -1 0 20(_ent (_in))))
				(_port(_int n_blocks -2 0 21(_ent (_in))))
				(_port(_int msg_block_in 0 0 22(_ent (_in))))
				(_port(_int finished -1 0 23(_ent (_out))))
				(_port(_int data_out 1 0 24(_ent (_out))))
			)
		)
	)
	(_inst uut 0 48(_comp sha256)
		(_gen
			((RESET_VALUE)((i 2)))
		)
		(_port
			((clk)(clk))
			((rst)(rst))
			((data_ready)(data_ready))
			((n_blocks)(n_blocks))
			((msg_block_in)(msg_block_in))
			((finished)(finished))
			((data_out)(data_out))
		)
		(_use(_ent . sha256)
			(_gen
				((RESET_VALUE)((i 2)))
			)
		)
	)
	(_object
		(_type(_int ~STD_LOGIC_VECTOR{0~to~{16*WORD_SIZE}-1}~13 0 22(_array -1((_to i 0 i 511)))))
		(_type(_int ~STD_LOGIC_VECTOR{{WORD_SIZE*8}-1~downto~0}~13 0 24(_array -1((_dto i 255 i 0)))))
		(_cnst(_int WORD_SIZE -2 0 29(_arch((i 32)))))
		(_sig(_int clk -1 0 32(_arch(_uni((i 2))))))
		(_sig(_int rst -1 0 33(_arch(_uni((i 2))))))
		(_sig(_int data_ready -1 0 34(_arch(_uni((i 2))))))
		(_sig(_int n_blocks -2 0 35(_arch(_uni((i 0))))))
		(_type(_int ~STD_LOGIC_VECTOR{0~to~{16*WORD_SIZE}-1}~132 0 36(_array -1((_to i 0 i 511)))))
		(_sig(_int msg_block_in 2 0 36(_arch(_uni((_others(i 2)))))))
		(_sig(_int finished -1 0 39(_arch(_uni))))
		(_type(_int ~STD_LOGIC_VECTOR{{WORD_SIZE*8}-1~downto~0}~134 0 40(_array -1((_dto i 255 i 0)))))
		(_sig(_int data_out 3 0 40(_arch(_uni))))
		(_cnst(_int clk_period -3 0 43(_arch((ns 4621819117588971520)))))
		(_cnst(_int \clk_period/2\ -3 0 0(_int gms(_code 2))))
		(_prcs
			(clk_process(_arch 0 0 63(_prcs(_wait_for)(_trgt(0)))))
			(stim_proc(_arch 1 0 72(_prcs(_wait_for)(_trgt(2)(3)(4))(_mon)(_read(5)(6)))))
		)
		(_type(_ext ieee.std_logic_1164.STD_LOGIC(0 STD_LOGIC)))
		(_type(_ext std.standard.NATURAL(1 NATURAL)))
		(_var(_ext sha256.sha256_pkg.WORD_SIZE(2 WORD_SIZE)))
		(_type(_ext std.standard.TIME(1 TIME)))
	)
	(_use(ieee(std_logic_1164))(std(standard))(.(sha256_pkg))(ieee(NUMERIC_STD)))
	(_static
		
		
		(1752392008 1668180256 1701999215 1881175139 544372079 1981833580 1969581153 1650532466 99)
		(1752392008 1953459744 1852401184 1701344105 100)
	)
	(_model . behavior 3 -1)
)
I 000049 55 4335          1705871513406 behavior
(_unit VHDL(sha256_tb 0 6(behavior 0 10))
	(_version vef)
	(_time 1705871513407 2024.01.21 16:11:53)
	(_source(\../src/sha256_testbench.vhd\))
	(_parameters tan)
	(_code 683b6b68683f3d7b6c6a7d373f6d3e6f6c6e6a6f6b)
	(_ent
		(_time 1705867572661)
	)
	(_comp
		(sha256
			(_object
				(_gen(_int RESET_VALUE -1 0 15(_ent((i 2)))))
				(_port(_int clk -1 0 18(_ent (_in))))
				(_port(_int rst -1 0 19(_ent (_in))))
				(_port(_int data_ready -1 0 20(_ent (_in))))
				(_port(_int n_blocks -2 0 21(_ent (_in))))
				(_port(_int msg_block_in 0 0 22(_ent (_in))))
				(_port(_int finished -1 0 23(_ent (_out))))
				(_port(_int data_out 1 0 24(_ent (_out))))
			)
		)
	)
	(_inst uut 0 48(_comp sha256)
		(_gen
			((RESET_VALUE)((i 2)))
		)
		(_port
			((clk)(clk))
			((rst)(rst))
			((data_ready)(data_ready))
			((n_blocks)(n_blocks))
			((msg_block_in)(msg_block_in))
			((finished)(finished))
			((data_out)(data_out))
		)
		(_use(_ent . sha256)
			(_gen
				((RESET_VALUE)((i 2)))
			)
		)
	)
	(_object
		(_type(_int ~STD_LOGIC_VECTOR{0~to~{16*WORD_SIZE}-1}~13 0 22(_array -1((_to i 0 i 511)))))
		(_type(_int ~STD_LOGIC_VECTOR{{WORD_SIZE*8}-1~downto~0}~13 0 24(_array -1((_dto i 255 i 0)))))
		(_cnst(_int WORD_SIZE -2 0 29(_arch((i 32)))))
		(_sig(_int clk -1 0 32(_arch(_uni((i 2))))))
		(_sig(_int rst -1 0 33(_arch(_uni((i 2))))))
		(_sig(_int data_ready -1 0 34(_arch(_uni((i 2))))))
		(_sig(_int n_blocks -2 0 35(_arch(_uni((i 0))))))
		(_type(_int ~STD_LOGIC_VECTOR{0~to~{16*WORD_SIZE}-1}~132 0 36(_array -1((_to i 0 i 511)))))
		(_sig(_int msg_block_in 2 0 36(_arch(_uni((_others(i 2)))))))
		(_sig(_int finished -1 0 39(_arch(_uni))))
		(_type(_int ~STD_LOGIC_VECTOR{{WORD_SIZE*8}-1~downto~0}~134 0 40(_array -1((_dto i 255 i 0)))))
		(_sig(_int data_out 3 0 40(_arch(_uni))))
		(_cnst(_int clk_period -3 0 43(_arch((ns 4621819117588971520)))))
		(_cnst(_int \clk_period/2\ -3 0 0(_int gms(_code 2))))
		(_prcs
			(clk_process(_arch 0 0 63(_prcs(_wait_for)(_trgt(0)))))
			(stim_proc(_arch 1 0 72(_prcs(_wait_for)(_trgt(1)(2)(3)(4))(_mon)(_read(5)(6)))))
		)
		(_type(_ext ieee.std_logic_1164.STD_LOGIC(0 STD_LOGIC)))
		(_type(_ext std.standard.NATURAL(1 NATURAL)))
		(_var(_ext sha256.sha256_pkg.WORD_SIZE(2 WORD_SIZE)))
		(_type(_ext std.standard.TIME(1 TIME)))
	)
	(_use(ieee(std_logic_1164))(std(standard))(.(sha256_pkg))(ieee(NUMERIC_STD)))
	(_static
		(33751810 50463234 33751810 33751554 33751810 50528770 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018)
		
		(1752392008 1668180256 1701999215 1881175139 544372079 1981833580 1969581153 1650532466 99)
		(1752392008 1953459744 1852401184 1701344105 100)
	)
	(_model . behavior 3 -1)
)
I 000049 55 4335          1705871737561 behavior
(_unit VHDL(sha256_tb 0 6(behavior 0 10))
	(_version vef)
	(_time 1705871737562 2024.01.21 16:15:37)
	(_source(\../src/sha256_testbench.vhd\))
	(_parameters tan)
	(_code 04005402085351170002115b530152030002060307)
	(_ent
		(_time 1705867572661)
	)
	(_comp
		(sha256
			(_object
				(_gen(_int RESET_VALUE -1 0 15(_ent((i 2)))))
				(_port(_int clk -1 0 18(_ent (_in))))
				(_port(_int rst -1 0 19(_ent (_in))))
				(_port(_int data_ready -1 0 20(_ent (_in))))
				(_port(_int n_blocks -2 0 21(_ent (_in))))
				(_port(_int msg_block_in 0 0 22(_ent (_in))))
				(_port(_int finished -1 0 23(_ent (_out))))
				(_port(_int data_out 1 0 24(_ent (_out))))
			)
		)
	)
	(_inst uut 0 48(_comp sha256)
		(_gen
			((RESET_VALUE)((i 2)))
		)
		(_port
			((clk)(clk))
			((rst)(rst))
			((data_ready)(data_ready))
			((n_blocks)(n_blocks))
			((msg_block_in)(msg_block_in))
			((finished)(finished))
			((data_out)(data_out))
		)
		(_use(_ent . sha256)
			(_gen
				((RESET_VALUE)((i 2)))
			)
		)
	)
	(_object
		(_type(_int ~STD_LOGIC_VECTOR{0~to~{16*WORD_SIZE}-1}~13 0 22(_array -1((_to i 0 i 511)))))
		(_type(_int ~STD_LOGIC_VECTOR{{WORD_SIZE*8}-1~downto~0}~13 0 24(_array -1((_dto i 255 i 0)))))
		(_cnst(_int WORD_SIZE -2 0 29(_arch((i 32)))))
		(_sig(_int clk -1 0 32(_arch(_uni((i 2))))))
		(_sig(_int rst -1 0 33(_arch(_uni((i 2))))))
		(_sig(_int data_ready -1 0 34(_arch(_uni((i 2))))))
		(_sig(_int n_blocks -2 0 35(_arch(_uni((i 0))))))
		(_type(_int ~STD_LOGIC_VECTOR{0~to~{16*WORD_SIZE}-1}~132 0 36(_array -1((_to i 0 i 511)))))
		(_sig(_int msg_block_in 2 0 36(_arch(_uni((_others(i 2)))))))
		(_sig(_int finished -1 0 39(_arch(_uni))))
		(_type(_int ~STD_LOGIC_VECTOR{{WORD_SIZE*8}-1~downto~0}~134 0 40(_array -1((_dto i 255 i 0)))))
		(_sig(_int data_out 3 0 40(_arch(_uni))))
		(_cnst(_int clk_period -3 0 43(_arch((ns 4621819117588971520)))))
		(_cnst(_int \clk_period/2\ -3 0 0(_int gms(_code 2))))
		(_prcs
			(clk_process(_arch 0 0 63(_prcs(_wait_for)(_trgt(0)))))
			(stim_proc(_arch 1 0 72(_prcs(_wait_for)(_trgt(1)(2)(3)(4))(_mon)(_read(5)(6)))))
		)
		(_type(_ext ieee.std_logic_1164.STD_LOGIC(0 STD_LOGIC)))
		(_type(_ext std.standard.NATURAL(1 NATURAL)))
		(_var(_ext sha256.sha256_pkg.WORD_SIZE(2 WORD_SIZE)))
		(_type(_ext std.standard.TIME(1 TIME)))
	)
	(_use(ieee(std_logic_1164))(std(standard))(.(sha256_pkg))(ieee(NUMERIC_STD)))
	(_static
		
		
		(1752392008 1668180256 1701999215 1881175139 544372079 1981833580 1969581153 1650532466 99)
		(1752392008 1953459744 1852401184 1701344105 100)
	)
	(_model . behavior 3 -1)
)
I 000049 55 4342          1705871769136 behavior
(_unit VHDL(sha256_tb 0 6(behavior 0 10))
	(_version vef)
	(_time 1705871769137 2024.01.21 16:16:09)
	(_source(\../src/sha256_testbench.vhd\))
	(_parameters tan)
	(_code 5e0b5a5d03090b4d5a584b01095b08595a585c595d)
	(_ent
		(_time 1705867572661)
	)
	(_comp
		(sha256
			(_object
				(_gen(_int RESET_VALUE -1 0 15(_ent((i 2)))))
				(_port(_int clk -1 0 18(_ent (_in))))
				(_port(_int rst -1 0 19(_ent (_in))))
				(_port(_int data_ready -1 0 20(_ent (_in))))
				(_port(_int n_blocks -2 0 21(_ent (_in))))
				(_port(_int msg_block_in 0 0 22(_ent (_in))))
				(_port(_int finished -1 0 23(_ent (_out))))
				(_port(_int data_out 1 0 24(_ent (_out))))
			)
		)
	)
	(_inst uut 0 48(_comp sha256)
		(_gen
			((RESET_VALUE)((i 2)))
		)
		(_port
			((clk)(clk))
			((rst)(rst))
			((data_ready)(data_ready))
			((n_blocks)(n_blocks))
			((msg_block_in)(msg_block_in))
			((finished)(finished))
			((data_out)(data_out))
		)
		(_use(_ent . sha256)
			(_gen
				((RESET_VALUE)((i 2)))
			)
		)
	)
	(_object
		(_type(_int ~STD_LOGIC_VECTOR{0~to~{16*WORD_SIZE}-1}~13 0 22(_array -1((_to i 0 i 511)))))
		(_type(_int ~STD_LOGIC_VECTOR{{WORD_SIZE*8}-1~downto~0}~13 0 24(_array -1((_dto i 255 i 0)))))
		(_cnst(_int WORD_SIZE -2 0 29(_arch((i 32)))))
		(_sig(_int clk -1 0 32(_arch(_uni((i 2))))))
		(_sig(_int rst -1 0 33(_arch(_uni((i 2))))))
		(_sig(_int data_ready -1 0 34(_arch(_uni((i 2))))))
		(_sig(_int n_blocks -2 0 35(_arch(_uni((i 0))))))
		(_type(_int ~STD_LOGIC_VECTOR{0~to~{16*WORD_SIZE}-1}~132 0 36(_array -1((_to i 0 i 511)))))
		(_sig(_int msg_block_in 2 0 36(_arch(_uni((_others(i 2)))))))
		(_sig(_int finished -1 0 39(_arch(_uni))))
		(_type(_int ~STD_LOGIC_VECTOR{{WORD_SIZE*8}-1~downto~0}~134 0 40(_array -1((_dto i 255 i 0)))))
		(_sig(_int data_out 3 0 40(_arch(_uni))))
		(_cnst(_int clk_period -3 0 43(_arch((ns 4621819117588971520)))))
		(_cnst(_int \clk_period/2\ -3 0 0(_int gms(_code 2))))
		(_prcs
			(clk_process(_arch 0 0 63(_prcs(_wait_for)(_trgt(0)))))
			(stim_proc(_arch 1 0 72(_prcs(_wait_for)(_trgt(1)(2)(3)(4))(_sens(5))(_mon)(_read(6)))))
		)
		(_type(_ext ieee.std_logic_1164.STD_LOGIC(0 STD_LOGIC)))
		(_type(_ext std.standard.NATURAL(1 NATURAL)))
		(_var(_ext sha256.sha256_pkg.WORD_SIZE(2 WORD_SIZE)))
		(_type(_ext std.standard.TIME(1 TIME)))
	)
	(_use(ieee(std_logic_1164))(std(standard))(.(sha256_pkg))(ieee(NUMERIC_STD)))
	(_static
		(33751810 50463234 33751810 33751554 33751810 50528770 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018)
		
		(1752392008 1668180256 1701999215 1881175139 544372079 1981833580 1969581153 1650532466 99)
		(1752392008 1953459744 1852401184 1701344105 100)
	)
	(_model . behavior 3 -1)
)
I 000049 55 4335          1705871813779 behavior
(_unit VHDL(sha256_tb 0 6(behavior 0 10))
	(_version vef)
	(_time 1705871813780 2024.01.21 16:16:53)
	(_source(\../src/sha256_testbench.vhd\))
	(_parameters tan)
	(_code bfbeb9ebe1e8eaacbbb9aae0e8bae9b8bbb9bdb8bc)
	(_ent
		(_time 1705867572661)
	)
	(_comp
		(sha256
			(_object
				(_gen(_int RESET_VALUE -1 0 15(_ent((i 2)))))
				(_port(_int clk -1 0 18(_ent (_in))))
				(_port(_int rst -1 0 19(_ent (_in))))
				(_port(_int data_ready -1 0 20(_ent (_in))))
				(_port(_int n_blocks -2 0 21(_ent (_in))))
				(_port(_int msg_block_in 0 0 22(_ent (_in))))
				(_port(_int finished -1 0 23(_ent (_out))))
				(_port(_int data_out 1 0 24(_ent (_out))))
			)
		)
	)
	(_inst uut 0 48(_comp sha256)
		(_gen
			((RESET_VALUE)((i 2)))
		)
		(_port
			((clk)(clk))
			((rst)(rst))
			((data_ready)(data_ready))
			((n_blocks)(n_blocks))
			((msg_block_in)(msg_block_in))
			((finished)(finished))
			((data_out)(data_out))
		)
		(_use(_ent . sha256)
			(_gen
				((RESET_VALUE)((i 2)))
			)
		)
	)
	(_object
		(_type(_int ~STD_LOGIC_VECTOR{0~to~{16*WORD_SIZE}-1}~13 0 22(_array -1((_to i 0 i 511)))))
		(_type(_int ~STD_LOGIC_VECTOR{{WORD_SIZE*8}-1~downto~0}~13 0 24(_array -1((_dto i 255 i 0)))))
		(_cnst(_int WORD_SIZE -2 0 29(_arch((i 32)))))
		(_sig(_int clk -1 0 32(_arch(_uni((i 2))))))
		(_sig(_int rst -1 0 33(_arch(_uni((i 2))))))
		(_sig(_int data_ready -1 0 34(_arch(_uni((i 2))))))
		(_sig(_int n_blocks -2 0 35(_arch(_uni((i 0))))))
		(_type(_int ~STD_LOGIC_VECTOR{0~to~{16*WORD_SIZE}-1}~132 0 36(_array -1((_to i 0 i 511)))))
		(_sig(_int msg_block_in 2 0 36(_arch(_uni((_others(i 2)))))))
		(_sig(_int finished -1 0 39(_arch(_uni))))
		(_type(_int ~STD_LOGIC_VECTOR{{WORD_SIZE*8}-1~downto~0}~134 0 40(_array -1((_dto i 255 i 0)))))
		(_sig(_int data_out 3 0 40(_arch(_uni))))
		(_cnst(_int clk_period -3 0 43(_arch((ns 4621819117588971520)))))
		(_cnst(_int \clk_period/2\ -3 0 0(_int gms(_code 2))))
		(_prcs
			(clk_process(_arch 0 0 63(_prcs(_wait_for)(_trgt(0)))))
			(stim_proc(_arch 1 0 72(_prcs(_wait_for)(_trgt(1)(2)(3)(4))(_mon)(_read(5)(6)))))
		)
		(_type(_ext ieee.std_logic_1164.STD_LOGIC(0 STD_LOGIC)))
		(_type(_ext std.standard.NATURAL(1 NATURAL)))
		(_var(_ext sha256.sha256_pkg.WORD_SIZE(2 WORD_SIZE)))
		(_type(_ext std.standard.TIME(1 TIME)))
	)
	(_use(ieee(std_logic_1164))(std(standard))(.(sha256_pkg))(ieee(NUMERIC_STD)))
	(_static
		
		
		(1752392008 1668180256 1701999215 1881175139 544372079 1981833580 1969581153 1650532466 99)
		(1752392008 1953459744 1852401184 1701344105 100)
	)
	(_model . behavior 3 -1)
)
I 000049 55 4342          1705871904072 behavior
(_unit VHDL(sha256_tb 0 6(behavior 0 10))
	(_version vef)
	(_time 1705871904073 2024.01.21 16:18:24)
	(_source(\../src/sha256_testbench.vhd\))
	(_parameters tan)
	(_code 782c7d79782f2d6b7c7e6d272f7d2e7f7c7e7a7f7b)
	(_ent
		(_time 1705867572661)
	)
	(_comp
		(sha256
			(_object
				(_gen(_int RESET_VALUE -1 0 15(_ent((i 2)))))
				(_port(_int clk -1 0 18(_ent (_in))))
				(_port(_int rst -1 0 19(_ent (_in))))
				(_port(_int data_ready -1 0 20(_ent (_in))))
				(_port(_int n_blocks -2 0 21(_ent (_in))))
				(_port(_int msg_block_in 0 0 22(_ent (_in))))
				(_port(_int finished -1 0 23(_ent (_out))))
				(_port(_int data_out 1 0 24(_ent (_out))))
			)
		)
	)
	(_inst uut 0 48(_comp sha256)
		(_gen
			((RESET_VALUE)((i 2)))
		)
		(_port
			((clk)(clk))
			((rst)(rst))
			((data_ready)(data_ready))
			((n_blocks)(n_blocks))
			((msg_block_in)(msg_block_in))
			((finished)(finished))
			((data_out)(data_out))
		)
		(_use(_ent . sha256)
			(_gen
				((RESET_VALUE)((i 2)))
			)
		)
	)
	(_object
		(_type(_int ~STD_LOGIC_VECTOR{0~to~{16*WORD_SIZE}-1}~13 0 22(_array -1((_to i 0 i 511)))))
		(_type(_int ~STD_LOGIC_VECTOR{{WORD_SIZE*8}-1~downto~0}~13 0 24(_array -1((_dto i 255 i 0)))))
		(_cnst(_int WORD_SIZE -2 0 29(_arch((i 32)))))
		(_sig(_int clk -1 0 32(_arch(_uni((i 2))))))
		(_sig(_int rst -1 0 33(_arch(_uni((i 2))))))
		(_sig(_int data_ready -1 0 34(_arch(_uni((i 2))))))
		(_sig(_int n_blocks -2 0 35(_arch(_uni((i 0))))))
		(_type(_int ~STD_LOGIC_VECTOR{0~to~{16*WORD_SIZE}-1}~132 0 36(_array -1((_to i 0 i 511)))))
		(_sig(_int msg_block_in 2 0 36(_arch(_uni((_others(i 2)))))))
		(_sig(_int finished -1 0 39(_arch(_uni))))
		(_type(_int ~STD_LOGIC_VECTOR{{WORD_SIZE*8}-1~downto~0}~134 0 40(_array -1((_dto i 255 i 0)))))
		(_sig(_int data_out 3 0 40(_arch(_uni))))
		(_cnst(_int clk_period -3 0 43(_arch((ns 4621819117588971520)))))
		(_cnst(_int \clk_period/2\ -3 0 0(_int gms(_code 2))))
		(_prcs
			(clk_process(_arch 0 0 63(_prcs(_wait_for)(_trgt(0)))))
			(stim_proc(_arch 1 0 72(_prcs(_wait_for)(_trgt(1)(2)(3)(4))(_sens(5))(_mon)(_read(6)))))
		)
		(_type(_ext ieee.std_logic_1164.STD_LOGIC(0 STD_LOGIC)))
		(_type(_ext std.standard.NATURAL(1 NATURAL)))
		(_var(_ext sha256.sha256_pkg.WORD_SIZE(2 WORD_SIZE)))
		(_type(_ext std.standard.TIME(1 TIME)))
	)
	(_use(ieee(std_logic_1164))(std(standard))(.(sha256_pkg))(ieee(NUMERIC_STD)))
	(_static
		
		
		(1752392008 1668180256 1701999215 1881175139 544372079 1981833580 1969581153 1650532466 99)
		(1752392008 1953459744 1852401184 1701344105 100)
	)
	(_model . behavior 3 -1)
)
I 000052 55 12918         1705872269578 sha256_ARCH
(_unit VHDL(sha256 0 6(sha256_arch 0 22))
	(_version vef)
	(_time 1705872269579 2024.01.21 16:24:29)
	(_source(\../src/sha256.vhd\))
	(_parameters tan)
	(_code 343666313863612736363164226f66323c323537363731)
	(_ent
		(_time 1705867572636)
	)
	(_generate MESSAGE_BLOCK_INTERMEDIATE 0 246(_for 4 )
		(_object
			(_cnst(_int i 4 0 247(_arch)))
			(_prcs
				(line__249(_arch 3 0 249(_assignment(_trgt(24(_object 3)))(_sens(4(_range 8)))(_read(4(_range 9))))))
			)
		)
	)
	(_generate MESSAGE_SCHEDULE_INTERMEDIATE_00 0 252(_for 5 )
		(_object
			(_cnst(_int i 5 0 253(_arch)))
			(_prcs
				(line__255(_arch 4 0 255(_assignment(_trgt(25(_object 4)))(_sens(21(_object 4)))(_read(21(_object 4))))))
			)
		)
	)
	(_generate MESSAGE_SCHEDULE_INTERMEDIATE_01 0 258(_for 6 )
		(_object
			(_cnst(_int i 6 0 259(_arch)))
			(_prcs
				(line__261(_arch 5 0 261(_assignment(_trgt(25(_object 5)))(_sens(25(_index 10))(25(_index 11))(25(_index 12))(25(_index 13)))(_read(25(_index 14))(25(_index 15))(25(_index 16))(25(_index 17))))))
			)
		)
	)
	(_object
		(_gen(_int RESET_VALUE -1 0 8 \'0'\ (_ent gms((i 2)))))
		(_port(_int clk -1 0 11(_ent(_in)(_event))))
		(_port(_int rst -1 0 12(_ent(_in)(_event))))
		(_port(_int data_ready -1 0 13(_ent(_in))))
		(_port(_int n_blocks -2 0 14(_ent(_in))))
		(_type(_int ~STD_LOGIC_VECTOR{0~to~{16*WORD_SIZE}-1}~12 0 15(_array -1((_to i 0 i 511)))))
		(_port(_int msg_block_in 0 0 15(_ent(_in))))
		(_port(_int finished -1 0 17(_ent(_out))))
		(_type(_int ~STD_LOGIC_VECTOR{{WORD_SIZE*8}-1~downto~0}~12 0 18(_array -1((_dto i 255 i 0)))))
		(_port(_int data_out 1 0 18(_ent(_out))))
		(_sig(_int HASH_ROUND_COUNTER -2 0 23(_arch(_uni((i 0))))))
		(_sig(_int MSG_BLOCK_COUNTER -2 0 24(_arch(_uni((i 0))))))
		(_sig(_int HASH_02_COUNTER -2 0 25(_arch(_uni((i 0))))))
		(_cnst(_int HASH_02_COUNT_LIMIT -2 0 26(_arch((i 64)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~13 0 29(_array -1((_dto i 31 i 0)))))
		(_sig(_int T1 2 0 29(_arch(_uni((_others(i 2)))))))
		(_sig(_int T2 2 0 30(_arch(_uni((_others(i 2)))))))
		(_sig(_int a 2 0 33(_arch(_uni((_others(i 2)))))))
		(_sig(_int b 2 0 34(_arch(_uni((_others(i 2)))))))
		(_sig(_int c 2 0 35(_arch(_uni((_others(i 2)))))))
		(_sig(_int d 2 0 36(_arch(_uni((_others(i 2)))))))
		(_sig(_int e 2 0 37(_arch(_uni((_others(i 2)))))))
		(_sig(_int f 2 0 38(_arch(_uni((_others(i 2)))))))
		(_sig(_int g 2 0 39(_arch(_uni((_others(i 2)))))))
		(_sig(_int h 2 0 40(_arch(_uni((_others(i 2)))))))
		(_cnst(_int K -3 0 42(_arch(((_string \"01000010100010100010111110011000"\))((_string \"01110001001101110100010010010001"\))((_string \"10110101110000001111101111001111"\))((_string \"11101001101101011101101110100101"\))((_string \"00111001010101101100001001011011"\))((_string \"01011001111100010001000111110001"\))((_string \"10010010001111111000001010100100"\))((_string \"10101011000111000101111011010101"\))((_string \"11011000000001111010101010011000"\))((_string \"00010010100000110101101100000001"\))((_string \"00100100001100011000010110111110"\))((_string \"01010101000011000111110111000011"\))((_string \"01110010101111100101110101110100"\))((_string \"10000000110111101011000111111110"\))((_string \"10011011110111000000011010100111"\))((_string \"11000001100110111111000101110100"\))((_string \"11100100100110110110100111000001"\))((_string \"11101111101111100100011110000110"\))((_string \"00001111110000011001110111000110"\))((_string \"00100100000011001010000111001100"\))((_string \"00101101111010010010110001101111"\))((_string \"01001010011101001000010010101010"\))((_string \"01011100101100001010100111011100"\))((_string \"01110110111110011000100011011010"\))((_string \"10011000001111100101000101010010"\))((_string \"10101000001100011100011001101101"\))((_string \"10110000000000110010011111001000"\))((_string \"10111111010110010111111111000111"\))((_string \"11000110111000000000101111110011"\))((_string \"11010101101001111001000101000111"\))((_string \"00000110110010100110001101010001"\))((_string \"00010100001010010010100101100111"\))((_string \"00100111101101110000101010000101"\))((_string \"00101110000110110010000100111000"\))((_string \"01001101001011000110110111111100"\))((_string \"01010011001110000000110100010011"\))((_string \"01100101000010100111001101010100"\))((_string \"01110110011010100000101010111011"\))((_string \"10000001110000101100100100101110"\))((_string \"10010010011100100010110010000101"\))((_string \"10100010101111111110100010100001"\))((_string \"10101000000110100110011001001011"\))((_string \"11000010010010111000101101110000"\))((_string \"11000111011011000101000110100011"\))((_string \"11010001100100101110100000011001"\))((_string \"11010110100110010000011000100100"\))((_string \"11110100000011100011010110000101"\))((_string \"00010000011010101010000001110000"\))((_string \"00011001101001001100000100010110"\))((_string \"00011110001101110110110000001000"\))((_string \"00100111010010000111011101001100"\))((_string \"00110100101100001011110010110101"\))((_string \"00111001000111000000110010110011"\))((_string \"01001110110110001010101001001010"\))((_string \"01011011100111001100101001001111"\))((_string \"01101000001011100110111111110011"\))((_string \"01110100100011111000001011101110"\))((_string \"01111000101001010110001101101111"\))((_string \"10000100110010000111100000010100"\))((_string \"10001100110001110000001000001000"\))((_string \"10010000101111101111111111111010"\))((_string \"10100100010100000110110011101011"\))((_string \"10111110111110011010001111110111"\))((_string \"11000110011100010111100011110010"\))))))
		(_sig(_int W -3 0 62(_arch(_uni(((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\)))))))
		(_sig(_int M -4 0 83(_arch(_uni))))
		(_sig(_int HV -5 0 85(_arch(_uni))))
		(_sig(_int HV_INITIAL_VALUES -5 0 86(_arch(_uni(((_string \"01101010000010011110011001100111"\))((_string \"10111011011001111010111010000101"\))((_string \"00111100011011101111001101110010"\))((_string \"10100101010011111111010100111010"\))((_string \"01010001000011100101001001111111"\))((_string \"10011011000001010110100010001100"\))((_string \"00011111100000111101100110101011"\))((_string \"01011011111000001100110100011001"\)))))))
		(_sig(_int M_INT -4 0 91(_arch(_uni))))
		(_sig(_int W_INT -3 0 94(_arch(_uni))))
		(_type(_int SHA_256_HASH_CORE_STATE 0 97(_enum1 RESET IDLE READ_MSG_BLOCK PREP_MSG_SCHEDULE_00 PREP_MSG_SCHEDULE_01 PREP_MSG_SCHEDULE_02 PREP_MSG_SCHEDULE_03 HASH_01 HASH_02 HASH_02b HASH_02c HASH_03 DONE (_to i 0 i 12))))
		(_sig(_int CURRENT_STATE 3 0 98(_arch(_uni)(_event))))
		(_sig(_int NEXT_STATE 3 0 98(_arch(_uni))))
		(_sig(_int PREVIOUS_STATE 3 0 99(_arch(_uni((i 2))))))
		(_type(_int ~INTEGER~range~0~to~15~13 0 247(_scalar (_to i 0 i 15))))
		(_type(_int ~INTEGER~range~0~to~15~135 0 253(_scalar (_to i 0 i 15))))
		(_type(_int ~INTEGER~range~16~to~63~13 0 259(_scalar (_to i 16 i 63))))
		(_prcs
			(line__104(_arch 0 0 104(_prcs(_trgt(26))(_sens(0)(1)(27))(_dssslsensitivity 2))))
			(line__115(_arch 1 0 115(_prcs(_simple)(_trgt(27))(_sens(7)(9)(26)(1)(2)(3)))))
			(line__166(_arch 2 0 166(_prcs(_trgt(7)(8)(9)(10)(11)(12)(13)(14)(15)(16)(17)(18)(19)(20(t_48_63))(20(t_32_47))(20(t_16_31))(20(t_0_15))(20)(21)(22(7))(22(6))(22(5))(22(4))(22(3))(22(2))(22(1))(22(0))(22))(_sens(26)(0)(1)(7)(9)(10)(11)(12)(13)(14)(15)(16)(17)(18)(19)(20)(21)(22)(23)(24)(25(t_48_63))(25(t_32_47))(25(t_16_31))(25(t_0_15))(3))(_dssslsensitivity 3))))
			(line__265(_arch 6 0 265(_assignment(_trgt(5))(_sens(26)))))
			(line__268(_arch 7 0 268(_assignment(_alias((data_out)(HV(0))(HV(1))(HV(2))(HV(3))(HV(4))(HV(5))(HV(6))(HV(7))))(_trgt(6))(_sens(22(7))(22(6))(22(5))(22(4))(22(3))(22(2))(22(1))(22(0))))))
		)
		(_subprogram
			(_ext SIGMA_UCASE_1(2 6))
			(_ext CH(2 3))
			(_ext SIGMA_UCASE_0(2 5))
			(_ext MAJ(2 4))
			(_ext SIGMA_LCASE_1(2 8))
			(_ext SIGMA_LCASE_0(2 7))
		)
		(_type(_ext ieee.std_logic_1164.STD_LOGIC(0 STD_LOGIC)))
		(_type(_ext std.standard.NATURAL(1 NATURAL)))
		(_var(_ext sha256.sha256_pkg.WORD_SIZE(2 WORD_SIZE)))
		(_type(_ext sha256.sha256_pkg.K_DATA(2 K_DATA)))
		(_type(_ext sha256.sha256_pkg.M_DATA(2 M_DATA)))
		(_type(_ext sha256.sha256_pkg.H_DATA(2 H_DATA)))
		(_type(_ext ieee.std_logic_1164.STD_ULOGIC(0 STD_ULOGIC)))
		(_type(_ext ieee.NUMERIC_STD.UNSIGNED(3 UNSIGNED)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1526(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1526)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1512(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1512)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1514(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1514)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1516(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1516)))
		(_type(_ext ieee.std_logic_1164.STD_LOGIC_VECTOR(0 STD_LOGIC_VECTOR)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1524(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1524)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1518(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1518)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1520(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1520)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1522(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1522)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1530(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1530)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1528(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1528)))
		(_type(_ext std.standard.INTEGER(1 INTEGER)))
	)
	(_use(ieee(std_logic_1164))(std(standard))(.(sha256_pkg))(ieee(NUMERIC_STD)))
	(_model . sha256_ARCH 18 -1)
)
I 000049 55 4342          1705872269591 behavior
(_unit VHDL(sha256_tb 0 6(behavior 0 10))
	(_version vef)
	(_time 1705872269592 2024.01.21 16:24:29)
	(_source(\../src/sha256_testbench.vhd\))
	(_parameters tan)
	(_code 43411141481416504745561c144615444745414440)
	(_ent
		(_time 1705867572661)
	)
	(_comp
		(sha256
			(_object
				(_gen(_int RESET_VALUE -1 0 15(_ent((i 2)))))
				(_port(_int clk -1 0 18(_ent (_in))))
				(_port(_int rst -1 0 19(_ent (_in))))
				(_port(_int data_ready -1 0 20(_ent (_in))))
				(_port(_int n_blocks -2 0 21(_ent (_in))))
				(_port(_int msg_block_in 0 0 22(_ent (_in))))
				(_port(_int finished -1 0 23(_ent (_out))))
				(_port(_int data_out 1 0 24(_ent (_out))))
			)
		)
	)
	(_inst uut 0 48(_comp sha256)
		(_gen
			((RESET_VALUE)((i 2)))
		)
		(_port
			((clk)(clk))
			((rst)(rst))
			((data_ready)(data_ready))
			((n_blocks)(n_blocks))
			((msg_block_in)(msg_block_in))
			((finished)(finished))
			((data_out)(data_out))
		)
		(_use(_ent . sha256)
			(_gen
				((RESET_VALUE)((i 2)))
			)
		)
	)
	(_object
		(_type(_int ~STD_LOGIC_VECTOR{0~to~{16*WORD_SIZE}-1}~13 0 22(_array -1((_to i 0 i 511)))))
		(_type(_int ~STD_LOGIC_VECTOR{{WORD_SIZE*8}-1~downto~0}~13 0 24(_array -1((_dto i 255 i 0)))))
		(_cnst(_int WORD_SIZE -2 0 29(_arch((i 32)))))
		(_sig(_int clk -1 0 32(_arch(_uni((i 2))))))
		(_sig(_int rst -1 0 33(_arch(_uni((i 2))))))
		(_sig(_int data_ready -1 0 34(_arch(_uni((i 2))))))
		(_sig(_int n_blocks -2 0 35(_arch(_uni((i 0))))))
		(_type(_int ~STD_LOGIC_VECTOR{0~to~{16*WORD_SIZE}-1}~132 0 36(_array -1((_to i 0 i 511)))))
		(_sig(_int msg_block_in 2 0 36(_arch(_uni((_others(i 2)))))))
		(_sig(_int finished -1 0 39(_arch(_uni))))
		(_type(_int ~STD_LOGIC_VECTOR{{WORD_SIZE*8}-1~downto~0}~134 0 40(_array -1((_dto i 255 i 0)))))
		(_sig(_int data_out 3 0 40(_arch(_uni))))
		(_cnst(_int clk_period -3 0 43(_arch((ns 4621819117588971520)))))
		(_cnst(_int \clk_period/2\ -3 0 0(_int gms(_code 2))))
		(_prcs
			(clk_process(_arch 0 0 63(_prcs(_wait_for)(_trgt(0)))))
			(stim_proc(_arch 1 0 72(_prcs(_wait_for)(_trgt(1)(2)(3)(4))(_sens(5))(_mon)(_read(6)))))
		)
		(_type(_ext ieee.std_logic_1164.STD_LOGIC(0 STD_LOGIC)))
		(_type(_ext std.standard.NATURAL(1 NATURAL)))
		(_var(_ext sha256.sha256_pkg.WORD_SIZE(2 WORD_SIZE)))
		(_type(_ext std.standard.TIME(1 TIME)))
	)
	(_use(ieee(std_logic_1164))(std(standard))(.(sha256_pkg))(ieee(NUMERIC_STD)))
	(_static
		
		
		(1752392008 1668180256 1701999215 1881175139 544372079 1981833580 1969581153 1650532466 99)
		(1752392008 1953459744 1852401184 1701344105 100)
	)
	(_model . behavior 3 -1)
)
I 000049 55 4994          1705872329013 behavior
(_unit VHDL(sha256_tb 0 6(behavior 0 10))
	(_version vef)
	(_time 1705872329014 2024.01.21 16:25:28)
	(_source(\../src/sha256_testbench.vhd\))
	(_parameters tan)
	(_code 5152505258060442555b440e065407565557535652)
	(_ent
		(_time 1705867572661)
	)
	(_comp
		(sha256
			(_object
				(_gen(_int RESET_VALUE -1 0 15(_ent((i 2)))))
				(_port(_int clk -1 0 18(_ent (_in))))
				(_port(_int rst -1 0 19(_ent (_in))))
				(_port(_int data_ready -1 0 20(_ent (_in))))
				(_port(_int n_blocks -2 0 21(_ent (_in))))
				(_port(_int msg_block_in 0 0 22(_ent (_in))))
				(_port(_int finished -1 0 23(_ent (_out))))
				(_port(_int data_out 1 0 24(_ent (_out))))
			)
		)
	)
	(_inst uut 0 48(_comp sha256)
		(_gen
			((RESET_VALUE)((i 2)))
		)
		(_port
			((clk)(clk))
			((rst)(rst))
			((data_ready)(data_ready))
			((n_blocks)(n_blocks))
			((msg_block_in)(msg_block_in))
			((finished)(finished))
			((data_out)(data_out))
		)
		(_use(_ent . sha256)
			(_gen
				((RESET_VALUE)((i 2)))
			)
		)
	)
	(_object
		(_type(_int ~STD_LOGIC_VECTOR{0~to~{16*WORD_SIZE}-1}~13 0 22(_array -1((_to i 0 i 511)))))
		(_type(_int ~STD_LOGIC_VECTOR{{WORD_SIZE*8}-1~downto~0}~13 0 24(_array -1((_dto i 255 i 0)))))
		(_cnst(_int WORD_SIZE -2 0 29(_arch((i 32)))))
		(_sig(_int clk -1 0 32(_arch(_uni((i 2))))))
		(_sig(_int rst -1 0 33(_arch(_uni((i 2))))))
		(_sig(_int data_ready -1 0 34(_arch(_uni((i 2))))))
		(_sig(_int n_blocks -2 0 35(_arch(_uni((i 0))))))
		(_type(_int ~STD_LOGIC_VECTOR{0~to~{16*WORD_SIZE}-1}~132 0 36(_array -1((_to i 0 i 511)))))
		(_sig(_int msg_block_in 2 0 36(_arch(_uni((_others(i 2)))))))
		(_sig(_int finished -1 0 39(_arch(_uni))))
		(_type(_int ~STD_LOGIC_VECTOR{{WORD_SIZE*8}-1~downto~0}~134 0 40(_array -1((_dto i 255 i 0)))))
		(_sig(_int data_out 3 0 40(_arch(_uni))))
		(_cnst(_int clk_period -3 0 43(_arch((ns 4621819117588971520)))))
		(_cnst(_int \clk_period/2\ -3 0 0(_int gms(_code 2))))
		(_prcs
			(clk_process(_arch 0 0 63(_prcs(_wait_for)(_trgt(0)))))
			(stim_proc(_arch 1 0 72(_prcs(_wait_for)(_trgt(1)(2)(3)(4))(_sens(5))(_mon)(_read(6)))))
		)
		(_type(_ext ieee.std_logic_1164.STD_LOGIC(0 STD_LOGIC)))
		(_type(_ext std.standard.NATURAL(1 NATURAL)))
		(_var(_ext sha256.sha256_pkg.WORD_SIZE(2 WORD_SIZE)))
		(_type(_ext std.standard.TIME(1 TIME)))
	)
	(_use(ieee(std_logic_1164))(std(standard))(.(sha256_pkg))(ieee(NUMERIC_STD)))
	(_static
		
		
		(1752392008 1668180256 1701999215 1881175139 544372079 1981833580 1969581153 1650532466 99)
		
		(1752392008 1818321696 3916199267 1970237472 1634476146 1818326560 544372069 6513249)
		(1752392008 1953459744 1852401184 1701344105 100)
	)
	(_model . behavior 3 -1)
)
I 000049 55 4987          1705872379932 behavior
(_unit VHDL(sha256_tb 0 6(behavior 0 10))
	(_version vef)
	(_time 1705872379933 2024.01.21 16:26:19)
	(_source(\../src/sha256_testbench.vhd\))
	(_parameters tan)
	(_code 3b3c313e616c6e283f312e646c3e6d3c3f3d393c38)
	(_ent
		(_time 1705867572661)
	)
	(_comp
		(sha256
			(_object
				(_gen(_int RESET_VALUE -1 0 15(_ent((i 2)))))
				(_port(_int clk -1 0 18(_ent (_in))))
				(_port(_int rst -1 0 19(_ent (_in))))
				(_port(_int data_ready -1 0 20(_ent (_in))))
				(_port(_int n_blocks -2 0 21(_ent (_in))))
				(_port(_int msg_block_in 0 0 22(_ent (_in))))
				(_port(_int finished -1 0 23(_ent (_out))))
				(_port(_int data_out 1 0 24(_ent (_out))))
			)
		)
	)
	(_inst uut 0 48(_comp sha256)
		(_gen
			((RESET_VALUE)((i 2)))
		)
		(_port
			((clk)(clk))
			((rst)(rst))
			((data_ready)(data_ready))
			((n_blocks)(n_blocks))
			((msg_block_in)(msg_block_in))
			((finished)(finished))
			((data_out)(data_out))
		)
		(_use(_ent . sha256)
			(_gen
				((RESET_VALUE)((i 2)))
			)
		)
	)
	(_object
		(_type(_int ~STD_LOGIC_VECTOR{0~to~{16*WORD_SIZE}-1}~13 0 22(_array -1((_to i 0 i 511)))))
		(_type(_int ~STD_LOGIC_VECTOR{{WORD_SIZE*8}-1~downto~0}~13 0 24(_array -1((_dto i 255 i 0)))))
		(_cnst(_int WORD_SIZE -2 0 29(_arch((i 32)))))
		(_sig(_int clk -1 0 32(_arch(_uni((i 2))))))
		(_sig(_int rst -1 0 33(_arch(_uni((i 2))))))
		(_sig(_int data_ready -1 0 34(_arch(_uni((i 2))))))
		(_sig(_int n_blocks -2 0 35(_arch(_uni((i 0))))))
		(_type(_int ~STD_LOGIC_VECTOR{0~to~{16*WORD_SIZE}-1}~132 0 36(_array -1((_to i 0 i 511)))))
		(_sig(_int msg_block_in 2 0 36(_arch(_uni((_others(i 2)))))))
		(_sig(_int finished -1 0 39(_arch(_uni))))
		(_type(_int ~STD_LOGIC_VECTOR{{WORD_SIZE*8}-1~downto~0}~134 0 40(_array -1((_dto i 255 i 0)))))
		(_sig(_int data_out 3 0 40(_arch(_uni))))
		(_cnst(_int clk_period -3 0 43(_arch((ns 4621819117588971520)))))
		(_cnst(_int \clk_period/2\ -3 0 0(_int gms(_code 2))))
		(_prcs
			(clk_process(_arch 0 0 63(_prcs(_wait_for)(_trgt(0)))))
			(stim_proc(_arch 1 0 72(_prcs(_wait_for)(_trgt(1)(2)(3)(4))(_mon)(_read(5)(6)))))
		)
		(_type(_ext ieee.std_logic_1164.STD_LOGIC(0 STD_LOGIC)))
		(_type(_ext std.standard.NATURAL(1 NATURAL)))
		(_var(_ext sha256.sha256_pkg.WORD_SIZE(2 WORD_SIZE)))
		(_type(_ext std.standard.TIME(1 TIME)))
	)
	(_use(ieee(std_logic_1164))(std(standard))(.(sha256_pkg))(ieee(NUMERIC_STD)))
	(_static
		(33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018)
		
		(1752392008 1668180256 1701999215 1881175139 544372079 1981833580 1969581153 1650532466 99)
		
		(1752392008 1818321696 3916199267 1970237472 1634476146 1818326560 544372069 6513249)
		(1752392008 1953459744 1852401184 1701344105 100)
	)
	(_model . behavior 3 -1)
)
I 000049 55 4987          1705872395447 behavior
(_unit VHDL(sha256_tb 0 6(behavior 0 10))
	(_version vef)
	(_time 1705872395448 2024.01.21 16:26:35)
	(_source(\../src/sha256_testbench.vhd\))
	(_parameters tan)
	(_code d7d4d185d88082c4d3ddc28880d281d0d3d1d5d0d4)
	(_ent
		(_time 1705867572661)
	)
	(_comp
		(sha256
			(_object
				(_gen(_int RESET_VALUE -1 0 15(_ent((i 2)))))
				(_port(_int clk -1 0 18(_ent (_in))))
				(_port(_int rst -1 0 19(_ent (_in))))
				(_port(_int data_ready -1 0 20(_ent (_in))))
				(_port(_int n_blocks -2 0 21(_ent (_in))))
				(_port(_int msg_block_in 0 0 22(_ent (_in))))
				(_port(_int finished -1 0 23(_ent (_out))))
				(_port(_int data_out 1 0 24(_ent (_out))))
			)
		)
	)
	(_inst uut 0 48(_comp sha256)
		(_gen
			((RESET_VALUE)((i 2)))
		)
		(_port
			((clk)(clk))
			((rst)(rst))
			((data_ready)(data_ready))
			((n_blocks)(n_blocks))
			((msg_block_in)(msg_block_in))
			((finished)(finished))
			((data_out)(data_out))
		)
		(_use(_ent . sha256)
			(_gen
				((RESET_VALUE)((i 2)))
			)
		)
	)
	(_object
		(_type(_int ~STD_LOGIC_VECTOR{0~to~{16*WORD_SIZE}-1}~13 0 22(_array -1((_to i 0 i 511)))))
		(_type(_int ~STD_LOGIC_VECTOR{{WORD_SIZE*8}-1~downto~0}~13 0 24(_array -1((_dto i 255 i 0)))))
		(_cnst(_int WORD_SIZE -2 0 29(_arch((i 32)))))
		(_sig(_int clk -1 0 32(_arch(_uni((i 2))))))
		(_sig(_int rst -1 0 33(_arch(_uni((i 2))))))
		(_sig(_int data_ready -1 0 34(_arch(_uni((i 2))))))
		(_sig(_int n_blocks -2 0 35(_arch(_uni((i 0))))))
		(_type(_int ~STD_LOGIC_VECTOR{0~to~{16*WORD_SIZE}-1}~132 0 36(_array -1((_to i 0 i 511)))))
		(_sig(_int msg_block_in 2 0 36(_arch(_uni((_others(i 2)))))))
		(_sig(_int finished -1 0 39(_arch(_uni))))
		(_type(_int ~STD_LOGIC_VECTOR{{WORD_SIZE*8}-1~downto~0}~134 0 40(_array -1((_dto i 255 i 0)))))
		(_sig(_int data_out 3 0 40(_arch(_uni))))
		(_cnst(_int clk_period -3 0 43(_arch((ns 4621819117588971520)))))
		(_cnst(_int \clk_period/2\ -3 0 0(_int gms(_code 2))))
		(_prcs
			(clk_process(_arch 0 0 63(_prcs(_wait_for)(_trgt(0)))))
			(stim_proc(_arch 1 0 72(_prcs(_wait_for)(_trgt(1)(2)(3)(4))(_mon)(_read(5)(6)))))
		)
		(_type(_ext ieee.std_logic_1164.STD_LOGIC(0 STD_LOGIC)))
		(_type(_ext std.standard.NATURAL(1 NATURAL)))
		(_var(_ext sha256.sha256_pkg.WORD_SIZE(2 WORD_SIZE)))
		(_type(_ext std.standard.TIME(1 TIME)))
	)
	(_use(ieee(std_logic_1164))(std(standard))(.(sha256_pkg))(ieee(NUMERIC_STD)))
	(_static
		
		(50528771 33751555 50529026 33686019 50463234 33751810 50528771 50529027 33686019 50529027 33686018 50463234 33686275 50529027 33751811 33751555 33686274 50463234 33686274 33686018 50463491 33751811 50463490 50463491 33751555 33751811 33751554 33751554 33751554 50528770 50528771 33686018 33686018 50528770 33751810 50463234 33751555 50528770 50463235 33751810 50463234 50529026 50529026 33751555 50463235 33686275 50528771 33686274 50463234 33686018 50529027 50529027 33751810 50463234 50529027 33751554 33686018 33686018 50463234 50463490 33751555 50463491)
		(1752392008 1668180256 1701999215 1881175139 544372079 1981833580 1969581153 1650532466 99)
		
		(1752392008 1818321696 3916199267 1970237472 1634476146 1818326560 544372069 6513249)
		(1752392008 1953459744 1852401184 1701344105 100)
	)
	(_model . behavior 3 -1)
)
I 000049 55 4987          1705872408038 behavior
(_unit VHDL(sha256_tb 0 6(behavior 0 10))
	(_version vef)
	(_time 1705872408039 2024.01.21 16:26:48)
	(_source(\../src/sha256_testbench.vhd\))
	(_parameters tan)
	(_code 09090d0f085e5c1a0d031c565e0c5f0e0d0f0b0e0a)
	(_ent
		(_time 1705867572661)
	)
	(_comp
		(sha256
			(_object
				(_gen(_int RESET_VALUE -1 0 15(_ent((i 2)))))
				(_port(_int clk -1 0 18(_ent (_in))))
				(_port(_int rst -1 0 19(_ent (_in))))
				(_port(_int data_ready -1 0 20(_ent (_in))))
				(_port(_int n_blocks -2 0 21(_ent (_in))))
				(_port(_int msg_block_in 0 0 22(_ent (_in))))
				(_port(_int finished -1 0 23(_ent (_out))))
				(_port(_int data_out 1 0 24(_ent (_out))))
			)
		)
	)
	(_inst uut 0 48(_comp sha256)
		(_gen
			((RESET_VALUE)((i 2)))
		)
		(_port
			((clk)(clk))
			((rst)(rst))
			((data_ready)(data_ready))
			((n_blocks)(n_blocks))
			((msg_block_in)(msg_block_in))
			((finished)(finished))
			((data_out)(data_out))
		)
		(_use(_ent . sha256)
			(_gen
				((RESET_VALUE)((i 2)))
			)
		)
	)
	(_object
		(_type(_int ~STD_LOGIC_VECTOR{0~to~{16*WORD_SIZE}-1}~13 0 22(_array -1((_to i 0 i 511)))))
		(_type(_int ~STD_LOGIC_VECTOR{{WORD_SIZE*8}-1~downto~0}~13 0 24(_array -1((_dto i 255 i 0)))))
		(_cnst(_int WORD_SIZE -2 0 29(_arch((i 32)))))
		(_sig(_int clk -1 0 32(_arch(_uni((i 2))))))
		(_sig(_int rst -1 0 33(_arch(_uni((i 2))))))
		(_sig(_int data_ready -1 0 34(_arch(_uni((i 2))))))
		(_sig(_int n_blocks -2 0 35(_arch(_uni((i 0))))))
		(_type(_int ~STD_LOGIC_VECTOR{0~to~{16*WORD_SIZE}-1}~132 0 36(_array -1((_to i 0 i 511)))))
		(_sig(_int msg_block_in 2 0 36(_arch(_uni((_others(i 2)))))))
		(_sig(_int finished -1 0 39(_arch(_uni))))
		(_type(_int ~STD_LOGIC_VECTOR{{WORD_SIZE*8}-1~downto~0}~134 0 40(_array -1((_dto i 255 i 0)))))
		(_sig(_int data_out 3 0 40(_arch(_uni))))
		(_cnst(_int clk_period -3 0 43(_arch((ns 4621819117588971520)))))
		(_cnst(_int \clk_period/2\ -3 0 0(_int gms(_code 2))))
		(_prcs
			(clk_process(_arch 0 0 63(_prcs(_wait_for)(_trgt(0)))))
			(stim_proc(_arch 1 0 72(_prcs(_wait_for)(_trgt(1)(2)(3)(4))(_mon)(_read(5)(6)))))
		)
		(_type(_ext ieee.std_logic_1164.STD_LOGIC(0 STD_LOGIC)))
		(_type(_ext std.standard.NATURAL(1 NATURAL)))
		(_var(_ext sha256.sha256_pkg.WORD_SIZE(2 WORD_SIZE)))
		(_type(_ext std.standard.TIME(1 TIME)))
	)
	(_use(ieee(std_logic_1164))(std(standard))(.(sha256_pkg))(ieee(NUMERIC_STD)))
	(_static
		
		
		(1752392008 1668180256 1701999215 1881175139 544372079 1981833580 1969581153 1650532466 99)
		
		(1752392008 1818321696 3916199267 1970237472 1634476146 1818326560 544372069 6513249)
		(1752392008 1953459744 1852401184 1701344105 100)
	)
	(_model . behavior 3 -1)
)
I 000049 55 4994          1705872447691 behavior
(_unit VHDL(sha256_tb 0 6(behavior 0 10))
	(_version vef)
	(_time 1705872447692 2024.01.21 16:27:27)
	(_source(\../src/sha256_testbench.vhd\))
	(_parameters tan)
	(_code f1f7f3a1f8a6a4e2f5fbe4aea6f4a7f6f5f7f3f6f2)
	(_ent
		(_time 1705867572661)
	)
	(_comp
		(sha256
			(_object
				(_gen(_int RESET_VALUE -1 0 15(_ent((i 2)))))
				(_port(_int clk -1 0 18(_ent (_in))))
				(_port(_int rst -1 0 19(_ent (_in))))
				(_port(_int data_ready -1 0 20(_ent (_in))))
				(_port(_int n_blocks -2 0 21(_ent (_in))))
				(_port(_int msg_block_in 0 0 22(_ent (_in))))
				(_port(_int finished -1 0 23(_ent (_out))))
				(_port(_int data_out 1 0 24(_ent (_out))))
			)
		)
	)
	(_inst uut 0 48(_comp sha256)
		(_gen
			((RESET_VALUE)((i 2)))
		)
		(_port
			((clk)(clk))
			((rst)(rst))
			((data_ready)(data_ready))
			((n_blocks)(n_blocks))
			((msg_block_in)(msg_block_in))
			((finished)(finished))
			((data_out)(data_out))
		)
		(_use(_ent . sha256)
			(_gen
				((RESET_VALUE)((i 2)))
			)
		)
	)
	(_object
		(_type(_int ~STD_LOGIC_VECTOR{0~to~{16*WORD_SIZE}-1}~13 0 22(_array -1((_to i 0 i 511)))))
		(_type(_int ~STD_LOGIC_VECTOR{{WORD_SIZE*8}-1~downto~0}~13 0 24(_array -1((_dto i 255 i 0)))))
		(_cnst(_int WORD_SIZE -2 0 29(_arch((i 32)))))
		(_sig(_int clk -1 0 32(_arch(_uni((i 2))))))
		(_sig(_int rst -1 0 33(_arch(_uni((i 2))))))
		(_sig(_int data_ready -1 0 34(_arch(_uni((i 2))))))
		(_sig(_int n_blocks -2 0 35(_arch(_uni((i 0))))))
		(_type(_int ~STD_LOGIC_VECTOR{0~to~{16*WORD_SIZE}-1}~132 0 36(_array -1((_to i 0 i 511)))))
		(_sig(_int msg_block_in 2 0 36(_arch(_uni((_others(i 2)))))))
		(_sig(_int finished -1 0 39(_arch(_uni))))
		(_type(_int ~STD_LOGIC_VECTOR{{WORD_SIZE*8}-1~downto~0}~134 0 40(_array -1((_dto i 255 i 0)))))
		(_sig(_int data_out 3 0 40(_arch(_uni))))
		(_cnst(_int clk_period -3 0 43(_arch((ns 4621819117588971520)))))
		(_cnst(_int \clk_period/2\ -3 0 0(_int gms(_code 2))))
		(_prcs
			(clk_process(_arch 0 0 63(_prcs(_wait_for)(_trgt(0)))))
			(stim_proc(_arch 1 0 72(_prcs(_wait_for)(_trgt(1)(2)(3)(4))(_sens(5))(_mon)(_read(6)))))
		)
		(_type(_ext ieee.std_logic_1164.STD_LOGIC(0 STD_LOGIC)))
		(_type(_ext std.standard.NATURAL(1 NATURAL)))
		(_var(_ext sha256.sha256_pkg.WORD_SIZE(2 WORD_SIZE)))
		(_type(_ext std.standard.TIME(1 TIME)))
	)
	(_use(ieee(std_logic_1164))(std(standard))(.(sha256_pkg))(ieee(NUMERIC_STD)))
	(_static
		
		
		(1752392008 1668180256 1701999215 1881175139 544372079 1981833580 1969581153 1650532466 99)
		
		(1752392008 1818321696 3916199267 1970237472 1634476146 1818326560 544372069 6513249)
		(1752392008 1953459744 1852401184 1701344105 100)
	)
	(_model . behavior 3 -1)
)
I 000052 55 12856         1705873069149 sha256_ARCH
(_unit VHDL(sha256 0 6(sha256_arch 0 22))
	(_version vef)
	(_time 1705873069150 2024.01.21 16:37:49)
	(_source(\../src/sha256.vhd\))
	(_parameters tan)
	(_code 8e81d980d3d9db9d8c8c8bd998d5dc8886888f8d8c8d8b)
	(_ent
		(_time 1705867572636)
	)
	(_generate MESSAGE_BLOCK_INTERMEDIATE 0 245(_for 4 )
		(_object
			(_cnst(_int i 4 0 246(_arch)))
			(_prcs
				(line__249(_arch 3 0 249(_assignment(_trgt(24(_object 3)))(_sens(4(_range 8)))(_read(4(_range 9))))))
			)
		)
	)
	(_generate MESSAGE_SCHEDULE_INTERMEDIATE_00 0 252(_for 5 )
		(_object
			(_cnst(_int i 5 0 253(_arch)))
			(_prcs
				(line__255(_arch 4 0 255(_assignment(_trgt(25(_object 4)))(_sens(21(_object 4)))(_read(21(_object 4))))))
			)
		)
	)
	(_generate MESSAGE_SCHEDULE_INTERMEDIATE_01 0 258(_for 6 )
		(_object
			(_cnst(_int i 6 0 259(_arch)))
			(_prcs
				(line__261(_arch 5 0 261(_assignment(_trgt(25(_object 5)))(_sens(25(_index 10))(25(_index 11))(25(_index 12))(25(_index 13)))(_read(25(_index 14))(25(_index 15))(25(_index 16))(25(_index 17))))))
			)
		)
	)
	(_object
		(_gen(_int RESET_VALUE -1 0 8 \'0'\ (_ent gms((i 2)))))
		(_port(_int clk -1 0 11(_ent(_in)(_event))))
		(_port(_int rst -1 0 12(_ent(_in)(_event))))
		(_port(_int data_ready -1 0 13(_ent(_in))))
		(_port(_int n_blocks -2 0 14(_ent(_in))))
		(_type(_int ~STD_LOGIC_VECTOR{0~to~{16*WORD_SIZE}-1}~12 0 15(_array -1((_to i 0 i 511)))))
		(_port(_int msg_block_in 0 0 15(_ent(_in))))
		(_port(_int finished -1 0 17(_ent(_out))))
		(_type(_int ~STD_LOGIC_VECTOR{{WORD_SIZE*8}-1~downto~0}~12 0 18(_array -1((_dto i 255 i 0)))))
		(_port(_int data_out 1 0 18(_ent(_out))))
		(_sig(_int HASH_ROUND_COUNTER -2 0 23(_arch(_uni((i 0))))))
		(_sig(_int MSG_BLOCK_COUNTER -2 0 24(_arch(_uni((i 0))))))
		(_sig(_int HASH_02_COUNTER -2 0 25(_arch(_uni((i 0))))))
		(_cnst(_int HASH_02_COUNT_LIMIT -2 0 26(_arch((i 64)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~13 0 29(_array -1((_dto i 31 i 0)))))
		(_sig(_int T1 2 0 29(_arch(_uni((_others(i 2)))))))
		(_sig(_int T2 2 0 30(_arch(_uni((_others(i 2)))))))
		(_sig(_int a 2 0 33(_arch(_uni((_others(i 2)))))))
		(_sig(_int b 2 0 34(_arch(_uni((_others(i 2)))))))
		(_sig(_int c 2 0 35(_arch(_uni((_others(i 2)))))))
		(_sig(_int d 2 0 36(_arch(_uni((_others(i 2)))))))
		(_sig(_int e 2 0 37(_arch(_uni((_others(i 2)))))))
		(_sig(_int f 2 0 38(_arch(_uni((_others(i 2)))))))
		(_sig(_int g 2 0 39(_arch(_uni((_others(i 2)))))))
		(_sig(_int h 2 0 40(_arch(_uni((_others(i 2)))))))
		(_cnst(_int K -3 0 42(_arch(((_string \"01000010100010100010111110011000"\))((_string \"01110001001101110100010010010001"\))((_string \"10110101110000001111101111001111"\))((_string \"11101001101101011101101110100101"\))((_string \"00111001010101101100001001011011"\))((_string \"01011001111100010001000111110001"\))((_string \"10010010001111111000001010100100"\))((_string \"10101011000111000101111011010101"\))((_string \"11011000000001111010101010011000"\))((_string \"00010010100000110101101100000001"\))((_string \"00100100001100011000010110111110"\))((_string \"01010101000011000111110111000011"\))((_string \"01110010101111100101110101110100"\))((_string \"10000000110111101011000111111110"\))((_string \"10011011110111000000011010100111"\))((_string \"11000001100110111111000101110100"\))((_string \"11100100100110110110100111000001"\))((_string \"11101111101111100100011110000110"\))((_string \"00001111110000011001110111000110"\))((_string \"00100100000011001010000111001100"\))((_string \"00101101111010010010110001101111"\))((_string \"01001010011101001000010010101010"\))((_string \"01011100101100001010100111011100"\))((_string \"01110110111110011000100011011010"\))((_string \"10011000001111100101000101010010"\))((_string \"10101000001100011100011001101101"\))((_string \"10110000000000110010011111001000"\))((_string \"10111111010110010111111111000111"\))((_string \"11000110111000000000101111110011"\))((_string \"11010101101001111001000101000111"\))((_string \"00000110110010100110001101010001"\))((_string \"00010100001010010010100101100111"\))((_string \"00100111101101110000101010000101"\))((_string \"00101110000110110010000100111000"\))((_string \"01001101001011000110110111111100"\))((_string \"01010011001110000000110100010011"\))((_string \"01100101000010100111001101010100"\))((_string \"01110110011010100000101010111011"\))((_string \"10000001110000101100100100101110"\))((_string \"10010010011100100010110010000101"\))((_string \"10100010101111111110100010100001"\))((_string \"10101000000110100110011001001011"\))((_string \"11000010010010111000101101110000"\))((_string \"11000111011011000101000110100011"\))((_string \"11010001100100101110100000011001"\))((_string \"11010110100110010000011000100100"\))((_string \"11110100000011100011010110000101"\))((_string \"00010000011010101010000001110000"\))((_string \"00011001101001001100000100010110"\))((_string \"00011110001101110110110000001000"\))((_string \"00100111010010000111011101001100"\))((_string \"00110100101100001011110010110101"\))((_string \"00111001000111000000110010110011"\))((_string \"01001110110110001010101001001010"\))((_string \"01011011100111001100101001001111"\))((_string \"01101000001011100110111111110011"\))((_string \"01110100100011111000001011101110"\))((_string \"01111000101001010110001101101111"\))((_string \"10000100110010000111100000010100"\))((_string \"10001100110001110000001000001000"\))((_string \"10010000101111101111111111111010"\))((_string \"10100100010100000110110011101011"\))((_string \"10111110111110011010001111110111"\))((_string \"11000110011100010111100011110010"\))))))
		(_sig(_int W -3 0 62(_arch(_uni(((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\)))))))
		(_sig(_int M -4 0 83(_arch(_uni))))
		(_sig(_int HV -5 0 85(_arch(_uni))))
		(_sig(_int HV_INITIAL_VALUES -5 0 86(_arch(_uni(((_string \"01101010000010011110011001100111"\))((_string \"10111011011001111010111010000101"\))((_string \"00111100011011101111001101110010"\))((_string \"10100101010011111111010100111010"\))((_string \"01010001000011100101001001111111"\))((_string \"10011011000001010110100010001100"\))((_string \"00011111100000111101100110101011"\))((_string \"01011011111000001100110100011001"\)))))))
		(_sig(_int M_INT -4 0 91(_arch(_uni))))
		(_sig(_int W_INT -3 0 94(_arch(_uni))))
		(_type(_int SHA_256_HASH_CORE_STATE 0 97(_enum1 RESET IDLE READ_MSG_BLOCK PREP_MSG_SCHEDULE_00 PREP_MSG_SCHEDULE_01 PREP_MSG_SCHEDULE_02 PREP_MSG_SCHEDULE_03 HASH_01 HASH_02 HASH_02b HASH_02c HASH_03 DONE (_to i 0 i 12))))
		(_sig(_int CURRENT_STATE 3 0 98(_arch(_uni)(_event))))
		(_sig(_int NEXT_STATE 3 0 98(_arch(_uni))))
		(_sig(_int PREVIOUS_STATE 3 0 99(_arch(_uni((i 2))))))
		(_type(_int ~INTEGER~range~0~to~15~13 0 246(_scalar (_to i 0 i 15))))
		(_type(_int ~INTEGER~range~0~to~15~135 0 253(_scalar (_to i 0 i 15))))
		(_type(_int ~INTEGER~range~16~to~63~13 0 259(_scalar (_to i 16 i 63))))
		(_prcs
			(line__104(_arch 0 0 104(_prcs(_trgt(26))(_sens(0)(1)(27))(_dssslsensitivity 2))))
			(line__115(_arch 1 0 115(_prcs(_simple)(_trgt(27))(_sens(7)(9)(26)(1)(2)(3)))))
			(line__165(_arch 2 0 165(_prcs(_trgt(7)(8)(9)(10)(11)(12)(13)(14)(15)(16)(17)(18)(19)(20(t_48_63))(20(t_32_47))(20(t_16_31))(20(t_0_15))(20)(21)(22(7))(22(6))(22(5))(22(4))(22(3))(22(2))(22(1))(22(0))(22))(_sens(26)(0)(1)(7)(9)(10)(11)(12)(13)(14)(15)(16)(17)(18)(19)(20)(21)(22)(23)(24)(25(t_48_63))(25(t_32_47))(25(t_16_31))(25(t_0_15))(3))(_dssslsensitivity 3))))
			(line__265(_arch 6 0 265(_assignment(_trgt(5))(_sens(26)))))
			(line__268(_arch 7 0 268(_assignment(_alias((data_out)(HV(0))(HV(1))(HV(2))(HV(3))(HV(4))(HV(5))(HV(6))(HV(7))))(_trgt(6))(_sens(22(7))(22(6))(22(5))(22(4))(22(3))(22(2))(22(1))(22(0))))))
		)
		(_subprogram
			(_ext SIGMA_UCASE_1(2 6))
			(_ext CH(2 3))
			(_ext SIGMA_UCASE_0(2 5))
			(_ext MAJ(2 4))
			(_ext SIGMA_LCASE_1(2 8))
			(_ext SIGMA_LCASE_0(2 7))
		)
		(_type(_ext ieee.std_logic_1164.STD_LOGIC(0 STD_LOGIC)))
		(_type(_ext std.standard.NATURAL(1 NATURAL)))
		(_var(_ext sha256.sha256_pkg.WORD_SIZE(2 WORD_SIZE)))
		(_type(_ext sha256.sha256_pkg.K_DATA(2 K_DATA)))
		(_type(_ext sha256.sha256_pkg.M_DATA(2 M_DATA)))
		(_type(_ext sha256.sha256_pkg.H_DATA(2 H_DATA)))
		(_type(_ext ieee.NUMERIC_STD.UNSIGNED(3 UNSIGNED)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1526(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1526)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1512(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1512)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1514(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1514)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1516(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1516)))
		(_type(_ext ieee.std_logic_1164.STD_LOGIC_VECTOR(0 STD_LOGIC_VECTOR)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1524(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1524)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1518(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1518)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1520(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1520)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1522(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1522)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1530(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1530)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1528(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1528)))
		(_type(_ext std.standard.INTEGER(1 INTEGER)))
	)
	(_use(ieee(std_logic_1164))(std(standard))(.(sha256_pkg))(ieee(NUMERIC_STD)))
	(_model . sha256_ARCH 18 -1)
)
I 000042 55 4005 1705867545881 sha256_pkg
(_unit VHDL(sha256_pkg 0 5(sha256_pkg 0 39))
	(_version vef)
	(_time 1705873069166 2024.01.21 16:37:49)
	(_source(\../src/sha256_pkg.vhd\))
	(_parameters tan)
	(_code 8e81d980d3d9db9d8a8e9bd1d98bd8898e88dc8889)
	(_ent
		(_time 1705867545881)
	)
	(_object
		(_cnst(_int WORD_SIZE -1 0 6(_ent((i 32)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~15 0 8(_array -2((_dto i 31 i 0)))))
		(_type(_int K_DATA 0 8(_array 0((_to i 0 i 63)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~152 0 9(_array -2((_dto i 31 i 0)))))
		(_type(_int M_DATA 0 9(_array 2((_to i 0 i 15)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~154 0 10(_array -2((_dto i 31 i 0)))))
		(_type(_int H_DATA 0 10(_array 4((_to i 0 i 7)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~156 0 13(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~158 0 15(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1510 0 17(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1512 0 19(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1514 0 20(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1516 0 21(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1518 0 23(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1520 0 24(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1522 0 25(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1524 0 28(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1526 0 30(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1528 0 32(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1530 0 34(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~16 0 40(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~162 0 46(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~164 0 52(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~166 0 58(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~168 0 59(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1610 0 60(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1612 0 66(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1614 0 67(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1616 0 68(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1618 0 74(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1620 0 80(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1622 0 86(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1624 0 92(_array -2((_dto i 31 i 0)))))
		(_subprogram
			(_int ROTR 0 0 40(_ent(_func)))
			(_int ROTL 1 0 46(_ent(_func)))
			(_int SHR 2 0 52(_ent(_func)))
			(_int CH 3 0 58(_ent(_func)))
			(_int MAJ 4 0 66(_ent(_func)))
			(_int SIGMA_UCASE_0 5 0 74(_ent(_func -3 15)))
			(_int SIGMA_UCASE_1 6 0 80(_ent(_func -3 16)))
			(_int SIGMA_LCASE_0 7 0 86(_ent(_func -3 17)))
			(_int SIGMA_LCASE_1 8 0 92(_ent(_func -3 18)))
		)
		(_type(_ext std.standard.NATURAL(0 NATURAL)))
		(_type(_ext ieee.std_logic_1164.STD_LOGIC(1 STD_LOGIC)))
		(_type(_ext ieee.std_logic_1164.STD_LOGIC_VECTOR(1 STD_LOGIC_VECTOR)))
		(_type(_ext ieee.NUMERIC_STD.UNSIGNED(2 UNSIGNED)))
		(_type(_ext std.standard.INTEGER(0 INTEGER)))
	)
	(_use(std(standard))(ieee(std_logic_1164))(ieee(NUMERIC_STD)))
	(_model . sha256_pkg 9 -1)
)
I 000049 55 4994          1705873069174 behavior
(_unit VHDL(sha256_tb 0 6(behavior 0 10))
	(_version vef)
	(_time 1705873069175 2024.01.21 16:37:49)
	(_source(\../src/sha256_testbench.vhd\))
	(_parameters tan)
	(_code 8e81d980d3d9db9d8a849bd1d98bd8898a888c898d)
	(_ent
		(_time 1705867572661)
	)
	(_comp
		(sha256
			(_object
				(_gen(_int RESET_VALUE -1 0 15(_ent((i 2)))))
				(_port(_int clk -1 0 18(_ent (_in))))
				(_port(_int rst -1 0 19(_ent (_in))))
				(_port(_int data_ready -1 0 20(_ent (_in))))
				(_port(_int n_blocks -2 0 21(_ent (_in))))
				(_port(_int msg_block_in 0 0 22(_ent (_in))))
				(_port(_int finished -1 0 23(_ent (_out))))
				(_port(_int data_out 1 0 24(_ent (_out))))
			)
		)
	)
	(_inst uut 0 48(_comp sha256)
		(_gen
			((RESET_VALUE)((i 2)))
		)
		(_port
			((clk)(clk))
			((rst)(rst))
			((data_ready)(data_ready))
			((n_blocks)(n_blocks))
			((msg_block_in)(msg_block_in))
			((finished)(finished))
			((data_out)(data_out))
		)
		(_use(_ent . sha256)
			(_gen
				((RESET_VALUE)((i 2)))
			)
		)
	)
	(_object
		(_type(_int ~STD_LOGIC_VECTOR{0~to~{16*WORD_SIZE}-1}~13 0 22(_array -1((_to i 0 i 511)))))
		(_type(_int ~STD_LOGIC_VECTOR{{WORD_SIZE*8}-1~downto~0}~13 0 24(_array -1((_dto i 255 i 0)))))
		(_cnst(_int WORD_SIZE -2 0 29(_arch((i 32)))))
		(_sig(_int clk -1 0 32(_arch(_uni((i 2))))))
		(_sig(_int rst -1 0 33(_arch(_uni((i 2))))))
		(_sig(_int data_ready -1 0 34(_arch(_uni((i 2))))))
		(_sig(_int n_blocks -2 0 35(_arch(_uni((i 0))))))
		(_type(_int ~STD_LOGIC_VECTOR{0~to~{16*WORD_SIZE}-1}~132 0 36(_array -1((_to i 0 i 511)))))
		(_sig(_int msg_block_in 2 0 36(_arch(_uni((_others(i 2)))))))
		(_sig(_int finished -1 0 39(_arch(_uni))))
		(_type(_int ~STD_LOGIC_VECTOR{{WORD_SIZE*8}-1~downto~0}~134 0 40(_array -1((_dto i 255 i 0)))))
		(_sig(_int data_out 3 0 40(_arch(_uni))))
		(_cnst(_int clk_period -3 0 43(_arch((ns 4621819117588971520)))))
		(_cnst(_int \clk_period/2\ -3 0 0(_int gms(_code 2))))
		(_prcs
			(clk_process(_arch 0 0 63(_prcs(_wait_for)(_trgt(0)))))
			(stim_proc(_arch 1 0 72(_prcs(_wait_for)(_trgt(1)(2)(3)(4))(_sens(5))(_mon)(_read(6)))))
		)
		(_type(_ext ieee.std_logic_1164.STD_LOGIC(0 STD_LOGIC)))
		(_type(_ext std.standard.NATURAL(1 NATURAL)))
		(_var(_ext sha256.sha256_pkg.WORD_SIZE(2 WORD_SIZE)))
		(_type(_ext std.standard.TIME(1 TIME)))
	)
	(_use(ieee(std_logic_1164))(std(standard))(.(sha256_pkg))(ieee(NUMERIC_STD)))
	(_static
		
		
		(1752392008 1668180256 1701999215 1881175139 544372079 1981833580 1969581153 1650532466 99)
		
		(1752392008 1818321696 3916199267 1970237472 1634476146 1818326560 544372069 6513249)
		(1752392008 1953459744 1852401184 1701344105 100)
	)
	(_model . behavior 3 -1)
)
I 000052 55 12940         1705873158735 sha256_ARCH
(_unit VHDL(sha256 0 6(sha256_arch 0 22))
	(_version vef)
	(_time 1705873158736 2024.01.21 16:39:18)
	(_source(\../src/sha256.vhd\))
	(_parameters tan)
	(_code 782a2979782f2d6b7a7a7d2e6e232a7e707e797b7a7b7d)
	(_ent
		(_time 1705867572636)
	)
	(_generate MESSAGE_BLOCK_INTERMEDIATE 0 246(_for 4 )
		(_object
			(_cnst(_int i 4 0 247(_arch)))
			(_prcs
				(line__250(_arch 3 0 250(_assignment(_trgt(24(_object 3)))(_sens(4(_range 8)))(_read(4(_range 9))))))
			)
		)
	)
	(_generate MESSAGE_SCHEDULE_INTERMEDIATE_00 0 253(_for 5 )
		(_object
			(_cnst(_int i 5 0 254(_arch)))
			(_prcs
				(line__256(_arch 4 0 256(_assignment(_trgt(25(_object 4)))(_sens(21(_object 4)))(_read(21(_object 4))))))
			)
		)
	)
	(_generate MESSAGE_SCHEDULE_INTERMEDIATE_01 0 259(_for 6 )
		(_object
			(_cnst(_int i 6 0 260(_arch)))
			(_prcs
				(line__262(_arch 5 0 262(_assignment(_trgt(25(_object 5)))(_sens(25(_index 10))(25(_index 11))(25(_index 12))(25(_index 13)))(_read(25(_index 14))(25(_index 15))(25(_index 16))(25(_index 17))))))
			)
		)
	)
	(_object
		(_gen(_int RESET_VALUE -1 0 8 \'0'\ (_ent gms((i 2)))))
		(_port(_int clk -1 0 11(_ent(_in)(_event))))
		(_port(_int rst -1 0 12(_ent(_in)(_event))))
		(_port(_int data_ready -1 0 13(_ent(_in))))
		(_port(_int n_blocks -2 0 14(_ent(_in))))
		(_type(_int ~STD_LOGIC_VECTOR{0~to~{16*WORD_SIZE}-1}~12 0 15(_array -1((_to i 0 i 511)))))
		(_port(_int msg_block_in 0 0 15(_ent(_in))))
		(_port(_int finished -1 0 17(_ent(_out))))
		(_type(_int ~STD_LOGIC_VECTOR{{WORD_SIZE*8}-1~downto~0}~12 0 18(_array -1((_dto i 255 i 0)))))
		(_port(_int data_out 1 0 18(_ent(_out))))
		(_sig(_int HASH_ROUND_COUNTER -2 0 23(_arch(_uni((i 0))))))
		(_sig(_int MSG_BLOCK_COUNTER -2 0 24(_arch(_uni((i 0))))))
		(_sig(_int HASH_02_COUNTER -2 0 25(_arch(_uni((i 0))))))
		(_cnst(_int HASH_02_COUNT_LIMIT -2 0 26(_arch((i 64)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~13 0 29(_array -1((_dto i 31 i 0)))))
		(_sig(_int T1 2 0 29(_arch(_uni((_others(i 2)))))))
		(_sig(_int T2 2 0 30(_arch(_uni((_others(i 2)))))))
		(_sig(_int a 2 0 33(_arch(_uni((_others(i 2)))))))
		(_sig(_int b 2 0 34(_arch(_uni((_others(i 2)))))))
		(_sig(_int c 2 0 35(_arch(_uni((_others(i 2)))))))
		(_sig(_int d 2 0 36(_arch(_uni((_others(i 2)))))))
		(_sig(_int e 2 0 37(_arch(_uni((_others(i 2)))))))
		(_sig(_int f 2 0 38(_arch(_uni((_others(i 2)))))))
		(_sig(_int g 2 0 39(_arch(_uni((_others(i 2)))))))
		(_sig(_int h 2 0 40(_arch(_uni((_others(i 2)))))))
		(_cnst(_int K -3 0 42(_arch(((_string \"01000010100010100010111110011000"\))((_string \"01110001001101110100010010010001"\))((_string \"10110101110000001111101111001111"\))((_string \"11101001101101011101101110100101"\))((_string \"00111001010101101100001001011011"\))((_string \"01011001111100010001000111110001"\))((_string \"10010010001111111000001010100100"\))((_string \"10101011000111000101111011010101"\))((_string \"11011000000001111010101010011000"\))((_string \"00010010100000110101101100000001"\))((_string \"00100100001100011000010110111110"\))((_string \"01010101000011000111110111000011"\))((_string \"01110010101111100101110101110100"\))((_string \"10000000110111101011000111111110"\))((_string \"10011011110111000000011010100111"\))((_string \"11000001100110111111000101110100"\))((_string \"11100100100110110110100111000001"\))((_string \"11101111101111100100011110000110"\))((_string \"00001111110000011001110111000110"\))((_string \"00100100000011001010000111001100"\))((_string \"00101101111010010010110001101111"\))((_string \"01001010011101001000010010101010"\))((_string \"01011100101100001010100111011100"\))((_string \"01110110111110011000100011011010"\))((_string \"10011000001111100101000101010010"\))((_string \"10101000001100011100011001101101"\))((_string \"10110000000000110010011111001000"\))((_string \"10111111010110010111111111000111"\))((_string \"11000110111000000000101111110011"\))((_string \"11010101101001111001000101000111"\))((_string \"00000110110010100110001101010001"\))((_string \"00010100001010010010100101100111"\))((_string \"00100111101101110000101010000101"\))((_string \"00101110000110110010000100111000"\))((_string \"01001101001011000110110111111100"\))((_string \"01010011001110000000110100010011"\))((_string \"01100101000010100111001101010100"\))((_string \"01110110011010100000101010111011"\))((_string \"10000001110000101100100100101110"\))((_string \"10010010011100100010110010000101"\))((_string \"10100010101111111110100010100001"\))((_string \"10101000000110100110011001001011"\))((_string \"11000010010010111000101101110000"\))((_string \"11000111011011000101000110100011"\))((_string \"11010001100100101110100000011001"\))((_string \"11010110100110010000011000100100"\))((_string \"11110100000011100011010110000101"\))((_string \"00010000011010101010000001110000"\))((_string \"00011001101001001100000100010110"\))((_string \"00011110001101110110110000001000"\))((_string \"00100111010010000111011101001100"\))((_string \"00110100101100001011110010110101"\))((_string \"00111001000111000000110010110011"\))((_string \"01001110110110001010101001001010"\))((_string \"01011011100111001100101001001111"\))((_string \"01101000001011100110111111110011"\))((_string \"01110100100011111000001011101110"\))((_string \"01111000101001010110001101101111"\))((_string \"10000100110010000111100000010100"\))((_string \"10001100110001110000001000001000"\))((_string \"10010000101111101111111111111010"\))((_string \"10100100010100000110110011101011"\))((_string \"10111110111110011010001111110111"\))((_string \"11000110011100010111100011110010"\))))))
		(_sig(_int W -3 0 62(_arch(_uni(((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\)))))))
		(_sig(_int M -4 0 83(_arch(_uni))))
		(_sig(_int HV -5 0 85(_arch(_uni))))
		(_sig(_int HV_INITIAL_VALUES -5 0 86(_arch(_uni(((_string \"01101010000010011110011001100111"\))((_string \"10111011011001111010111010000101"\))((_string \"00111100011011101111001101110010"\))((_string \"10100101010011111111010100111010"\))((_string \"01010001000011100101001001111111"\))((_string \"10011011000001010110100010001100"\))((_string \"00011111100000111101100110101011"\))((_string \"01011011111000001100110100011001"\)))))))
		(_sig(_int M_INT -4 0 91(_arch(_uni))))
		(_sig(_int W_INT -3 0 94(_arch(_uni))))
		(_type(_int SHA_256_HASH_CORE_STATE 0 97(_enum1 RESET IDLE READ_MSG_BLOCK PREP_MSG_SCHEDULE_00 PREP_MSG_SCHEDULE_01 PREP_MSG_SCHEDULE_02 PREP_MSG_SCHEDULE_03 HASH_01 HASH_02 HASH_02b HASH_02c HASH_03 DONE (_to i 0 i 12))))
		(_sig(_int CURRENT_STATE 3 0 98(_arch(_uni)(_event))))
		(_sig(_int NEXT_STATE 3 0 98(_arch(_uni))))
		(_sig(_int PREVIOUS_STATE 3 0 99(_arch(_uni((i 2))))))
		(_type(_int ~INTEGER~range~0~to~15~13 0 247(_scalar (_to i 0 i 15))))
		(_type(_int ~INTEGER~range~0~to~15~135 0 254(_scalar (_to i 0 i 15))))
		(_type(_int ~INTEGER~range~16~to~63~13 0 260(_scalar (_to i 16 i 63))))
		(_prcs
			(line__104(_arch 0 0 104(_prcs(_simple)(_trgt(26))(_sens(0)(1))(_mon)(_read(27)))))
			(line__116(_arch 1 0 116(_prcs(_simple)(_trgt(27))(_sens(1)(2)(3)(7)(9)(26)))))
			(line__166(_arch 2 0 166(_prcs(_trgt(7)(8)(9)(10)(11)(12)(13)(14)(15)(16)(17)(18)(19)(20(t_48_63))(20(t_32_47))(20(t_16_31))(20(t_0_15))(20)(21)(22(7))(22(6))(22(5))(22(4))(22(3))(22(2))(22(1))(22(0))(22))(_sens(0)(1)(26)(3)(7)(9)(10)(11)(12)(13)(14)(15)(16)(17)(18)(19)(20)(21)(22)(23)(24)(25(t_48_63))(25(t_32_47))(25(t_16_31))(25(t_0_15)))(_dssslsensitivity 3))))
			(line__266(_arch 6 0 266(_assignment(_trgt(5))(_sens(26)))))
			(line__269(_arch 7 0 269(_assignment(_alias((data_out)(HV(0))(HV(1))(HV(2))(HV(3))(HV(4))(HV(5))(HV(6))(HV(7))))(_trgt(6))(_sens(22(7))(22(6))(22(5))(22(4))(22(3))(22(2))(22(1))(22(0))))))
		)
		(_subprogram
			(_ext SIGMA_UCASE_1(2 6))
			(_ext CH(2 3))
			(_ext SIGMA_UCASE_0(2 5))
			(_ext MAJ(2 4))
			(_ext SIGMA_LCASE_1(2 8))
			(_ext SIGMA_LCASE_0(2 7))
		)
		(_type(_ext ieee.std_logic_1164.STD_LOGIC(0 STD_LOGIC)))
		(_type(_ext std.standard.NATURAL(1 NATURAL)))
		(_var(_ext sha256.sha256_pkg.WORD_SIZE(2 WORD_SIZE)))
		(_type(_ext sha256.sha256_pkg.K_DATA(2 K_DATA)))
		(_type(_ext sha256.sha256_pkg.M_DATA(2 M_DATA)))
		(_type(_ext sha256.sha256_pkg.H_DATA(2 H_DATA)))
		(_type(_ext ieee.NUMERIC_STD.UNSIGNED(3 UNSIGNED)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1526(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1526)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1512(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1512)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1514(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1514)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1516(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1516)))
		(_type(_ext ieee.std_logic_1164.STD_LOGIC_VECTOR(0 STD_LOGIC_VECTOR)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1524(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1524)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1518(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1518)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1520(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1520)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1522(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1522)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1530(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1530)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1528(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1528)))
		(_type(_ext std.standard.INTEGER(1 INTEGER)))
	)
	(_use(ieee(std_logic_1164))(std(standard))(.(sha256_pkg))(ieee(NUMERIC_STD)))
	(_static
		(1952543827 2004033637 1751348329 1948279909 1701978223 7628147)
	)
	(_model . sha256_ARCH 18 -1)
)
I 000052 55 13012         1705873207355 sha256_ARCH
(_unit VHDL(sha256 0 6(sha256_arch 0 22))
	(_version vef)
	(_time 1705873207356 2024.01.21 16:40:07)
	(_source(\../src/sha256.vhd\))
	(_parameters tan)
	(_code 693f6369683e3c7a6b6b6c3c7f323b6f616f686a6b6a6c)
	(_ent
		(_time 1705867572636)
	)
	(_generate MESSAGE_BLOCK_INTERMEDIATE 0 247(_for 4 )
		(_object
			(_cnst(_int i 4 0 248(_arch)))
			(_prcs
				(line__251(_arch 3 0 251(_assignment(_trgt(24(_object 3)))(_sens(4(_range 8)))(_read(4(_range 9))))))
			)
		)
	)
	(_generate MESSAGE_SCHEDULE_INTERMEDIATE_00 0 254(_for 5 )
		(_object
			(_cnst(_int i 5 0 255(_arch)))
			(_prcs
				(line__257(_arch 4 0 257(_assignment(_trgt(25(_object 4)))(_sens(21(_object 4)))(_read(21(_object 4))))))
			)
		)
	)
	(_generate MESSAGE_SCHEDULE_INTERMEDIATE_01 0 260(_for 6 )
		(_object
			(_cnst(_int i 6 0 261(_arch)))
			(_prcs
				(line__263(_arch 5 0 263(_assignment(_trgt(25(_object 5)))(_sens(25(_index 10))(25(_index 11))(25(_index 12))(25(_index 13)))(_read(25(_index 14))(25(_index 15))(25(_index 16))(25(_index 17))))))
			)
		)
	)
	(_object
		(_gen(_int RESET_VALUE -1 0 8 \'0'\ (_ent gms((i 2)))))
		(_port(_int clk -1 0 11(_ent(_in)(_event))))
		(_port(_int rst -1 0 12(_ent(_in)(_event))))
		(_port(_int data_ready -1 0 13(_ent(_in))))
		(_port(_int n_blocks -2 0 14(_ent(_in))))
		(_type(_int ~STD_LOGIC_VECTOR{0~to~{16*WORD_SIZE}-1}~12 0 15(_array -1((_to i 0 i 511)))))
		(_port(_int msg_block_in 0 0 15(_ent(_in))))
		(_port(_int finished -1 0 17(_ent(_out))))
		(_type(_int ~STD_LOGIC_VECTOR{{WORD_SIZE*8}-1~downto~0}~12 0 18(_array -1((_dto i 255 i 0)))))
		(_port(_int data_out 1 0 18(_ent(_out))))
		(_sig(_int HASH_ROUND_COUNTER -2 0 23(_arch(_uni((i 0))))))
		(_sig(_int MSG_BLOCK_COUNTER -2 0 24(_arch(_uni((i 0))))))
		(_sig(_int HASH_02_COUNTER -2 0 25(_arch(_uni((i 0))))))
		(_cnst(_int HASH_02_COUNT_LIMIT -2 0 26(_arch((i 64)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~13 0 29(_array -1((_dto i 31 i 0)))))
		(_sig(_int T1 2 0 29(_arch(_uni((_others(i 2)))))))
		(_sig(_int T2 2 0 30(_arch(_uni((_others(i 2)))))))
		(_sig(_int a 2 0 33(_arch(_uni((_others(i 2)))))))
		(_sig(_int b 2 0 34(_arch(_uni((_others(i 2)))))))
		(_sig(_int c 2 0 35(_arch(_uni((_others(i 2)))))))
		(_sig(_int d 2 0 36(_arch(_uni((_others(i 2)))))))
		(_sig(_int e 2 0 37(_arch(_uni((_others(i 2)))))))
		(_sig(_int f 2 0 38(_arch(_uni((_others(i 2)))))))
		(_sig(_int g 2 0 39(_arch(_uni((_others(i 2)))))))
		(_sig(_int h 2 0 40(_arch(_uni((_others(i 2)))))))
		(_cnst(_int K -3 0 42(_arch(((_string \"01000010100010100010111110011000"\))((_string \"01110001001101110100010010010001"\))((_string \"10110101110000001111101111001111"\))((_string \"11101001101101011101101110100101"\))((_string \"00111001010101101100001001011011"\))((_string \"01011001111100010001000111110001"\))((_string \"10010010001111111000001010100100"\))((_string \"10101011000111000101111011010101"\))((_string \"11011000000001111010101010011000"\))((_string \"00010010100000110101101100000001"\))((_string \"00100100001100011000010110111110"\))((_string \"01010101000011000111110111000011"\))((_string \"01110010101111100101110101110100"\))((_string \"10000000110111101011000111111110"\))((_string \"10011011110111000000011010100111"\))((_string \"11000001100110111111000101110100"\))((_string \"11100100100110110110100111000001"\))((_string \"11101111101111100100011110000110"\))((_string \"00001111110000011001110111000110"\))((_string \"00100100000011001010000111001100"\))((_string \"00101101111010010010110001101111"\))((_string \"01001010011101001000010010101010"\))((_string \"01011100101100001010100111011100"\))((_string \"01110110111110011000100011011010"\))((_string \"10011000001111100101000101010010"\))((_string \"10101000001100011100011001101101"\))((_string \"10110000000000110010011111001000"\))((_string \"10111111010110010111111111000111"\))((_string \"11000110111000000000101111110011"\))((_string \"11010101101001111001000101000111"\))((_string \"00000110110010100110001101010001"\))((_string \"00010100001010010010100101100111"\))((_string \"00100111101101110000101010000101"\))((_string \"00101110000110110010000100111000"\))((_string \"01001101001011000110110111111100"\))((_string \"01010011001110000000110100010011"\))((_string \"01100101000010100111001101010100"\))((_string \"01110110011010100000101010111011"\))((_string \"10000001110000101100100100101110"\))((_string \"10010010011100100010110010000101"\))((_string \"10100010101111111110100010100001"\))((_string \"10101000000110100110011001001011"\))((_string \"11000010010010111000101101110000"\))((_string \"11000111011011000101000110100011"\))((_string \"11010001100100101110100000011001"\))((_string \"11010110100110010000011000100100"\))((_string \"11110100000011100011010110000101"\))((_string \"00010000011010101010000001110000"\))((_string \"00011001101001001100000100010110"\))((_string \"00011110001101110110110000001000"\))((_string \"00100111010010000111011101001100"\))((_string \"00110100101100001011110010110101"\))((_string \"00111001000111000000110010110011"\))((_string \"01001110110110001010101001001010"\))((_string \"01011011100111001100101001001111"\))((_string \"01101000001011100110111111110011"\))((_string \"01110100100011111000001011101110"\))((_string \"01111000101001010110001101101111"\))((_string \"10000100110010000111100000010100"\))((_string \"10001100110001110000001000001000"\))((_string \"10010000101111101111111111111010"\))((_string \"10100100010100000110110011101011"\))((_string \"10111110111110011010001111110111"\))((_string \"11000110011100010111100011110010"\))))))
		(_sig(_int W -3 0 62(_arch(_uni(((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\)))))))
		(_sig(_int M -4 0 83(_arch(_uni))))
		(_sig(_int HV -5 0 85(_arch(_uni))))
		(_sig(_int HV_INITIAL_VALUES -5 0 86(_arch(_uni(((_string \"01101010000010011110011001100111"\))((_string \"10111011011001111010111010000101"\))((_string \"00111100011011101111001101110010"\))((_string \"10100101010011111111010100111010"\))((_string \"01010001000011100101001001111111"\))((_string \"10011011000001010110100010001100"\))((_string \"00011111100000111101100110101011"\))((_string \"01011011111000001100110100011001"\)))))))
		(_sig(_int M_INT -4 0 91(_arch(_uni))))
		(_sig(_int W_INT -3 0 94(_arch(_uni))))
		(_type(_int SHA_256_HASH_CORE_STATE 0 97(_enum1 RESET IDLE READ_MSG_BLOCK PREP_MSG_SCHEDULE_00 PREP_MSG_SCHEDULE_01 PREP_MSG_SCHEDULE_02 PREP_MSG_SCHEDULE_03 HASH_01 HASH_02 HASH_02b HASH_02c HASH_03 DONE (_to i 0 i 12))))
		(_sig(_int CURRENT_STATE 3 0 98(_arch(_uni)(_event))))
		(_sig(_int NEXT_STATE 3 0 98(_arch(_uni))))
		(_sig(_int PREVIOUS_STATE 3 0 99(_arch(_uni((i 2))))))
		(_type(_int ~INTEGER~range~0~to~15~13 0 248(_scalar (_to i 0 i 15))))
		(_type(_int ~INTEGER~range~0~to~15~135 0 255(_scalar (_to i 0 i 15))))
		(_type(_int ~INTEGER~range~16~to~63~13 0 261(_scalar (_to i 16 i 63))))
		(_prcs
			(line__104(_arch 0 0 104(_prcs(_simple)(_trgt(26))(_sens(0)(1))(_mon)(_read(27)))))
			(line__116(_arch 1 0 116(_prcs(_simple)(_trgt(27))(_sens(7)(9)(26)(1)(2)(3))(_mon))))
			(line__167(_arch 2 0 167(_prcs(_trgt(7)(8)(9)(10)(11)(12)(13)(14)(15)(16)(17)(18)(19)(20(t_48_63))(20(t_32_47))(20(t_16_31))(20(t_0_15))(20)(21)(22(7))(22(6))(22(5))(22(4))(22(3))(22(2))(22(1))(22(0))(22))(_sens(26)(0)(1)(7)(9)(10)(11)(12)(13)(14)(15)(16)(17)(18)(19)(20)(21)(22)(23)(24)(25(t_48_63))(25(t_32_47))(25(t_16_31))(25(t_0_15))(3))(_dssslsensitivity 3))))
			(line__267(_arch 6 0 267(_assignment(_trgt(5))(_sens(26)))))
			(line__270(_arch 7 0 270(_assignment(_alias((data_out)(HV(0))(HV(1))(HV(2))(HV(3))(HV(4))(HV(5))(HV(6))(HV(7))))(_trgt(6))(_sens(22(7))(22(6))(22(5))(22(4))(22(3))(22(2))(22(1))(22(0))))))
		)
		(_subprogram
			(_ext SIGMA_UCASE_1(2 6))
			(_ext CH(2 3))
			(_ext SIGMA_UCASE_0(2 5))
			(_ext MAJ(2 4))
			(_ext SIGMA_LCASE_1(2 8))
			(_ext SIGMA_LCASE_0(2 7))
		)
		(_type(_ext ieee.std_logic_1164.STD_LOGIC(0 STD_LOGIC)))
		(_type(_ext std.standard.NATURAL(1 NATURAL)))
		(_var(_ext sha256.sha256_pkg.WORD_SIZE(2 WORD_SIZE)))
		(_type(_ext sha256.sha256_pkg.K_DATA(2 K_DATA)))
		(_type(_ext sha256.sha256_pkg.M_DATA(2 M_DATA)))
		(_type(_ext sha256.sha256_pkg.H_DATA(2 H_DATA)))
		(_type(_ext ieee.NUMERIC_STD.UNSIGNED(3 UNSIGNED)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1526(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1526)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1512(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1512)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1514(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1514)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1516(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1516)))
		(_type(_ext ieee.std_logic_1164.STD_LOGIC_VECTOR(0 STD_LOGIC_VECTOR)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1524(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1524)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1518(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1518)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1520(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1520)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1522(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1522)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1530(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1530)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1528(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1528)))
		(_type(_ext std.standard.INTEGER(1 INTEGER)))
	)
	(_use(ieee(std_logic_1164))(std(standard))(.(sha256_pkg))(ieee(NUMERIC_STD)))
	(_static
		(1952543827 2004033637 1751348329 1948279909 1701978223 7628147)
		(1952543827 2004033637 1751348329 1948279909 1868832879 25966)
	)
	(_model . sha256_ARCH 18 -1)
)
I 000052 55 13019         1705873347216 sha256_ARCH
(_unit VHDL(sha256 0 6(sha256_arch 0 22))
	(_version vef)
	(_time 1705873347217 2024.01.21 16:42:27)
	(_source(\../src/sha256.vhd\))
	(_parameters tan)
	(_code bce8ede8e7ebe9afbebeb9e9aae7eebab4babdbfbebfb9)
	(_ent
		(_time 1705867572636)
	)
	(_generate MESSAGE_BLOCK_INTERMEDIATE 0 247(_for 4 )
		(_object
			(_cnst(_int i 4 0 248(_arch)))
			(_prcs
				(line__251(_arch 3 0 251(_assignment(_trgt(24(_object 3)))(_sens(4(_range 8)))(_read(4(_range 9))))))
			)
		)
	)
	(_generate MESSAGE_SCHEDULE_INTERMEDIATE_00 0 254(_for 5 )
		(_object
			(_cnst(_int i 5 0 255(_arch)))
			(_prcs
				(line__257(_arch 4 0 257(_assignment(_trgt(25(_object 4)))(_sens(21(_object 4)))(_read(21(_object 4))))))
			)
		)
	)
	(_generate MESSAGE_SCHEDULE_INTERMEDIATE_01 0 260(_for 6 )
		(_object
			(_cnst(_int i 6 0 261(_arch)))
			(_prcs
				(line__263(_arch 5 0 263(_assignment(_trgt(25(_object 5)))(_sens(25(_index 10))(25(_index 11))(25(_index 12))(25(_index 13)))(_read(25(_index 14))(25(_index 15))(25(_index 16))(25(_index 17))))))
			)
		)
	)
	(_object
		(_gen(_int RESET_VALUE -1 0 8 \'0'\ (_ent gms((i 2)))))
		(_port(_int clk -1 0 11(_ent(_in)(_event))))
		(_port(_int rst -1 0 12(_ent(_in)(_event))))
		(_port(_int data_ready -1 0 13(_ent(_in))))
		(_port(_int n_blocks -2 0 14(_ent(_in))))
		(_type(_int ~STD_LOGIC_VECTOR{0~to~{16*WORD_SIZE}-1}~12 0 15(_array -1((_to i 0 i 511)))))
		(_port(_int msg_block_in 0 0 15(_ent(_in))))
		(_port(_int finished -1 0 17(_ent(_out))))
		(_type(_int ~STD_LOGIC_VECTOR{{WORD_SIZE*8}-1~downto~0}~12 0 18(_array -1((_dto i 255 i 0)))))
		(_port(_int data_out 1 0 18(_ent(_out))))
		(_sig(_int HASH_ROUND_COUNTER -2 0 23(_arch(_uni((i 0))))))
		(_sig(_int MSG_BLOCK_COUNTER -2 0 24(_arch(_uni((i 0))))))
		(_sig(_int HASH_02_COUNTER -2 0 25(_arch(_uni((i 0))))))
		(_cnst(_int HASH_02_COUNT_LIMIT -2 0 26(_arch((i 64)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~13 0 29(_array -1((_dto i 31 i 0)))))
		(_sig(_int T1 2 0 29(_arch(_uni((_others(i 2)))))))
		(_sig(_int T2 2 0 30(_arch(_uni((_others(i 2)))))))
		(_sig(_int a 2 0 33(_arch(_uni((_others(i 2)))))))
		(_sig(_int b 2 0 34(_arch(_uni((_others(i 2)))))))
		(_sig(_int c 2 0 35(_arch(_uni((_others(i 2)))))))
		(_sig(_int d 2 0 36(_arch(_uni((_others(i 2)))))))
		(_sig(_int e 2 0 37(_arch(_uni((_others(i 2)))))))
		(_sig(_int f 2 0 38(_arch(_uni((_others(i 2)))))))
		(_sig(_int g 2 0 39(_arch(_uni((_others(i 2)))))))
		(_sig(_int h 2 0 40(_arch(_uni((_others(i 2)))))))
		(_cnst(_int K -3 0 42(_arch(((_string \"01000010100010100010111110011000"\))((_string \"01110001001101110100010010010001"\))((_string \"10110101110000001111101111001111"\))((_string \"11101001101101011101101110100101"\))((_string \"00111001010101101100001001011011"\))((_string \"01011001111100010001000111110001"\))((_string \"10010010001111111000001010100100"\))((_string \"10101011000111000101111011010101"\))((_string \"11011000000001111010101010011000"\))((_string \"00010010100000110101101100000001"\))((_string \"00100100001100011000010110111110"\))((_string \"01010101000011000111110111000011"\))((_string \"01110010101111100101110101110100"\))((_string \"10000000110111101011000111111110"\))((_string \"10011011110111000000011010100111"\))((_string \"11000001100110111111000101110100"\))((_string \"11100100100110110110100111000001"\))((_string \"11101111101111100100011110000110"\))((_string \"00001111110000011001110111000110"\))((_string \"00100100000011001010000111001100"\))((_string \"00101101111010010010110001101111"\))((_string \"01001010011101001000010010101010"\))((_string \"01011100101100001010100111011100"\))((_string \"01110110111110011000100011011010"\))((_string \"10011000001111100101000101010010"\))((_string \"10101000001100011100011001101101"\))((_string \"10110000000000110010011111001000"\))((_string \"10111111010110010111111111000111"\))((_string \"11000110111000000000101111110011"\))((_string \"11010101101001111001000101000111"\))((_string \"00000110110010100110001101010001"\))((_string \"00010100001010010010100101100111"\))((_string \"00100111101101110000101010000101"\))((_string \"00101110000110110010000100111000"\))((_string \"01001101001011000110110111111100"\))((_string \"01010011001110000000110100010011"\))((_string \"01100101000010100111001101010100"\))((_string \"01110110011010100000101010111011"\))((_string \"10000001110000101100100100101110"\))((_string \"10010010011100100010110010000101"\))((_string \"10100010101111111110100010100001"\))((_string \"10101000000110100110011001001011"\))((_string \"11000010010010111000101101110000"\))((_string \"11000111011011000101000110100011"\))((_string \"11010001100100101110100000011001"\))((_string \"11010110100110010000011000100100"\))((_string \"11110100000011100011010110000101"\))((_string \"00010000011010101010000001110000"\))((_string \"00011001101001001100000100010110"\))((_string \"00011110001101110110110000001000"\))((_string \"00100111010010000111011101001100"\))((_string \"00110100101100001011110010110101"\))((_string \"00111001000111000000110010110011"\))((_string \"01001110110110001010101001001010"\))((_string \"01011011100111001100101001001111"\))((_string \"01101000001011100110111111110011"\))((_string \"01110100100011111000001011101110"\))((_string \"01111000101001010110001101101111"\))((_string \"10000100110010000111100000010100"\))((_string \"10001100110001110000001000001000"\))((_string \"10010000101111101111111111111010"\))((_string \"10100100010100000110110011101011"\))((_string \"10111110111110011010001111110111"\))((_string \"11000110011100010111100011110010"\))))))
		(_sig(_int W -3 0 62(_arch(_uni(((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\)))))))
		(_sig(_int M -4 0 83(_arch(_uni))))
		(_sig(_int HV -5 0 85(_arch(_uni))))
		(_sig(_int HV_INITIAL_VALUES -5 0 86(_arch(_uni(((_string \"01101010000010011110011001100111"\))((_string \"10111011011001111010111010000101"\))((_string \"00111100011011101111001101110010"\))((_string \"10100101010011111111010100111010"\))((_string \"01010001000011100101001001111111"\))((_string \"10011011000001010110100010001100"\))((_string \"00011111100000111101100110101011"\))((_string \"01011011111000001100110100011001"\)))))))
		(_sig(_int M_INT -4 0 91(_arch(_uni))))
		(_sig(_int W_INT -3 0 94(_arch(_uni))))
		(_type(_int SHA_256_HASH_CORE_STATE 0 97(_enum1 RESET IDLE READ_MSG_BLOCK PREP_MSG_SCHEDULE_00 PREP_MSG_SCHEDULE_01 PREP_MSG_SCHEDULE_02 PREP_MSG_SCHEDULE_03 HASH_01 HASH_02 HASH_02b HASH_02c HASH_03 DONE (_to i 0 i 12))))
		(_sig(_int CURRENT_STATE 3 0 98(_arch(_uni)(_event))))
		(_sig(_int NEXT_STATE 3 0 98(_arch(_uni))))
		(_sig(_int PREVIOUS_STATE 3 0 99(_arch(_uni((i 2))))))
		(_type(_int ~INTEGER~range~0~to~15~13 0 248(_scalar (_to i 0 i 15))))
		(_type(_int ~INTEGER~range~0~to~15~135 0 255(_scalar (_to i 0 i 15))))
		(_type(_int ~INTEGER~range~16~to~63~13 0 261(_scalar (_to i 16 i 63))))
		(_prcs
			(line__104(_arch 0 0 104(_prcs(_simple)(_trgt(26))(_sens(0)(1))(_mon)(_read(27)))))
			(line__116(_arch 1 0 116(_prcs(_simple)(_trgt(27))(_sens(7)(9)(26)(1)(2)(3))(_mon))))
			(line__167(_arch 2 0 167(_prcs(_trgt(7)(8)(9)(10)(11)(12)(13)(14)(15)(16)(17)(18)(19)(20(t_48_63))(20(t_32_47))(20(t_16_31))(20(t_0_15))(20)(21)(22(7))(22(6))(22(5))(22(4))(22(3))(22(2))(22(1))(22(0))(22))(_sens(26)(0)(1)(7)(9)(10)(11)(12)(13)(14)(15)(16)(17)(18)(19)(20)(21)(22)(23)(24)(25(t_48_63))(25(t_32_47))(25(t_16_31))(25(t_0_15))(3))(_dssslsensitivity 3))))
			(line__267(_arch 6 0 267(_assignment(_trgt(5))(_sens(26)))))
			(line__270(_arch 7 0 270(_assignment(_alias((data_out)(HV(0))(HV(1))(HV(2))(HV(3))(HV(4))(HV(5))(HV(6))(HV(7))))(_trgt(6))(_sens(22(7))(22(6))(22(5))(22(4))(22(3))(22(2))(22(1))(22(0))))))
		)
		(_subprogram
			(_ext SIGMA_UCASE_1(2 6))
			(_ext CH(2 3))
			(_ext SIGMA_UCASE_0(2 5))
			(_ext MAJ(2 4))
			(_ext SIGMA_LCASE_1(2 8))
			(_ext SIGMA_LCASE_0(2 7))
		)
		(_type(_ext ieee.std_logic_1164.STD_LOGIC(0 STD_LOGIC)))
		(_type(_ext std.standard.NATURAL(1 NATURAL)))
		(_var(_ext sha256.sha256_pkg.WORD_SIZE(2 WORD_SIZE)))
		(_type(_ext sha256.sha256_pkg.K_DATA(2 K_DATA)))
		(_type(_ext sha256.sha256_pkg.M_DATA(2 M_DATA)))
		(_type(_ext sha256.sha256_pkg.H_DATA(2 H_DATA)))
		(_type(_ext ieee.NUMERIC_STD.UNSIGNED(3 UNSIGNED)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1526(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1526)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1512(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1512)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1514(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1514)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1516(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1516)))
		(_type(_ext ieee.std_logic_1164.STD_LOGIC_VECTOR(0 STD_LOGIC_VECTOR)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1524(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1524)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1518(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1518)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1520(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1520)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1522(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1522)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1530(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1530)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1528(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1528)))
		(_type(_ext std.standard.INTEGER(1 INTEGER)))
	)
	(_use(ieee(std_logic_1164))(std(standard))(.(sha256_pkg))(ieee(NUMERIC_STD)))
	(_static
		(1952543827 2004033637 1751348329 1948279909 1701978223 7628147)
		(1952543827 2004033637 1751348329 1948279909 1634213999 807430259 51)
	)
	(_model . sha256_ARCH 18 -1)
)
I 000052 55 13022         1705873443859 sha256_ARCH
(_unit VHDL(sha256 0 6(sha256_arch 0 22))
	(_version vef)
	(_time 1705873443860 2024.01.21 16:44:03)
	(_source(\../src/sha256.vhd\))
	(_parameters tan)
	(_code 3d3e3b38616a682e3f3f393e2b666f3b353b3c3e3f3e38)
	(_ent
		(_time 1705867572636)
	)
	(_generate MESSAGE_BLOCK_INTERMEDIATE 0 248(_for 4 )
		(_object
			(_cnst(_int i 4 0 249(_arch)))
			(_prcs
				(line__252(_arch 3 0 252(_assignment(_trgt(24(_object 3)))(_sens(4(_range 8)))(_read(4(_range 9))))))
			)
		)
	)
	(_generate MESSAGE_SCHEDULE_INTERMEDIATE_00 0 255(_for 5 )
		(_object
			(_cnst(_int i 5 0 256(_arch)))
			(_prcs
				(line__258(_arch 4 0 258(_assignment(_trgt(25(_object 4)))(_sens(21(_object 4)))(_read(21(_object 4))))))
			)
		)
	)
	(_generate MESSAGE_SCHEDULE_INTERMEDIATE_01 0 261(_for 6 )
		(_object
			(_cnst(_int i 6 0 262(_arch)))
			(_prcs
				(line__264(_arch 5 0 264(_assignment(_trgt(25(_object 5)))(_sens(25(_index 10))(25(_index 11))(25(_index 12))(25(_index 13)))(_read(25(_index 14))(25(_index 15))(25(_index 16))(25(_index 17))))))
			)
		)
	)
	(_object
		(_gen(_int RESET_VALUE -1 0 8 \'0'\ (_ent gms((i 2)))))
		(_port(_int clk -1 0 11(_ent(_in)(_event))))
		(_port(_int rst -1 0 12(_ent(_in)(_event))))
		(_port(_int data_ready -1 0 13(_ent(_in))))
		(_port(_int n_blocks -2 0 14(_ent(_in))))
		(_type(_int ~STD_LOGIC_VECTOR{0~to~{16*WORD_SIZE}-1}~12 0 15(_array -1((_to i 0 i 511)))))
		(_port(_int msg_block_in 0 0 15(_ent(_in))))
		(_port(_int finished -1 0 17(_ent(_out))))
		(_type(_int ~STD_LOGIC_VECTOR{{WORD_SIZE*8}-1~downto~0}~12 0 18(_array -1((_dto i 255 i 0)))))
		(_port(_int data_out 1 0 18(_ent(_out))))
		(_sig(_int HASH_ROUND_COUNTER -2 0 23(_arch(_uni((i 0))))))
		(_sig(_int MSG_BLOCK_COUNTER -2 0 24(_arch(_uni((i 0))))))
		(_sig(_int HASH_02_COUNTER -2 0 25(_arch(_uni((i 0))))))
		(_cnst(_int HASH_02_COUNT_LIMIT -2 0 26(_arch((i 64)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~13 0 29(_array -1((_dto i 31 i 0)))))
		(_sig(_int T1 2 0 29(_arch(_uni((_others(i 2)))))))
		(_sig(_int T2 2 0 30(_arch(_uni((_others(i 2)))))))
		(_sig(_int a 2 0 33(_arch(_uni((_others(i 2)))))))
		(_sig(_int b 2 0 34(_arch(_uni((_others(i 2)))))))
		(_sig(_int c 2 0 35(_arch(_uni((_others(i 2)))))))
		(_sig(_int d 2 0 36(_arch(_uni((_others(i 2)))))))
		(_sig(_int e 2 0 37(_arch(_uni((_others(i 2)))))))
		(_sig(_int f 2 0 38(_arch(_uni((_others(i 2)))))))
		(_sig(_int g 2 0 39(_arch(_uni((_others(i 2)))))))
		(_sig(_int h 2 0 40(_arch(_uni((_others(i 2)))))))
		(_cnst(_int K -3 0 42(_arch(((_string \"01000010100010100010111110011000"\))((_string \"01110001001101110100010010010001"\))((_string \"10110101110000001111101111001111"\))((_string \"11101001101101011101101110100101"\))((_string \"00111001010101101100001001011011"\))((_string \"01011001111100010001000111110001"\))((_string \"10010010001111111000001010100100"\))((_string \"10101011000111000101111011010101"\))((_string \"11011000000001111010101010011000"\))((_string \"00010010100000110101101100000001"\))((_string \"00100100001100011000010110111110"\))((_string \"01010101000011000111110111000011"\))((_string \"01110010101111100101110101110100"\))((_string \"10000000110111101011000111111110"\))((_string \"10011011110111000000011010100111"\))((_string \"11000001100110111111000101110100"\))((_string \"11100100100110110110100111000001"\))((_string \"11101111101111100100011110000110"\))((_string \"00001111110000011001110111000110"\))((_string \"00100100000011001010000111001100"\))((_string \"00101101111010010010110001101111"\))((_string \"01001010011101001000010010101010"\))((_string \"01011100101100001010100111011100"\))((_string \"01110110111110011000100011011010"\))((_string \"10011000001111100101000101010010"\))((_string \"10101000001100011100011001101101"\))((_string \"10110000000000110010011111001000"\))((_string \"10111111010110010111111111000111"\))((_string \"11000110111000000000101111110011"\))((_string \"11010101101001111001000101000111"\))((_string \"00000110110010100110001101010001"\))((_string \"00010100001010010010100101100111"\))((_string \"00100111101101110000101010000101"\))((_string \"00101110000110110010000100111000"\))((_string \"01001101001011000110110111111100"\))((_string \"01010011001110000000110100010011"\))((_string \"01100101000010100111001101010100"\))((_string \"01110110011010100000101010111011"\))((_string \"10000001110000101100100100101110"\))((_string \"10010010011100100010110010000101"\))((_string \"10100010101111111110100010100001"\))((_string \"10101000000110100110011001001011"\))((_string \"11000010010010111000101101110000"\))((_string \"11000111011011000101000110100011"\))((_string \"11010001100100101110100000011001"\))((_string \"11010110100110010000011000100100"\))((_string \"11110100000011100011010110000101"\))((_string \"00010000011010101010000001110000"\))((_string \"00011001101001001100000100010110"\))((_string \"00011110001101110110110000001000"\))((_string \"00100111010010000111011101001100"\))((_string \"00110100101100001011110010110101"\))((_string \"00111001000111000000110010110011"\))((_string \"01001110110110001010101001001010"\))((_string \"01011011100111001100101001001111"\))((_string \"01101000001011100110111111110011"\))((_string \"01110100100011111000001011101110"\))((_string \"01111000101001010110001101101111"\))((_string \"10000100110010000111100000010100"\))((_string \"10001100110001110000001000001000"\))((_string \"10010000101111101111111111111010"\))((_string \"10100100010100000110110011101011"\))((_string \"10111110111110011010001111110111"\))((_string \"11000110011100010111100011110010"\))))))
		(_sig(_int W -3 0 62(_arch(_uni(((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\)))))))
		(_sig(_int M -4 0 83(_arch(_uni))))
		(_sig(_int HV -5 0 85(_arch(_uni))))
		(_sig(_int HV_INITIAL_VALUES -5 0 86(_arch(_uni(((_string \"01101010000010011110011001100111"\))((_string \"10111011011001111010111010000101"\))((_string \"00111100011011101111001101110010"\))((_string \"10100101010011111111010100111010"\))((_string \"01010001000011100101001001111111"\))((_string \"10011011000001010110100010001100"\))((_string \"00011111100000111101100110101011"\))((_string \"01011011111000001100110100011001"\)))))))
		(_sig(_int M_INT -4 0 91(_arch(_uni))))
		(_sig(_int W_INT -3 0 94(_arch(_uni))))
		(_type(_int SHA_256_HASH_CORE_STATE 0 97(_enum1 RESET IDLE READ_MSG_BLOCK PREP_MSG_SCHEDULE_00 PREP_MSG_SCHEDULE_01 PREP_MSG_SCHEDULE_02 PREP_MSG_SCHEDULE_03 HASH_01 HASH_02 HASH_02b HASH_02c HASH_03 DONE (_to i 0 i 12))))
		(_sig(_int CURRENT_STATE 3 0 98(_arch(_uni)(_event))))
		(_sig(_int NEXT_STATE 3 0 98(_arch(_uni))))
		(_sig(_int PREVIOUS_STATE 3 0 99(_arch(_uni((i 2))))))
		(_type(_int ~INTEGER~range~0~to~15~13 0 249(_scalar (_to i 0 i 15))))
		(_type(_int ~INTEGER~range~0~to~15~135 0 256(_scalar (_to i 0 i 15))))
		(_type(_int ~INTEGER~range~16~to~63~13 0 262(_scalar (_to i 16 i 63))))
		(_prcs
			(line__104(_arch 0 0 104(_prcs(_simple)(_trgt(26))(_sens(0)(1))(_mon)(_read(27)))))
			(line__116(_arch 1 0 116(_prcs(_simple)(_trgt(27))(_sens(7)(9)(26)(1)(2)(3))(_mon))))
			(line__167(_arch 2 0 167(_prcs(_trgt(7)(8)(9)(10)(11)(12)(13)(14)(15)(16)(17)(18)(19)(20(t_48_63))(20(t_32_47))(20(t_16_31))(20(t_0_15))(20)(21)(22(7))(22(6))(22(5))(22(4))(22(3))(22(2))(22(1))(22(0))(22)(5))(_sens(26)(0)(1)(7)(9)(10)(11)(12)(13)(14)(15)(16)(17)(18)(19)(20)(21)(22)(23)(24)(25(t_48_63))(25(t_32_47))(25(t_16_31))(25(t_0_15))(3))(_dssslsensitivity 3))))
			(line__268(_arch 6 0 268(_assignment(_trgt(5))(_sens(26)))))
			(line__271(_arch 7 0 271(_assignment(_alias((data_out)(HV(0))(HV(1))(HV(2))(HV(3))(HV(4))(HV(5))(HV(6))(HV(7))))(_trgt(6))(_sens(22(7))(22(6))(22(5))(22(4))(22(3))(22(2))(22(1))(22(0))))))
		)
		(_subprogram
			(_ext SIGMA_UCASE_1(2 6))
			(_ext CH(2 3))
			(_ext SIGMA_UCASE_0(2 5))
			(_ext MAJ(2 4))
			(_ext SIGMA_LCASE_1(2 8))
			(_ext SIGMA_LCASE_0(2 7))
		)
		(_type(_ext ieee.std_logic_1164.STD_LOGIC(0 STD_LOGIC)))
		(_type(_ext std.standard.NATURAL(1 NATURAL)))
		(_var(_ext sha256.sha256_pkg.WORD_SIZE(2 WORD_SIZE)))
		(_type(_ext sha256.sha256_pkg.K_DATA(2 K_DATA)))
		(_type(_ext sha256.sha256_pkg.M_DATA(2 M_DATA)))
		(_type(_ext sha256.sha256_pkg.H_DATA(2 H_DATA)))
		(_type(_ext ieee.NUMERIC_STD.UNSIGNED(3 UNSIGNED)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1526(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1526)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1512(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1512)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1514(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1514)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1516(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1516)))
		(_type(_ext ieee.std_logic_1164.STD_LOGIC_VECTOR(0 STD_LOGIC_VECTOR)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1524(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1524)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1518(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1518)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1520(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1520)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1522(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1522)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1530(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1530)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1528(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1528)))
		(_type(_ext std.standard.INTEGER(1 INTEGER)))
	)
	(_use(ieee(std_logic_1164))(std(standard))(.(sha256_pkg))(ieee(NUMERIC_STD)))
	(_static
		(1952543827 2004033637 1751348329 1948279909 1701978223 7628147)
		(1952543827 2004033637 1751348329 1948279909 1634213999 807430259 51)
	)
	(_model . sha256_ARCH 18 -1)
)
I 000052 55 13022         1705873454441 sha256_ARCH
(_unit VHDL(sha256 0 6(sha256_arch 0 22))
	(_version vef)
	(_time 1705873454442 2024.01.21 16:44:14)
	(_source(\../src/sha256.vhd\))
	(_parameters tan)
	(_code 8f8ed981d1d8da9c8d8d8b8c99d4dd8987898e8c8d8c8a)
	(_ent
		(_time 1705867572636)
	)
	(_generate MESSAGE_BLOCK_INTERMEDIATE 0 248(_for 4 )
		(_object
			(_cnst(_int i 4 0 249(_arch)))
			(_prcs
				(line__252(_arch 3 0 252(_assignment(_trgt(24(_object 3)))(_sens(4(_range 8)))(_read(4(_range 9))))))
			)
		)
	)
	(_generate MESSAGE_SCHEDULE_INTERMEDIATE_00 0 255(_for 5 )
		(_object
			(_cnst(_int i 5 0 256(_arch)))
			(_prcs
				(line__258(_arch 4 0 258(_assignment(_trgt(25(_object 4)))(_sens(21(_object 4)))(_read(21(_object 4))))))
			)
		)
	)
	(_generate MESSAGE_SCHEDULE_INTERMEDIATE_01 0 261(_for 6 )
		(_object
			(_cnst(_int i 6 0 262(_arch)))
			(_prcs
				(line__264(_arch 5 0 264(_assignment(_trgt(25(_object 5)))(_sens(25(_index 10))(25(_index 11))(25(_index 12))(25(_index 13)))(_read(25(_index 14))(25(_index 15))(25(_index 16))(25(_index 17))))))
			)
		)
	)
	(_object
		(_gen(_int RESET_VALUE -1 0 8 \'0'\ (_ent gms((i 2)))))
		(_port(_int clk -1 0 11(_ent(_in)(_event))))
		(_port(_int rst -1 0 12(_ent(_in)(_event))))
		(_port(_int data_ready -1 0 13(_ent(_in))))
		(_port(_int n_blocks -2 0 14(_ent(_in))))
		(_type(_int ~STD_LOGIC_VECTOR{0~to~{16*WORD_SIZE}-1}~12 0 15(_array -1((_to i 0 i 511)))))
		(_port(_int msg_block_in 0 0 15(_ent(_in))))
		(_port(_int finished -1 0 17(_ent(_out))))
		(_type(_int ~STD_LOGIC_VECTOR{{WORD_SIZE*8}-1~downto~0}~12 0 18(_array -1((_dto i 255 i 0)))))
		(_port(_int data_out 1 0 18(_ent(_out))))
		(_sig(_int HASH_ROUND_COUNTER -2 0 23(_arch(_uni((i 0))))))
		(_sig(_int MSG_BLOCK_COUNTER -2 0 24(_arch(_uni((i 0))))))
		(_sig(_int HASH_02_COUNTER -2 0 25(_arch(_uni((i 0))))))
		(_cnst(_int HASH_02_COUNT_LIMIT -2 0 26(_arch((i 64)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~13 0 29(_array -1((_dto i 31 i 0)))))
		(_sig(_int T1 2 0 29(_arch(_uni((_others(i 2)))))))
		(_sig(_int T2 2 0 30(_arch(_uni((_others(i 2)))))))
		(_sig(_int a 2 0 33(_arch(_uni((_others(i 2)))))))
		(_sig(_int b 2 0 34(_arch(_uni((_others(i 2)))))))
		(_sig(_int c 2 0 35(_arch(_uni((_others(i 2)))))))
		(_sig(_int d 2 0 36(_arch(_uni((_others(i 2)))))))
		(_sig(_int e 2 0 37(_arch(_uni((_others(i 2)))))))
		(_sig(_int f 2 0 38(_arch(_uni((_others(i 2)))))))
		(_sig(_int g 2 0 39(_arch(_uni((_others(i 2)))))))
		(_sig(_int h 2 0 40(_arch(_uni((_others(i 2)))))))
		(_cnst(_int K -3 0 42(_arch(((_string \"01000010100010100010111110011000"\))((_string \"01110001001101110100010010010001"\))((_string \"10110101110000001111101111001111"\))((_string \"11101001101101011101101110100101"\))((_string \"00111001010101101100001001011011"\))((_string \"01011001111100010001000111110001"\))((_string \"10010010001111111000001010100100"\))((_string \"10101011000111000101111011010101"\))((_string \"11011000000001111010101010011000"\))((_string \"00010010100000110101101100000001"\))((_string \"00100100001100011000010110111110"\))((_string \"01010101000011000111110111000011"\))((_string \"01110010101111100101110101110100"\))((_string \"10000000110111101011000111111110"\))((_string \"10011011110111000000011010100111"\))((_string \"11000001100110111111000101110100"\))((_string \"11100100100110110110100111000001"\))((_string \"11101111101111100100011110000110"\))((_string \"00001111110000011001110111000110"\))((_string \"00100100000011001010000111001100"\))((_string \"00101101111010010010110001101111"\))((_string \"01001010011101001000010010101010"\))((_string \"01011100101100001010100111011100"\))((_string \"01110110111110011000100011011010"\))((_string \"10011000001111100101000101010010"\))((_string \"10101000001100011100011001101101"\))((_string \"10110000000000110010011111001000"\))((_string \"10111111010110010111111111000111"\))((_string \"11000110111000000000101111110011"\))((_string \"11010101101001111001000101000111"\))((_string \"00000110110010100110001101010001"\))((_string \"00010100001010010010100101100111"\))((_string \"00100111101101110000101010000101"\))((_string \"00101110000110110010000100111000"\))((_string \"01001101001011000110110111111100"\))((_string \"01010011001110000000110100010011"\))((_string \"01100101000010100111001101010100"\))((_string \"01110110011010100000101010111011"\))((_string \"10000001110000101100100100101110"\))((_string \"10010010011100100010110010000101"\))((_string \"10100010101111111110100010100001"\))((_string \"10101000000110100110011001001011"\))((_string \"11000010010010111000101101110000"\))((_string \"11000111011011000101000110100011"\))((_string \"11010001100100101110100000011001"\))((_string \"11010110100110010000011000100100"\))((_string \"11110100000011100011010110000101"\))((_string \"00010000011010101010000001110000"\))((_string \"00011001101001001100000100010110"\))((_string \"00011110001101110110110000001000"\))((_string \"00100111010010000111011101001100"\))((_string \"00110100101100001011110010110101"\))((_string \"00111001000111000000110010110011"\))((_string \"01001110110110001010101001001010"\))((_string \"01011011100111001100101001001111"\))((_string \"01101000001011100110111111110011"\))((_string \"01110100100011111000001011101110"\))((_string \"01111000101001010110001101101111"\))((_string \"10000100110010000111100000010100"\))((_string \"10001100110001110000001000001000"\))((_string \"10010000101111101111111111111010"\))((_string \"10100100010100000110110011101011"\))((_string \"10111110111110011010001111110111"\))((_string \"11000110011100010111100011110010"\))))))
		(_sig(_int W -3 0 62(_arch(_uni(((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\)))))))
		(_sig(_int M -4 0 83(_arch(_uni))))
		(_sig(_int HV -5 0 85(_arch(_uni))))
		(_sig(_int HV_INITIAL_VALUES -5 0 86(_arch(_uni(((_string \"01101010000010011110011001100111"\))((_string \"10111011011001111010111010000101"\))((_string \"00111100011011101111001101110010"\))((_string \"10100101010011111111010100111010"\))((_string \"01010001000011100101001001111111"\))((_string \"10011011000001010110100010001100"\))((_string \"00011111100000111101100110101011"\))((_string \"01011011111000001100110100011001"\)))))))
		(_sig(_int M_INT -4 0 91(_arch(_uni))))
		(_sig(_int W_INT -3 0 94(_arch(_uni))))
		(_type(_int SHA_256_HASH_CORE_STATE 0 97(_enum1 RESET IDLE READ_MSG_BLOCK PREP_MSG_SCHEDULE_00 PREP_MSG_SCHEDULE_01 PREP_MSG_SCHEDULE_02 PREP_MSG_SCHEDULE_03 HASH_01 HASH_02 HASH_02b HASH_02c HASH_03 DONE (_to i 0 i 12))))
		(_sig(_int CURRENT_STATE 3 0 98(_arch(_uni)(_event))))
		(_sig(_int NEXT_STATE 3 0 98(_arch(_uni))))
		(_sig(_int PREVIOUS_STATE 3 0 99(_arch(_uni((i 2))))))
		(_type(_int ~INTEGER~range~0~to~15~13 0 249(_scalar (_to i 0 i 15))))
		(_type(_int ~INTEGER~range~0~to~15~135 0 256(_scalar (_to i 0 i 15))))
		(_type(_int ~INTEGER~range~16~to~63~13 0 262(_scalar (_to i 16 i 63))))
		(_prcs
			(line__104(_arch 0 0 104(_prcs(_simple)(_trgt(26))(_sens(0)(1))(_mon)(_read(27)))))
			(line__116(_arch 1 0 116(_prcs(_simple)(_trgt(27))(_sens(7)(9)(26)(1)(2)(3))(_mon))))
			(line__167(_arch 2 0 167(_prcs(_trgt(7)(8)(9)(10)(11)(12)(13)(14)(15)(16)(17)(18)(19)(20(t_48_63))(20(t_32_47))(20(t_16_31))(20(t_0_15))(20)(21)(22(7))(22(6))(22(5))(22(4))(22(3))(22(2))(22(1))(22(0))(22)(5))(_sens(26)(0)(1)(7)(9)(10)(11)(12)(13)(14)(15)(16)(17)(18)(19)(20)(21)(22)(23)(24)(25(t_48_63))(25(t_32_47))(25(t_16_31))(25(t_0_15))(3))(_dssslsensitivity 3))))
			(line__268(_arch 6 0 268(_assignment(_trgt(5))(_sens(26)))))
			(line__271(_arch 7 0 271(_assignment(_alias((data_out)(HV(0))(HV(1))(HV(2))(HV(3))(HV(4))(HV(5))(HV(6))(HV(7))))(_trgt(6))(_sens(22(7))(22(6))(22(5))(22(4))(22(3))(22(2))(22(1))(22(0))))))
		)
		(_subprogram
			(_ext SIGMA_UCASE_1(2 6))
			(_ext CH(2 3))
			(_ext SIGMA_UCASE_0(2 5))
			(_ext MAJ(2 4))
			(_ext SIGMA_LCASE_1(2 8))
			(_ext SIGMA_LCASE_0(2 7))
		)
		(_type(_ext ieee.std_logic_1164.STD_LOGIC(0 STD_LOGIC)))
		(_type(_ext std.standard.NATURAL(1 NATURAL)))
		(_var(_ext sha256.sha256_pkg.WORD_SIZE(2 WORD_SIZE)))
		(_type(_ext sha256.sha256_pkg.K_DATA(2 K_DATA)))
		(_type(_ext sha256.sha256_pkg.M_DATA(2 M_DATA)))
		(_type(_ext sha256.sha256_pkg.H_DATA(2 H_DATA)))
		(_type(_ext ieee.NUMERIC_STD.UNSIGNED(3 UNSIGNED)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1526(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1526)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1512(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1512)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1514(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1514)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1516(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1516)))
		(_type(_ext ieee.std_logic_1164.STD_LOGIC_VECTOR(0 STD_LOGIC_VECTOR)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1524(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1524)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1518(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1518)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1520(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1520)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1522(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1522)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1530(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1530)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1528(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1528)))
		(_type(_ext std.standard.INTEGER(1 INTEGER)))
	)
	(_use(ieee(std_logic_1164))(std(standard))(.(sha256_pkg))(ieee(NUMERIC_STD)))
	(_static
		(1952543827 2004033637 1751348329 1948279909 1701978223 7628147)
		(1952543827 2004033637 1751348329 1948279909 1634213999 807430259 51)
	)
	(_model . sha256_ARCH 18 -1)
)
I 000052 55 13019         1705873575156 sha256_ARCH
(_unit VHDL(sha256 0 6(sha256_arch 0 22))
	(_version vef)
	(_time 1705873575157 2024.01.21 16:46:15)
	(_source(\../src/sha256.vhd\))
	(_parameters tan)
	(_code 1e1d1b1943494b0d1c1c1a1d08454c1816181f1d1c1d1b)
	(_ent
		(_time 1705867572636)
	)
	(_generate MESSAGE_BLOCK_INTERMEDIATE 0 248(_for 4 )
		(_object
			(_cnst(_int i 4 0 249(_arch)))
			(_prcs
				(line__252(_arch 3 0 252(_assignment(_trgt(24(_object 3)))(_sens(4(_range 8)))(_read(4(_range 9))))))
			)
		)
	)
	(_generate MESSAGE_SCHEDULE_INTERMEDIATE_00 0 255(_for 5 )
		(_object
			(_cnst(_int i 5 0 256(_arch)))
			(_prcs
				(line__258(_arch 4 0 258(_assignment(_trgt(25(_object 4)))(_sens(21(_object 4)))(_read(21(_object 4))))))
			)
		)
	)
	(_generate MESSAGE_SCHEDULE_INTERMEDIATE_01 0 261(_for 6 )
		(_object
			(_cnst(_int i 6 0 262(_arch)))
			(_prcs
				(line__264(_arch 5 0 264(_assignment(_trgt(25(_object 5)))(_sens(25(_index 10))(25(_index 11))(25(_index 12))(25(_index 13)))(_read(25(_index 14))(25(_index 15))(25(_index 16))(25(_index 17))))))
			)
		)
	)
	(_object
		(_gen(_int RESET_VALUE -1 0 8 \'0'\ (_ent gms((i 2)))))
		(_port(_int clk -1 0 11(_ent(_in)(_event))))
		(_port(_int rst -1 0 12(_ent(_in)(_event))))
		(_port(_int data_ready -1 0 13(_ent(_in))))
		(_port(_int n_blocks -2 0 14(_ent(_in))))
		(_type(_int ~STD_LOGIC_VECTOR{0~to~{16*WORD_SIZE}-1}~12 0 15(_array -1((_to i 0 i 511)))))
		(_port(_int msg_block_in 0 0 15(_ent(_in))))
		(_port(_int finished -1 0 17(_ent(_out))))
		(_type(_int ~STD_LOGIC_VECTOR{{WORD_SIZE*8}-1~downto~0}~12 0 18(_array -1((_dto i 255 i 0)))))
		(_port(_int data_out 1 0 18(_ent(_out))))
		(_sig(_int HASH_ROUND_COUNTER -2 0 23(_arch(_uni((i 0))))))
		(_sig(_int MSG_BLOCK_COUNTER -2 0 24(_arch(_uni((i 0))))))
		(_sig(_int HASH_02_COUNTER -2 0 25(_arch(_uni((i 0))))))
		(_cnst(_int HASH_02_COUNT_LIMIT -2 0 26(_arch((i 64)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~13 0 29(_array -1((_dto i 31 i 0)))))
		(_sig(_int T1 2 0 29(_arch(_uni((_others(i 2)))))))
		(_sig(_int T2 2 0 30(_arch(_uni((_others(i 2)))))))
		(_sig(_int a 2 0 33(_arch(_uni((_others(i 2)))))))
		(_sig(_int b 2 0 34(_arch(_uni((_others(i 2)))))))
		(_sig(_int c 2 0 35(_arch(_uni((_others(i 2)))))))
		(_sig(_int d 2 0 36(_arch(_uni((_others(i 2)))))))
		(_sig(_int e 2 0 37(_arch(_uni((_others(i 2)))))))
		(_sig(_int f 2 0 38(_arch(_uni((_others(i 2)))))))
		(_sig(_int g 2 0 39(_arch(_uni((_others(i 2)))))))
		(_sig(_int h 2 0 40(_arch(_uni((_others(i 2)))))))
		(_cnst(_int K -3 0 42(_arch(((_string \"01000010100010100010111110011000"\))((_string \"01110001001101110100010010010001"\))((_string \"10110101110000001111101111001111"\))((_string \"11101001101101011101101110100101"\))((_string \"00111001010101101100001001011011"\))((_string \"01011001111100010001000111110001"\))((_string \"10010010001111111000001010100100"\))((_string \"10101011000111000101111011010101"\))((_string \"11011000000001111010101010011000"\))((_string \"00010010100000110101101100000001"\))((_string \"00100100001100011000010110111110"\))((_string \"01010101000011000111110111000011"\))((_string \"01110010101111100101110101110100"\))((_string \"10000000110111101011000111111110"\))((_string \"10011011110111000000011010100111"\))((_string \"11000001100110111111000101110100"\))((_string \"11100100100110110110100111000001"\))((_string \"11101111101111100100011110000110"\))((_string \"00001111110000011001110111000110"\))((_string \"00100100000011001010000111001100"\))((_string \"00101101111010010010110001101111"\))((_string \"01001010011101001000010010101010"\))((_string \"01011100101100001010100111011100"\))((_string \"01110110111110011000100011011010"\))((_string \"10011000001111100101000101010010"\))((_string \"10101000001100011100011001101101"\))((_string \"10110000000000110010011111001000"\))((_string \"10111111010110010111111111000111"\))((_string \"11000110111000000000101111110011"\))((_string \"11010101101001111001000101000111"\))((_string \"00000110110010100110001101010001"\))((_string \"00010100001010010010100101100111"\))((_string \"00100111101101110000101010000101"\))((_string \"00101110000110110010000100111000"\))((_string \"01001101001011000110110111111100"\))((_string \"01010011001110000000110100010011"\))((_string \"01100101000010100111001101010100"\))((_string \"01110110011010100000101010111011"\))((_string \"10000001110000101100100100101110"\))((_string \"10010010011100100010110010000101"\))((_string \"10100010101111111110100010100001"\))((_string \"10101000000110100110011001001011"\))((_string \"11000010010010111000101101110000"\))((_string \"11000111011011000101000110100011"\))((_string \"11010001100100101110100000011001"\))((_string \"11010110100110010000011000100100"\))((_string \"11110100000011100011010110000101"\))((_string \"00010000011010101010000001110000"\))((_string \"00011001101001001100000100010110"\))((_string \"00011110001101110110110000001000"\))((_string \"00100111010010000111011101001100"\))((_string \"00110100101100001011110010110101"\))((_string \"00111001000111000000110010110011"\))((_string \"01001110110110001010101001001010"\))((_string \"01011011100111001100101001001111"\))((_string \"01101000001011100110111111110011"\))((_string \"01110100100011111000001011101110"\))((_string \"01111000101001010110001101101111"\))((_string \"10000100110010000111100000010100"\))((_string \"10001100110001110000001000001000"\))((_string \"10010000101111101111111111111010"\))((_string \"10100100010100000110110011101011"\))((_string \"10111110111110011010001111110111"\))((_string \"11000110011100010111100011110010"\))))))
		(_sig(_int W -3 0 62(_arch(_uni(((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\)))))))
		(_sig(_int M -4 0 83(_arch(_uni))))
		(_sig(_int HV -5 0 85(_arch(_uni))))
		(_sig(_int HV_INITIAL_VALUES -5 0 86(_arch(_uni(((_string \"01101010000010011110011001100111"\))((_string \"10111011011001111010111010000101"\))((_string \"00111100011011101111001101110010"\))((_string \"10100101010011111111010100111010"\))((_string \"01010001000011100101001001111111"\))((_string \"10011011000001010110100010001100"\))((_string \"00011111100000111101100110101011"\))((_string \"01011011111000001100110100011001"\)))))))
		(_sig(_int M_INT -4 0 91(_arch(_uni))))
		(_sig(_int W_INT -3 0 94(_arch(_uni))))
		(_type(_int SHA_256_HASH_CORE_STATE 0 97(_enum1 RESET IDLE READ_MSG_BLOCK PREP_MSG_SCHEDULE_00 PREP_MSG_SCHEDULE_01 PREP_MSG_SCHEDULE_02 PREP_MSG_SCHEDULE_03 HASH_01 HASH_02 HASH_02b HASH_02c HASH_03 DONE (_to i 0 i 12))))
		(_sig(_int CURRENT_STATE 3 0 98(_arch(_uni)(_event))))
		(_sig(_int NEXT_STATE 3 0 98(_arch(_uni))))
		(_sig(_int PREVIOUS_STATE 3 0 99(_arch(_uni((i 2))))))
		(_type(_int ~INTEGER~range~0~to~15~13 0 249(_scalar (_to i 0 i 15))))
		(_type(_int ~INTEGER~range~0~to~15~135 0 256(_scalar (_to i 0 i 15))))
		(_type(_int ~INTEGER~range~16~to~63~13 0 262(_scalar (_to i 16 i 63))))
		(_prcs
			(line__104(_arch 0 0 104(_prcs(_simple)(_trgt(26))(_sens(0)(1))(_mon)(_read(27)))))
			(line__116(_arch 1 0 116(_prcs(_simple)(_trgt(27))(_sens(7)(9)(26)(1)(2)(3))(_mon))))
			(line__167(_arch 2 0 167(_prcs(_trgt(7)(8)(9)(10)(11)(12)(13)(14)(15)(16)(17)(18)(19)(20(t_48_63))(20(t_32_47))(20(t_16_31))(20(t_0_15))(20)(21)(22(7))(22(6))(22(5))(22(4))(22(3))(22(2))(22(1))(22(0))(22))(_sens(26)(0)(1)(7)(9)(10)(11)(12)(13)(14)(15)(16)(17)(18)(19)(20)(21)(22)(23)(24)(25(t_48_63))(25(t_32_47))(25(t_16_31))(25(t_0_15))(3))(_dssslsensitivity 3))))
			(line__268(_arch 6 0 268(_assignment(_trgt(5))(_sens(26)))))
			(line__271(_arch 7 0 271(_assignment(_alias((data_out)(HV(0))(HV(1))(HV(2))(HV(3))(HV(4))(HV(5))(HV(6))(HV(7))))(_trgt(6))(_sens(22(7))(22(6))(22(5))(22(4))(22(3))(22(2))(22(1))(22(0))))))
		)
		(_subprogram
			(_ext SIGMA_UCASE_1(2 6))
			(_ext CH(2 3))
			(_ext SIGMA_UCASE_0(2 5))
			(_ext MAJ(2 4))
			(_ext SIGMA_LCASE_1(2 8))
			(_ext SIGMA_LCASE_0(2 7))
		)
		(_type(_ext ieee.std_logic_1164.STD_LOGIC(0 STD_LOGIC)))
		(_type(_ext std.standard.NATURAL(1 NATURAL)))
		(_var(_ext sha256.sha256_pkg.WORD_SIZE(2 WORD_SIZE)))
		(_type(_ext sha256.sha256_pkg.K_DATA(2 K_DATA)))
		(_type(_ext sha256.sha256_pkg.M_DATA(2 M_DATA)))
		(_type(_ext sha256.sha256_pkg.H_DATA(2 H_DATA)))
		(_type(_ext ieee.NUMERIC_STD.UNSIGNED(3 UNSIGNED)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1526(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1526)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1512(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1512)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1514(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1514)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1516(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1516)))
		(_type(_ext ieee.std_logic_1164.STD_LOGIC_VECTOR(0 STD_LOGIC_VECTOR)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1524(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1524)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1518(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1518)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1520(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1520)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1522(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1522)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1530(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1530)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1528(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1528)))
		(_type(_ext std.standard.INTEGER(1 INTEGER)))
	)
	(_use(ieee(std_logic_1164))(std(standard))(.(sha256_pkg))(ieee(NUMERIC_STD)))
	(_static
		(1952543827 2004033637 1751348329 1948279909 1701978223 7628147)
		(1952543827 2004033637 1751348329 1948279909 1634213999 807430259 51)
	)
	(_model . sha256_ARCH 18 -1)
)
I 000049 55 4994          1705873756255 behavior
(_unit VHDL(sha256_tb 0 6(behavior 0 10))
	(_version vef)
	(_time 1705873756256 2024.01.21 16:49:16)
	(_source(\../src/sha256_testbench.vhd\))
	(_parameters tan)
	(_code 8384898d88d4d690878996dcd486d5848785818480)
	(_ent
		(_time 1705867572661)
	)
	(_comp
		(sha256
			(_object
				(_gen(_int RESET_VALUE -1 0 15(_ent((i 2)))))
				(_port(_int clk -1 0 18(_ent (_in))))
				(_port(_int rst -1 0 19(_ent (_in))))
				(_port(_int data_ready -1 0 20(_ent (_in))))
				(_port(_int n_blocks -2 0 21(_ent (_in))))
				(_port(_int msg_block_in 0 0 22(_ent (_in))))
				(_port(_int finished -1 0 23(_ent (_out))))
				(_port(_int data_out 1 0 24(_ent (_out))))
			)
		)
	)
	(_inst uut 0 48(_comp sha256)
		(_gen
			((RESET_VALUE)((i 2)))
		)
		(_port
			((clk)(clk))
			((rst)(rst))
			((data_ready)(data_ready))
			((n_blocks)(n_blocks))
			((msg_block_in)(msg_block_in))
			((finished)(finished))
			((data_out)(data_out))
		)
		(_use(_ent . sha256)
			(_gen
				((RESET_VALUE)((i 2)))
			)
		)
	)
	(_object
		(_type(_int ~STD_LOGIC_VECTOR{0~to~{16*WORD_SIZE}-1}~13 0 22(_array -1((_to i 0 i 511)))))
		(_type(_int ~STD_LOGIC_VECTOR{{WORD_SIZE*8}-1~downto~0}~13 0 24(_array -1((_dto i 255 i 0)))))
		(_cnst(_int WORD_SIZE -2 0 29(_arch((i 32)))))
		(_sig(_int clk -1 0 32(_arch(_uni((i 2))))))
		(_sig(_int rst -1 0 33(_arch(_uni((i 2))))))
		(_sig(_int data_ready -1 0 34(_arch(_uni((i 2))))))
		(_sig(_int n_blocks -2 0 35(_arch(_uni((i 0))))))
		(_type(_int ~STD_LOGIC_VECTOR{0~to~{16*WORD_SIZE}-1}~132 0 36(_array -1((_to i 0 i 511)))))
		(_sig(_int msg_block_in 2 0 36(_arch(_uni((_others(i 2)))))))
		(_sig(_int finished -1 0 39(_arch(_uni))))
		(_type(_int ~STD_LOGIC_VECTOR{{WORD_SIZE*8}-1~downto~0}~134 0 40(_array -1((_dto i 255 i 0)))))
		(_sig(_int data_out 3 0 40(_arch(_uni))))
		(_cnst(_int clk_period -3 0 43(_arch((ns 4621819117588971520)))))
		(_cnst(_int \clk_period/2\ -3 0 0(_int gms(_code 2))))
		(_prcs
			(clk_process(_arch 0 0 63(_prcs(_wait_for)(_trgt(0)))))
			(stim_proc(_arch 1 0 72(_prcs(_wait_for)(_trgt(1)(2)(3)(4))(_sens(5))(_mon)(_read(6)))))
		)
		(_type(_ext ieee.std_logic_1164.STD_LOGIC(0 STD_LOGIC)))
		(_type(_ext std.standard.NATURAL(1 NATURAL)))
		(_var(_ext sha256.sha256_pkg.WORD_SIZE(2 WORD_SIZE)))
		(_type(_ext std.standard.TIME(1 TIME)))
	)
	(_use(ieee(std_logic_1164))(std(standard))(.(sha256_pkg))(ieee(NUMERIC_STD)))
	(_static
		
		
		(1752392008 1668180256 1701999215 1881175139 544372079 1981833580 1969581153 1650532466 99)
		
		(1752392008 1818321696 3916199267 1970237472 1634476146 1818326560 544372069 6513249)
		(1752392008 1953459744 1852401184 1701344105 100)
	)
	(_model . behavior 3 -1)
)
I 000052 55 12950         1705873821539 sha256_ARCH
(_unit VHDL(sha256 0 6(sha256_arch 0 22))
	(_version vef)
	(_time 1705873821540 2024.01.21 16:50:21)
	(_source(\../src/sha256.vhd\))
	(_parameters tan)
	(_code 94939f9b98c3c1879696909782cfc6929c929597969791)
	(_ent
		(_time 1705867572636)
	)
	(_generate MESSAGE_BLOCK_INTERMEDIATE 0 248(_for 4 )
		(_object
			(_cnst(_int i 4 0 249(_arch)))
			(_prcs
				(line__252(_arch 3 0 252(_assignment(_trgt(24(_object 3)))(_sens(4(_range 8)))(_read(4(_range 9))))))
			)
		)
	)
	(_generate MESSAGE_SCHEDULE_INTERMEDIATE_00 0 255(_for 5 )
		(_object
			(_cnst(_int i 5 0 256(_arch)))
			(_prcs
				(line__258(_arch 4 0 258(_assignment(_trgt(25(_object 4)))(_sens(21(_object 4)))(_read(21(_object 4))))))
			)
		)
	)
	(_generate MESSAGE_SCHEDULE_INTERMEDIATE_01 0 261(_for 6 )
		(_object
			(_cnst(_int i 6 0 262(_arch)))
			(_prcs
				(line__264(_arch 5 0 264(_assignment(_trgt(25(_object 5)))(_sens(25(_index 10))(25(_index 11))(25(_index 12))(25(_index 13)))(_read(25(_index 14))(25(_index 15))(25(_index 16))(25(_index 17))))))
			)
		)
	)
	(_object
		(_gen(_int RESET_VALUE -1 0 8 \'0'\ (_ent gms((i 2)))))
		(_port(_int clk -1 0 11(_ent(_in)(_event))))
		(_port(_int rst -1 0 12(_ent(_in)(_event))))
		(_port(_int data_ready -1 0 13(_ent(_in))))
		(_port(_int n_blocks -2 0 14(_ent(_in))))
		(_type(_int ~STD_LOGIC_VECTOR{0~to~{16*WORD_SIZE}-1}~12 0 15(_array -1((_to i 0 i 511)))))
		(_port(_int msg_block_in 0 0 15(_ent(_in))))
		(_port(_int finished -1 0 17(_ent(_out))))
		(_type(_int ~STD_LOGIC_VECTOR{{WORD_SIZE*8}-1~downto~0}~12 0 18(_array -1((_dto i 255 i 0)))))
		(_port(_int data_out 1 0 18(_ent(_out))))
		(_sig(_int HASH_ROUND_COUNTER -2 0 23(_arch(_uni((i 0))))))
		(_sig(_int MSG_BLOCK_COUNTER -2 0 24(_arch(_uni((i 0))))))
		(_sig(_int HASH_02_COUNTER -2 0 25(_arch(_uni((i 0))))))
		(_cnst(_int HASH_02_COUNT_LIMIT -2 0 26(_arch((i 64)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~13 0 29(_array -1((_dto i 31 i 0)))))
		(_sig(_int T1 2 0 29(_arch(_uni((_others(i 2)))))))
		(_sig(_int T2 2 0 30(_arch(_uni((_others(i 2)))))))
		(_sig(_int a 2 0 33(_arch(_uni((_others(i 2)))))))
		(_sig(_int b 2 0 34(_arch(_uni((_others(i 2)))))))
		(_sig(_int c 2 0 35(_arch(_uni((_others(i 2)))))))
		(_sig(_int d 2 0 36(_arch(_uni((_others(i 2)))))))
		(_sig(_int e 2 0 37(_arch(_uni((_others(i 2)))))))
		(_sig(_int f 2 0 38(_arch(_uni((_others(i 2)))))))
		(_sig(_int g 2 0 39(_arch(_uni((_others(i 2)))))))
		(_sig(_int h 2 0 40(_arch(_uni((_others(i 2)))))))
		(_cnst(_int K -3 0 42(_arch(((_string \"01000010100010100010111110011000"\))((_string \"01110001001101110100010010010001"\))((_string \"10110101110000001111101111001111"\))((_string \"11101001101101011101101110100101"\))((_string \"00111001010101101100001001011011"\))((_string \"01011001111100010001000111110001"\))((_string \"10010010001111111000001010100100"\))((_string \"10101011000111000101111011010101"\))((_string \"11011000000001111010101010011000"\))((_string \"00010010100000110101101100000001"\))((_string \"00100100001100011000010110111110"\))((_string \"01010101000011000111110111000011"\))((_string \"01110010101111100101110101110100"\))((_string \"10000000110111101011000111111110"\))((_string \"10011011110111000000011010100111"\))((_string \"11000001100110111111000101110100"\))((_string \"11100100100110110110100111000001"\))((_string \"11101111101111100100011110000110"\))((_string \"00001111110000011001110111000110"\))((_string \"00100100000011001010000111001100"\))((_string \"00101101111010010010110001101111"\))((_string \"01001010011101001000010010101010"\))((_string \"01011100101100001010100111011100"\))((_string \"01110110111110011000100011011010"\))((_string \"10011000001111100101000101010010"\))((_string \"10101000001100011100011001101101"\))((_string \"10110000000000110010011111001000"\))((_string \"10111111010110010111111111000111"\))((_string \"11000110111000000000101111110011"\))((_string \"11010101101001111001000101000111"\))((_string \"00000110110010100110001101010001"\))((_string \"00010100001010010010100101100111"\))((_string \"00100111101101110000101010000101"\))((_string \"00101110000110110010000100111000"\))((_string \"01001101001011000110110111111100"\))((_string \"01010011001110000000110100010011"\))((_string \"01100101000010100111001101010100"\))((_string \"01110110011010100000101010111011"\))((_string \"10000001110000101100100100101110"\))((_string \"10010010011100100010110010000101"\))((_string \"10100010101111111110100010100001"\))((_string \"10101000000110100110011001001011"\))((_string \"11000010010010111000101101110000"\))((_string \"11000111011011000101000110100011"\))((_string \"11010001100100101110100000011001"\))((_string \"11010110100110010000011000100100"\))((_string \"11110100000011100011010110000101"\))((_string \"00010000011010101010000001110000"\))((_string \"00011001101001001100000100010110"\))((_string \"00011110001101110110110000001000"\))((_string \"00100111010010000111011101001100"\))((_string \"00110100101100001011110010110101"\))((_string \"00111001000111000000110010110011"\))((_string \"01001110110110001010101001001010"\))((_string \"01011011100111001100101001001111"\))((_string \"01101000001011100110111111110011"\))((_string \"01110100100011111000001011101110"\))((_string \"01111000101001010110001101101111"\))((_string \"10000100110010000111100000010100"\))((_string \"10001100110001110000001000001000"\))((_string \"10010000101111101111111111111010"\))((_string \"10100100010100000110110011101011"\))((_string \"10111110111110011010001111110111"\))((_string \"11000110011100010111100011110010"\))))))
		(_sig(_int W -3 0 62(_arch(_uni(((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\)))))))
		(_sig(_int M -4 0 83(_arch(_uni))))
		(_sig(_int HV -5 0 85(_arch(_uni))))
		(_sig(_int HV_INITIAL_VALUES -5 0 86(_arch(_uni(((_string \"01101010000010011110011001100111"\))((_string \"10111011011001111010111010000101"\))((_string \"00111100011011101111001101110010"\))((_string \"10100101010011111111010100111010"\))((_string \"01010001000011100101001001111111"\))((_string \"10011011000001010110100010001100"\))((_string \"00011111100000111101100110101011"\))((_string \"01011011111000001100110100011001"\)))))))
		(_sig(_int M_INT -4 0 91(_arch(_uni))))
		(_sig(_int W_INT -3 0 94(_arch(_uni))))
		(_type(_int SHA_256_HASH_CORE_STATE 0 97(_enum1 RESET IDLE READ_MSG_BLOCK PREP_MSG_SCHEDULE_00 PREP_MSG_SCHEDULE_01 PREP_MSG_SCHEDULE_02 PREP_MSG_SCHEDULE_03 HASH_01 HASH_02 HASH_02b HASH_02c HASH_03 DONE (_to i 0 i 12))))
		(_sig(_int CURRENT_STATE 3 0 98(_arch(_uni)(_event))))
		(_sig(_int NEXT_STATE 3 0 98(_arch(_uni))))
		(_sig(_int PREVIOUS_STATE 3 0 99(_arch(_uni((i 2))))))
		(_type(_int ~INTEGER~range~0~to~15~13 0 249(_scalar (_to i 0 i 15))))
		(_type(_int ~INTEGER~range~0~to~15~135 0 256(_scalar (_to i 0 i 15))))
		(_type(_int ~INTEGER~range~16~to~63~13 0 262(_scalar (_to i 16 i 63))))
		(_prcs
			(line__104(_arch 0 0 104(_prcs(_trgt(26))(_sens(0)(1)(27))(_dssslsensitivity 2))))
			(line__116(_arch 1 0 116(_prcs(_simple)(_trgt(27))(_sens(7)(9)(26)(1)(2)(3))(_mon))))
			(line__167(_arch 2 0 167(_prcs(_trgt(7)(8)(9)(10)(11)(12)(13)(14)(15)(16)(17)(18)(19)(20(t_48_63))(20(t_32_47))(20(t_16_31))(20(t_0_15))(20)(21)(22(7))(22(6))(22(5))(22(4))(22(3))(22(2))(22(1))(22(0))(22))(_sens(26)(0)(1)(7)(9)(10)(11)(12)(13)(14)(15)(16)(17)(18)(19)(20)(21)(22)(23)(24)(25(t_48_63))(25(t_32_47))(25(t_16_31))(25(t_0_15))(3))(_dssslsensitivity 3))))
			(line__268(_arch 6 0 268(_assignment(_trgt(5))(_sens(26)))))
			(line__271(_arch 7 0 271(_assignment(_alias((data_out)(HV(0))(HV(1))(HV(2))(HV(3))(HV(4))(HV(5))(HV(6))(HV(7))))(_trgt(6))(_sens(22(7))(22(6))(22(5))(22(4))(22(3))(22(2))(22(1))(22(0))))))
		)
		(_subprogram
			(_ext SIGMA_UCASE_1(2 6))
			(_ext CH(2 3))
			(_ext SIGMA_UCASE_0(2 5))
			(_ext MAJ(2 4))
			(_ext SIGMA_LCASE_1(2 8))
			(_ext SIGMA_LCASE_0(2 7))
		)
		(_type(_ext ieee.std_logic_1164.STD_LOGIC(0 STD_LOGIC)))
		(_type(_ext std.standard.NATURAL(1 NATURAL)))
		(_var(_ext sha256.sha256_pkg.WORD_SIZE(2 WORD_SIZE)))
		(_type(_ext sha256.sha256_pkg.K_DATA(2 K_DATA)))
		(_type(_ext sha256.sha256_pkg.M_DATA(2 M_DATA)))
		(_type(_ext sha256.sha256_pkg.H_DATA(2 H_DATA)))
		(_type(_ext ieee.NUMERIC_STD.UNSIGNED(3 UNSIGNED)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1526(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1526)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1512(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1512)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1514(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1514)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1516(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1516)))
		(_type(_ext ieee.std_logic_1164.STD_LOGIC_VECTOR(0 STD_LOGIC_VECTOR)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1524(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1524)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1518(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1518)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1520(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1520)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1522(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1522)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1530(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1530)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1528(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1528)))
		(_type(_ext std.standard.INTEGER(1 INTEGER)))
	)
	(_use(ieee(std_logic_1164))(std(standard))(.(sha256_pkg))(ieee(NUMERIC_STD)))
	(_static
		(1952543827 2004033637 1751348329 1948279909 1634213999 807430259 51)
	)
	(_model . sha256_ARCH 18 -1)
)
V 000042 55 4005 1705867545881 sha256_pkg
(_unit VHDL(sha256_pkg 0 5(sha256_pkg 0 39))
	(_version vef)
	(_time 1705873821551 2024.01.21 16:50:21)
	(_source(\../src/sha256_pkg.vhd\))
	(_parameters tan)
	(_code 94939f9b98c3c187909481cbc391c2939492c69293)
	(_ent
		(_time 1705867545881)
	)
	(_object
		(_cnst(_int WORD_SIZE -1 0 6(_ent((i 32)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~15 0 8(_array -2((_dto i 31 i 0)))))
		(_type(_int K_DATA 0 8(_array 0((_to i 0 i 63)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~152 0 9(_array -2((_dto i 31 i 0)))))
		(_type(_int M_DATA 0 9(_array 2((_to i 0 i 15)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~154 0 10(_array -2((_dto i 31 i 0)))))
		(_type(_int H_DATA 0 10(_array 4((_to i 0 i 7)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~156 0 13(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~158 0 15(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1510 0 17(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1512 0 19(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1514 0 20(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1516 0 21(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1518 0 23(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1520 0 24(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1522 0 25(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1524 0 28(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1526 0 30(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1528 0 32(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1530 0 34(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~16 0 40(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~162 0 46(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~164 0 52(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~166 0 58(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~168 0 59(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1610 0 60(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1612 0 66(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1614 0 67(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1616 0 68(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1618 0 74(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1620 0 80(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1622 0 86(_array -2((_dto i 31 i 0)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1624 0 92(_array -2((_dto i 31 i 0)))))
		(_subprogram
			(_int ROTR 0 0 40(_ent(_func)))
			(_int ROTL 1 0 46(_ent(_func)))
			(_int SHR 2 0 52(_ent(_func)))
			(_int CH 3 0 58(_ent(_func)))
			(_int MAJ 4 0 66(_ent(_func)))
			(_int SIGMA_UCASE_0 5 0 74(_ent(_func -3 15)))
			(_int SIGMA_UCASE_1 6 0 80(_ent(_func -3 16)))
			(_int SIGMA_LCASE_0 7 0 86(_ent(_func -3 17)))
			(_int SIGMA_LCASE_1 8 0 92(_ent(_func -3 18)))
		)
		(_type(_ext std.standard.NATURAL(0 NATURAL)))
		(_type(_ext ieee.std_logic_1164.STD_LOGIC(1 STD_LOGIC)))
		(_type(_ext ieee.std_logic_1164.STD_LOGIC_VECTOR(1 STD_LOGIC_VECTOR)))
		(_type(_ext ieee.NUMERIC_STD.UNSIGNED(2 UNSIGNED)))
		(_type(_ext std.standard.INTEGER(0 INTEGER)))
	)
	(_use(std(standard))(ieee(std_logic_1164))(ieee(NUMERIC_STD)))
	(_model . sha256_pkg 9 -1)
)
I 000049 55 4994          1705873821559 behavior
(_unit VHDL(sha256_tb 0 6(behavior 0 10))
	(_version vef)
	(_time 1705873821560 2024.01.21 16:50:21)
	(_source(\../src/sha256_testbench.vhd\))
	(_parameters tan)
	(_code a4a3aff3a8f3f1b7a0aeb1fbf3a1f2a3a0a2a6a3a7)
	(_ent
		(_time 1705867572661)
	)
	(_comp
		(sha256
			(_object
				(_gen(_int RESET_VALUE -1 0 15(_ent((i 2)))))
				(_port(_int clk -1 0 18(_ent (_in))))
				(_port(_int rst -1 0 19(_ent (_in))))
				(_port(_int data_ready -1 0 20(_ent (_in))))
				(_port(_int n_blocks -2 0 21(_ent (_in))))
				(_port(_int msg_block_in 0 0 22(_ent (_in))))
				(_port(_int finished -1 0 23(_ent (_out))))
				(_port(_int data_out 1 0 24(_ent (_out))))
			)
		)
	)
	(_inst uut 0 48(_comp sha256)
		(_gen
			((RESET_VALUE)((i 2)))
		)
		(_port
			((clk)(clk))
			((rst)(rst))
			((data_ready)(data_ready))
			((n_blocks)(n_blocks))
			((msg_block_in)(msg_block_in))
			((finished)(finished))
			((data_out)(data_out))
		)
		(_use(_ent . sha256)
			(_gen
				((RESET_VALUE)((i 2)))
			)
		)
	)
	(_object
		(_type(_int ~STD_LOGIC_VECTOR{0~to~{16*WORD_SIZE}-1}~13 0 22(_array -1((_to i 0 i 511)))))
		(_type(_int ~STD_LOGIC_VECTOR{{WORD_SIZE*8}-1~downto~0}~13 0 24(_array -1((_dto i 255 i 0)))))
		(_cnst(_int WORD_SIZE -2 0 29(_arch((i 32)))))
		(_sig(_int clk -1 0 32(_arch(_uni((i 2))))))
		(_sig(_int rst -1 0 33(_arch(_uni((i 2))))))
		(_sig(_int data_ready -1 0 34(_arch(_uni((i 2))))))
		(_sig(_int n_blocks -2 0 35(_arch(_uni((i 0))))))
		(_type(_int ~STD_LOGIC_VECTOR{0~to~{16*WORD_SIZE}-1}~132 0 36(_array -1((_to i 0 i 511)))))
		(_sig(_int msg_block_in 2 0 36(_arch(_uni((_others(i 2)))))))
		(_sig(_int finished -1 0 39(_arch(_uni))))
		(_type(_int ~STD_LOGIC_VECTOR{{WORD_SIZE*8}-1~downto~0}~134 0 40(_array -1((_dto i 255 i 0)))))
		(_sig(_int data_out 3 0 40(_arch(_uni))))
		(_cnst(_int clk_period -3 0 43(_arch((ns 4621819117588971520)))))
		(_cnst(_int \clk_period/2\ -3 0 0(_int gms(_code 2))))
		(_prcs
			(clk_process(_arch 0 0 63(_prcs(_wait_for)(_trgt(0)))))
			(stim_proc(_arch 1 0 72(_prcs(_wait_for)(_trgt(1)(2)(3)(4))(_sens(5))(_mon)(_read(6)))))
		)
		(_type(_ext ieee.std_logic_1164.STD_LOGIC(0 STD_LOGIC)))
		(_type(_ext std.standard.NATURAL(1 NATURAL)))
		(_var(_ext sha256.sha256_pkg.WORD_SIZE(2 WORD_SIZE)))
		(_type(_ext std.standard.TIME(1 TIME)))
	)
	(_use(ieee(std_logic_1164))(std(standard))(.(sha256_pkg))(ieee(NUMERIC_STD)))
	(_static
		
		
		(1752392008 1668180256 1701999215 1881175139 544372079 1981833580 1969581153 1650532466 99)
		
		(1752392008 1818321696 3916199267 1970237472 1634476146 1818326560 544372069 6513249)
		(1752392008 1953459744 1852401184 1701344105 100)
	)
	(_model . behavior 3 -1)
)
I 000052 55 12950         1705873843219 sha256_ARCH
(_unit VHDL(sha256 0 6(sha256_arch 0 22))
	(_version vef)
	(_time 1705873843220 2024.01.21 16:50:43)
	(_source(\../src/sha256.vhd\))
	(_parameters tan)
	(_code 3c3e6b39676b692f3e3e383f2a676e3a343a3d3f3e3f39)
	(_ent
		(_time 1705867572636)
	)
	(_generate MESSAGE_BLOCK_INTERMEDIATE 0 248(_for 4 )
		(_object
			(_cnst(_int i 4 0 249(_arch)))
			(_prcs
				(line__252(_arch 3 0 252(_assignment(_trgt(24(_object 3)))(_sens(4(_range 8)))(_read(4(_range 9))))))
			)
		)
	)
	(_generate MESSAGE_SCHEDULE_INTERMEDIATE_00 0 255(_for 5 )
		(_object
			(_cnst(_int i 5 0 256(_arch)))
			(_prcs
				(line__258(_arch 4 0 258(_assignment(_trgt(25(_object 4)))(_sens(21(_object 4)))(_read(21(_object 4))))))
			)
		)
	)
	(_generate MESSAGE_SCHEDULE_INTERMEDIATE_01 0 261(_for 6 )
		(_object
			(_cnst(_int i 6 0 262(_arch)))
			(_prcs
				(line__264(_arch 5 0 264(_assignment(_trgt(25(_object 5)))(_sens(25(_index 10))(25(_index 11))(25(_index 12))(25(_index 13)))(_read(25(_index 14))(25(_index 15))(25(_index 16))(25(_index 17))))))
			)
		)
	)
	(_object
		(_gen(_int RESET_VALUE -1 0 8 \'0'\ (_ent gms((i 2)))))
		(_port(_int clk -1 0 11(_ent(_in)(_event))))
		(_port(_int rst -1 0 12(_ent(_in)(_event))))
		(_port(_int data_ready -1 0 13(_ent(_in))))
		(_port(_int n_blocks -2 0 14(_ent(_in))))
		(_type(_int ~STD_LOGIC_VECTOR{0~to~{16*WORD_SIZE}-1}~12 0 15(_array -1((_to i 0 i 511)))))
		(_port(_int msg_block_in 0 0 15(_ent(_in))))
		(_port(_int finished -1 0 17(_ent(_out))))
		(_type(_int ~STD_LOGIC_VECTOR{{WORD_SIZE*8}-1~downto~0}~12 0 18(_array -1((_dto i 255 i 0)))))
		(_port(_int data_out 1 0 18(_ent(_out))))
		(_sig(_int HASH_ROUND_COUNTER -2 0 23(_arch(_uni((i 0))))))
		(_sig(_int MSG_BLOCK_COUNTER -2 0 24(_arch(_uni((i 0))))))
		(_sig(_int HASH_02_COUNTER -2 0 25(_arch(_uni((i 0))))))
		(_cnst(_int HASH_02_COUNT_LIMIT -2 0 26(_arch((i 64)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~13 0 29(_array -1((_dto i 31 i 0)))))
		(_sig(_int T1 2 0 29(_arch(_uni((_others(i 2)))))))
		(_sig(_int T2 2 0 30(_arch(_uni((_others(i 2)))))))
		(_sig(_int a 2 0 33(_arch(_uni((_others(i 2)))))))
		(_sig(_int b 2 0 34(_arch(_uni((_others(i 2)))))))
		(_sig(_int c 2 0 35(_arch(_uni((_others(i 2)))))))
		(_sig(_int d 2 0 36(_arch(_uni((_others(i 2)))))))
		(_sig(_int e 2 0 37(_arch(_uni((_others(i 2)))))))
		(_sig(_int f 2 0 38(_arch(_uni((_others(i 2)))))))
		(_sig(_int g 2 0 39(_arch(_uni((_others(i 2)))))))
		(_sig(_int h 2 0 40(_arch(_uni((_others(i 2)))))))
		(_cnst(_int K -3 0 42(_arch(((_string \"01000010100010100010111110011000"\))((_string \"01110001001101110100010010010001"\))((_string \"10110101110000001111101111001111"\))((_string \"11101001101101011101101110100101"\))((_string \"00111001010101101100001001011011"\))((_string \"01011001111100010001000111110001"\))((_string \"10010010001111111000001010100100"\))((_string \"10101011000111000101111011010101"\))((_string \"11011000000001111010101010011000"\))((_string \"00010010100000110101101100000001"\))((_string \"00100100001100011000010110111110"\))((_string \"01010101000011000111110111000011"\))((_string \"01110010101111100101110101110100"\))((_string \"10000000110111101011000111111110"\))((_string \"10011011110111000000011010100111"\))((_string \"11000001100110111111000101110100"\))((_string \"11100100100110110110100111000001"\))((_string \"11101111101111100100011110000110"\))((_string \"00001111110000011001110111000110"\))((_string \"00100100000011001010000111001100"\))((_string \"00101101111010010010110001101111"\))((_string \"01001010011101001000010010101010"\))((_string \"01011100101100001010100111011100"\))((_string \"01110110111110011000100011011010"\))((_string \"10011000001111100101000101010010"\))((_string \"10101000001100011100011001101101"\))((_string \"10110000000000110010011111001000"\))((_string \"10111111010110010111111111000111"\))((_string \"11000110111000000000101111110011"\))((_string \"11010101101001111001000101000111"\))((_string \"00000110110010100110001101010001"\))((_string \"00010100001010010010100101100111"\))((_string \"00100111101101110000101010000101"\))((_string \"00101110000110110010000100111000"\))((_string \"01001101001011000110110111111100"\))((_string \"01010011001110000000110100010011"\))((_string \"01100101000010100111001101010100"\))((_string \"01110110011010100000101010111011"\))((_string \"10000001110000101100100100101110"\))((_string \"10010010011100100010110010000101"\))((_string \"10100010101111111110100010100001"\))((_string \"10101000000110100110011001001011"\))((_string \"11000010010010111000101101110000"\))((_string \"11000111011011000101000110100011"\))((_string \"11010001100100101110100000011001"\))((_string \"11010110100110010000011000100100"\))((_string \"11110100000011100011010110000101"\))((_string \"00010000011010101010000001110000"\))((_string \"00011001101001001100000100010110"\))((_string \"00011110001101110110110000001000"\))((_string \"00100111010010000111011101001100"\))((_string \"00110100101100001011110010110101"\))((_string \"00111001000111000000110010110011"\))((_string \"01001110110110001010101001001010"\))((_string \"01011011100111001100101001001111"\))((_string \"01101000001011100110111111110011"\))((_string \"01110100100011111000001011101110"\))((_string \"01111000101001010110001101101111"\))((_string \"10000100110010000111100000010100"\))((_string \"10001100110001110000001000001000"\))((_string \"10010000101111101111111111111010"\))((_string \"10100100010100000110110011101011"\))((_string \"10111110111110011010001111110111"\))((_string \"11000110011100010111100011110010"\))))))
		(_sig(_int W -3 0 62(_arch(_uni(((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\)))))))
		(_sig(_int M -4 0 83(_arch(_uni))))
		(_sig(_int HV -5 0 85(_arch(_uni))))
		(_sig(_int HV_INITIAL_VALUES -5 0 86(_arch(_uni(((_string \"01101010000010011110011001100111"\))((_string \"10111011011001111010111010000101"\))((_string \"00111100011011101111001101110010"\))((_string \"10100101010011111111010100111010"\))((_string \"01010001000011100101001001111111"\))((_string \"10011011000001010110100010001100"\))((_string \"00011111100000111101100110101011"\))((_string \"01011011111000001100110100011001"\)))))))
		(_sig(_int M_INT -4 0 91(_arch(_uni))))
		(_sig(_int W_INT -3 0 94(_arch(_uni))))
		(_type(_int SHA_256_HASH_CORE_STATE 0 97(_enum1 RESET IDLE READ_MSG_BLOCK PREP_MSG_SCHEDULE_00 PREP_MSG_SCHEDULE_01 PREP_MSG_SCHEDULE_02 PREP_MSG_SCHEDULE_03 HASH_01 HASH_02 HASH_02b HASH_02c HASH_03 DONE (_to i 0 i 12))))
		(_sig(_int CURRENT_STATE 3 0 98(_arch(_uni)(_event))))
		(_sig(_int NEXT_STATE 3 0 98(_arch(_uni))))
		(_sig(_int PREVIOUS_STATE 3 0 99(_arch(_uni((i 2))))))
		(_type(_int ~INTEGER~range~0~to~15~13 0 249(_scalar (_to i 0 i 15))))
		(_type(_int ~INTEGER~range~0~to~15~135 0 256(_scalar (_to i 0 i 15))))
		(_type(_int ~INTEGER~range~16~to~63~13 0 262(_scalar (_to i 16 i 63))))
		(_prcs
			(line__104(_arch 0 0 104(_prcs(_trgt(26))(_sens(0)(1)(27))(_dssslsensitivity 2))))
			(line__116(_arch 1 0 116(_prcs(_simple)(_trgt(27))(_sens(7)(9)(26)(1)(2)(3))(_mon))))
			(line__167(_arch 2 0 167(_prcs(_trgt(7)(8)(9)(10)(11)(12)(13)(14)(15)(16)(17)(18)(19)(20(t_48_63))(20(t_32_47))(20(t_16_31))(20(t_0_15))(20)(21)(22(7))(22(6))(22(5))(22(4))(22(3))(22(2))(22(1))(22(0))(22))(_sens(26)(0)(1)(7)(9)(10)(11)(12)(13)(14)(15)(16)(17)(18)(19)(20)(21)(22)(23)(24)(25(t_48_63))(25(t_32_47))(25(t_16_31))(25(t_0_15))(3))(_dssslsensitivity 3))))
			(line__268(_arch 6 0 268(_assignment(_trgt(5))(_sens(26)))))
			(line__271(_arch 7 0 271(_assignment(_alias((data_out)(HV(0))(HV(1))(HV(2))(HV(3))(HV(4))(HV(5))(HV(6))(HV(7))))(_trgt(6))(_sens(22(7))(22(6))(22(5))(22(4))(22(3))(22(2))(22(1))(22(0))))))
		)
		(_subprogram
			(_ext SIGMA_UCASE_1(2 6))
			(_ext CH(2 3))
			(_ext SIGMA_UCASE_0(2 5))
			(_ext MAJ(2 4))
			(_ext SIGMA_LCASE_1(2 8))
			(_ext SIGMA_LCASE_0(2 7))
		)
		(_type(_ext ieee.std_logic_1164.STD_LOGIC(0 STD_LOGIC)))
		(_type(_ext std.standard.NATURAL(1 NATURAL)))
		(_var(_ext sha256.sha256_pkg.WORD_SIZE(2 WORD_SIZE)))
		(_type(_ext sha256.sha256_pkg.K_DATA(2 K_DATA)))
		(_type(_ext sha256.sha256_pkg.M_DATA(2 M_DATA)))
		(_type(_ext sha256.sha256_pkg.H_DATA(2 H_DATA)))
		(_type(_ext ieee.NUMERIC_STD.UNSIGNED(3 UNSIGNED)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1526(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1526)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1512(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1512)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1514(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1514)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1516(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1516)))
		(_type(_ext ieee.std_logic_1164.STD_LOGIC_VECTOR(0 STD_LOGIC_VECTOR)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1524(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1524)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1518(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1518)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1520(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1520)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1522(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1522)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1530(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1530)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1528(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1528)))
		(_type(_ext std.standard.INTEGER(1 INTEGER)))
	)
	(_use(ieee(std_logic_1164))(std(standard))(.(sha256_pkg))(ieee(NUMERIC_STD)))
	(_static
		(1952543827 2004033637 1751348329 1948279909 1634213999 807430259 51)
	)
	(_model . sha256_ARCH 18 -1)
)
I 000049 55 4342          1705873883826 behavior
(_unit VHDL(sha256_tb 0 6(behavior 0 10))
	(_version vef)
	(_time 1705873883827 2024.01.21 16:51:23)
	(_source(\../src/sha256_testbench.vhd\))
	(_parameters tan)
	(_code de8f8f8c83898bcddadecb8189db88d9dad8dcd9dd)
	(_ent
		(_time 1705867572661)
	)
	(_comp
		(sha256
			(_object
				(_gen(_int RESET_VALUE -1 0 15(_ent((i 2)))))
				(_port(_int clk -1 0 18(_ent (_in))))
				(_port(_int rst -1 0 19(_ent (_in))))
				(_port(_int data_ready -1 0 20(_ent (_in))))
				(_port(_int n_blocks -2 0 21(_ent (_in))))
				(_port(_int msg_block_in 0 0 22(_ent (_in))))
				(_port(_int finished -1 0 23(_ent (_out))))
				(_port(_int data_out 1 0 24(_ent (_out))))
			)
		)
	)
	(_inst uut 0 48(_comp sha256)
		(_gen
			((RESET_VALUE)((i 2)))
		)
		(_port
			((clk)(clk))
			((rst)(rst))
			((data_ready)(data_ready))
			((n_blocks)(n_blocks))
			((msg_block_in)(msg_block_in))
			((finished)(finished))
			((data_out)(data_out))
		)
		(_use(_ent . sha256)
			(_gen
				((RESET_VALUE)((i 2)))
			)
		)
	)
	(_object
		(_type(_int ~STD_LOGIC_VECTOR{0~to~{16*WORD_SIZE}-1}~13 0 22(_array -1((_to i 0 i 511)))))
		(_type(_int ~STD_LOGIC_VECTOR{{WORD_SIZE*8}-1~downto~0}~13 0 24(_array -1((_dto i 255 i 0)))))
		(_cnst(_int WORD_SIZE -2 0 29(_arch((i 32)))))
		(_sig(_int clk -1 0 32(_arch(_uni((i 2))))))
		(_sig(_int rst -1 0 33(_arch(_uni((i 2))))))
		(_sig(_int data_ready -1 0 34(_arch(_uni((i 2))))))
		(_sig(_int n_blocks -2 0 35(_arch(_uni((i 0))))))
		(_type(_int ~STD_LOGIC_VECTOR{0~to~{16*WORD_SIZE}-1}~132 0 36(_array -1((_to i 0 i 511)))))
		(_sig(_int msg_block_in 2 0 36(_arch(_uni((_others(i 2)))))))
		(_sig(_int finished -1 0 39(_arch(_uni))))
		(_type(_int ~STD_LOGIC_VECTOR{{WORD_SIZE*8}-1~downto~0}~134 0 40(_array -1((_dto i 255 i 0)))))
		(_sig(_int data_out 3 0 40(_arch(_uni))))
		(_cnst(_int clk_period -3 0 43(_arch((ns 4621819117588971520)))))
		(_cnst(_int \clk_period/2\ -3 0 0(_int gms(_code 2))))
		(_prcs
			(clk_process(_arch 0 0 63(_prcs(_wait_for)(_trgt(0)))))
			(stim_proc(_arch 1 0 72(_prcs(_wait_for)(_trgt(1)(2)(3)(4))(_sens(5))(_mon)(_read(6)))))
		)
		(_type(_ext ieee.std_logic_1164.STD_LOGIC(0 STD_LOGIC)))
		(_type(_ext std.standard.NATURAL(1 NATURAL)))
		(_var(_ext sha256.sha256_pkg.WORD_SIZE(2 WORD_SIZE)))
		(_type(_ext std.standard.TIME(1 TIME)))
	)
	(_use(ieee(std_logic_1164))(std(standard))(.(sha256_pkg))(ieee(NUMERIC_STD)))
	(_static
		
		
		(1752392008 1668180256 1701999215 1881175139 544372079 1981833580 1969581153 1650532466 99)
		(1752392008 1953459744 1852401184 1701344105 100)
	)
	(_model . behavior 3 -1)
)
I 000049 55 4342          1705873911445 behavior
(_unit VHDL(sha256_tb 0 6(behavior 0 10))
	(_version vef)
	(_time 1705873911446 2024.01.21 16:51:51)
	(_source(\../src/sha256_testbench.vhd\))
	(_parameters tan)
	(_code c7c6c392c89092d4c3c0d29890c291c0c3c1c5c0c4)
	(_ent
		(_time 1705867572661)
	)
	(_comp
		(sha256
			(_object
				(_gen(_int RESET_VALUE -1 0 15(_ent((i 2)))))
				(_port(_int clk -1 0 18(_ent (_in))))
				(_port(_int rst -1 0 19(_ent (_in))))
				(_port(_int data_ready -1 0 20(_ent (_in))))
				(_port(_int n_blocks -2 0 21(_ent (_in))))
				(_port(_int msg_block_in 0 0 22(_ent (_in))))
				(_port(_int finished -1 0 23(_ent (_out))))
				(_port(_int data_out 1 0 24(_ent (_out))))
			)
		)
	)
	(_inst uut 0 48(_comp sha256)
		(_gen
			((RESET_VALUE)((i 2)))
		)
		(_port
			((clk)(clk))
			((rst)(rst))
			((data_ready)(data_ready))
			((n_blocks)(n_blocks))
			((msg_block_in)(msg_block_in))
			((finished)(finished))
			((data_out)(data_out))
		)
		(_use(_ent . sha256)
			(_gen
				((RESET_VALUE)((i 2)))
			)
		)
	)
	(_object
		(_type(_int ~STD_LOGIC_VECTOR{0~to~{16*WORD_SIZE}-1}~13 0 22(_array -1((_to i 0 i 511)))))
		(_type(_int ~STD_LOGIC_VECTOR{{WORD_SIZE*8}-1~downto~0}~13 0 24(_array -1((_dto i 255 i 0)))))
		(_cnst(_int WORD_SIZE -2 0 29(_arch((i 32)))))
		(_sig(_int clk -1 0 32(_arch(_uni((i 2))))))
		(_sig(_int rst -1 0 33(_arch(_uni((i 2))))))
		(_sig(_int data_ready -1 0 34(_arch(_uni((i 2))))))
		(_sig(_int n_blocks -2 0 35(_arch(_uni((i 0))))))
		(_type(_int ~STD_LOGIC_VECTOR{0~to~{16*WORD_SIZE}-1}~132 0 36(_array -1((_to i 0 i 511)))))
		(_sig(_int msg_block_in 2 0 36(_arch(_uni((_others(i 2)))))))
		(_sig(_int finished -1 0 39(_arch(_uni))))
		(_type(_int ~STD_LOGIC_VECTOR{{WORD_SIZE*8}-1~downto~0}~134 0 40(_array -1((_dto i 255 i 0)))))
		(_sig(_int data_out 3 0 40(_arch(_uni))))
		(_cnst(_int clk_period -3 0 43(_arch((ns 4621819117588971520)))))
		(_cnst(_int \clk_period/2\ -3 0 0(_int gms(_code 2))))
		(_prcs
			(clk_process(_arch 0 0 63(_prcs(_wait_for)(_trgt(0)))))
			(stim_proc(_arch 1 0 72(_prcs(_wait_for)(_trgt(1)(2)(3)(4))(_sens(5))(_mon)(_read(6)))))
		)
		(_type(_ext ieee.std_logic_1164.STD_LOGIC(0 STD_LOGIC)))
		(_type(_ext std.standard.NATURAL(1 NATURAL)))
		(_var(_ext sha256.sha256_pkg.WORD_SIZE(2 WORD_SIZE)))
		(_type(_ext std.standard.TIME(1 TIME)))
	)
	(_use(ieee(std_logic_1164))(std(standard))(.(sha256_pkg))(ieee(NUMERIC_STD)))
	(_static
		
		
		(1752392008 1668180256 1701999215 1881175139 544372079 1981833580 1969581153 1650532466 99)
		(1752392008 1953459744 1852401184 1701344105 100)
	)
	(_model . behavior 3 -1)
)
I 000052 55 12950         1705874059097 sha256_ARCH
(_unit VHDL(sha256 0 6(sha256_arch 0 22))
	(_version vef)
	(_time 1705874059098 2024.01.21 16:54:19)
	(_source(\../src/sha256.vhd\))
	(_parameters tan)
	(_code 7f29747e21282a6c7d7d7b7c69242d7977797e7c7d7c7a)
	(_ent
		(_time 1705867572636)
	)
	(_generate MESSAGE_BLOCK_INTERMEDIATE 0 248(_for 4 )
		(_object
			(_cnst(_int i 4 0 249(_arch)))
			(_prcs
				(line__252(_arch 3 0 252(_assignment(_trgt(24(_object 3)))(_sens(4(_range 8)))(_read(4(_range 9))))))
			)
		)
	)
	(_generate MESSAGE_SCHEDULE_INTERMEDIATE_00 0 255(_for 5 )
		(_object
			(_cnst(_int i 5 0 256(_arch)))
			(_prcs
				(line__258(_arch 4 0 258(_assignment(_trgt(25(_object 4)))(_sens(21(_object 4)))(_read(21(_object 4))))))
			)
		)
	)
	(_generate MESSAGE_SCHEDULE_INTERMEDIATE_01 0 261(_for 6 )
		(_object
			(_cnst(_int i 6 0 262(_arch)))
			(_prcs
				(line__264(_arch 5 0 264(_assignment(_trgt(25(_object 5)))(_sens(25(_index 10))(25(_index 11))(25(_index 12))(25(_index 13)))(_read(25(_index 14))(25(_index 15))(25(_index 16))(25(_index 17))))))
			)
		)
	)
	(_object
		(_gen(_int RESET_VALUE -1 0 8 \'0'\ (_ent gms((i 2)))))
		(_port(_int clk -1 0 11(_ent(_in)(_event))))
		(_port(_int rst -1 0 12(_ent(_in)(_event))))
		(_port(_int data_ready -1 0 13(_ent(_in))))
		(_port(_int n_blocks -2 0 14(_ent(_in))))
		(_type(_int ~STD_LOGIC_VECTOR{0~to~{16*WORD_SIZE}-1}~12 0 15(_array -1((_to i 0 i 511)))))
		(_port(_int msg_block_in 0 0 15(_ent(_in))))
		(_port(_int finished -1 0 17(_ent(_out))))
		(_type(_int ~STD_LOGIC_VECTOR{{WORD_SIZE*8}-1~downto~0}~12 0 18(_array -1((_dto i 255 i 0)))))
		(_port(_int data_out 1 0 18(_ent(_out))))
		(_sig(_int HASH_ROUND_COUNTER -2 0 23(_arch(_uni((i 0))))))
		(_sig(_int MSG_BLOCK_COUNTER -2 0 24(_arch(_uni((i 0))))))
		(_sig(_int HASH_02_COUNTER -2 0 25(_arch(_uni((i 0))))))
		(_cnst(_int HASH_02_COUNT_LIMIT -2 0 26(_arch((i 64)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~13 0 29(_array -1((_dto i 31 i 0)))))
		(_sig(_int T1 2 0 29(_arch(_uni((_others(i 2)))))))
		(_sig(_int T2 2 0 30(_arch(_uni((_others(i 2)))))))
		(_sig(_int a 2 0 33(_arch(_uni((_others(i 2)))))))
		(_sig(_int b 2 0 34(_arch(_uni((_others(i 2)))))))
		(_sig(_int c 2 0 35(_arch(_uni((_others(i 2)))))))
		(_sig(_int d 2 0 36(_arch(_uni((_others(i 2)))))))
		(_sig(_int e 2 0 37(_arch(_uni((_others(i 2)))))))
		(_sig(_int f 2 0 38(_arch(_uni((_others(i 2)))))))
		(_sig(_int g 2 0 39(_arch(_uni((_others(i 2)))))))
		(_sig(_int h 2 0 40(_arch(_uni((_others(i 2)))))))
		(_cnst(_int K -3 0 42(_arch(((_string \"01000010100010100010111110011000"\))((_string \"01110001001101110100010010010001"\))((_string \"10110101110000001111101111001111"\))((_string \"11101001101101011101101110100101"\))((_string \"00111001010101101100001001011011"\))((_string \"01011001111100010001000111110001"\))((_string \"10010010001111111000001010100100"\))((_string \"10101011000111000101111011010101"\))((_string \"11011000000001111010101010011000"\))((_string \"00010010100000110101101100000001"\))((_string \"00100100001100011000010110111110"\))((_string \"01010101000011000111110111000011"\))((_string \"01110010101111100101110101110100"\))((_string \"10000000110111101011000111111110"\))((_string \"10011011110111000000011010100111"\))((_string \"11000001100110111111000101110100"\))((_string \"11100100100110110110100111000001"\))((_string \"11101111101111100100011110000110"\))((_string \"00001111110000011001110111000110"\))((_string \"00100100000011001010000111001100"\))((_string \"00101101111010010010110001101111"\))((_string \"01001010011101001000010010101010"\))((_string \"01011100101100001010100111011100"\))((_string \"01110110111110011000100011011010"\))((_string \"10011000001111100101000101010010"\))((_string \"10101000001100011100011001101101"\))((_string \"10110000000000110010011111001000"\))((_string \"10111111010110010111111111000111"\))((_string \"11000110111000000000101111110011"\))((_string \"11010101101001111001000101000111"\))((_string \"00000110110010100110001101010001"\))((_string \"00010100001010010010100101100111"\))((_string \"00100111101101110000101010000101"\))((_string \"00101110000110110010000100111000"\))((_string \"01001101001011000110110111111100"\))((_string \"01010011001110000000110100010011"\))((_string \"01100101000010100111001101010100"\))((_string \"01110110011010100000101010111011"\))((_string \"10000001110000101100100100101110"\))((_string \"10010010011100100010110010000101"\))((_string \"10100010101111111110100010100001"\))((_string \"10101000000110100110011001001011"\))((_string \"11000010010010111000101101110000"\))((_string \"11000111011011000101000110100011"\))((_string \"11010001100100101110100000011001"\))((_string \"11010110100110010000011000100100"\))((_string \"11110100000011100011010110000101"\))((_string \"00010000011010101010000001110000"\))((_string \"00011001101001001100000100010110"\))((_string \"00011110001101110110110000001000"\))((_string \"00100111010010000111011101001100"\))((_string \"00110100101100001011110010110101"\))((_string \"00111001000111000000110010110011"\))((_string \"01001110110110001010101001001010"\))((_string \"01011011100111001100101001001111"\))((_string \"01101000001011100110111111110011"\))((_string \"01110100100011111000001011101110"\))((_string \"01111000101001010110001101101111"\))((_string \"10000100110010000111100000010100"\))((_string \"10001100110001110000001000001000"\))((_string \"10010000101111101111111111111010"\))((_string \"10100100010100000110110011101011"\))((_string \"10111110111110011010001111110111"\))((_string \"11000110011100010111100011110010"\))))))
		(_sig(_int W -3 0 62(_arch(_uni(((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\)))))))
		(_sig(_int M -4 0 83(_arch(_uni))))
		(_sig(_int HV -5 0 85(_arch(_uni))))
		(_sig(_int HV_INITIAL_VALUES -5 0 86(_arch(_uni(((_string \"01101010000010011110011001100111"\))((_string \"10111011011001111010111010000101"\))((_string \"00111100011011101111001101110010"\))((_string \"10100101010011111111010100111010"\))((_string \"01010001000011100101001001111111"\))((_string \"10011011000001010110100010001100"\))((_string \"00011111100000111101100110101011"\))((_string \"01011011111000001100110100011001"\)))))))
		(_sig(_int M_INT -4 0 91(_arch(_uni))))
		(_sig(_int W_INT -3 0 94(_arch(_uni))))
		(_type(_int SHA_256_HASH_CORE_STATE 0 97(_enum1 RESET IDLE READ_MSG_BLOCK PREP_MSG_SCHEDULE_00 PREP_MSG_SCHEDULE_01 PREP_MSG_SCHEDULE_02 PREP_MSG_SCHEDULE_03 HASH_01 HASH_02 HASH_02b HASH_02c HASH_03 DONE (_to i 0 i 12))))
		(_sig(_int CURRENT_STATE 3 0 98(_arch(_uni)(_event))))
		(_sig(_int NEXT_STATE 3 0 98(_arch(_uni))))
		(_sig(_int PREVIOUS_STATE 3 0 99(_arch(_uni((i 2))))))
		(_type(_int ~INTEGER~range~0~to~15~13 0 249(_scalar (_to i 0 i 15))))
		(_type(_int ~INTEGER~range~0~to~15~135 0 256(_scalar (_to i 0 i 15))))
		(_type(_int ~INTEGER~range~16~to~63~13 0 262(_scalar (_to i 16 i 63))))
		(_prcs
			(line__104(_arch 0 0 104(_prcs(_trgt(26))(_sens(0)(1)(27))(_dssslsensitivity 2))))
			(line__116(_arch 1 0 116(_prcs(_simple)(_trgt(27))(_sens(7)(9)(26)(1)(2)(3))(_mon))))
			(line__167(_arch 2 0 167(_prcs(_trgt(7)(8)(9)(10)(11)(12)(13)(14)(15)(16)(17)(18)(19)(20(t_48_63))(20(t_32_47))(20(t_16_31))(20(t_0_15))(20)(21)(22(7))(22(6))(22(5))(22(4))(22(3))(22(2))(22(1))(22(0))(22))(_sens(26)(0)(1)(7)(9)(10)(11)(12)(13)(14)(15)(16)(17)(18)(19)(20)(21)(22)(23)(24)(25(t_48_63))(25(t_32_47))(25(t_16_31))(25(t_0_15))(3))(_dssslsensitivity 3))))
			(line__268(_arch 6 0 268(_assignment(_trgt(5))(_sens(26)))))
			(line__271(_arch 7 0 271(_assignment(_alias((data_out)(HV(0))(HV(1))(HV(2))(HV(3))(HV(4))(HV(5))(HV(6))(HV(7))))(_trgt(6))(_sens(22(7))(22(6))(22(5))(22(4))(22(3))(22(2))(22(1))(22(0))))))
		)
		(_subprogram
			(_ext SIGMA_UCASE_1(2 6))
			(_ext CH(2 3))
			(_ext SIGMA_UCASE_0(2 5))
			(_ext MAJ(2 4))
			(_ext SIGMA_LCASE_1(2 8))
			(_ext SIGMA_LCASE_0(2 7))
		)
		(_type(_ext ieee.std_logic_1164.STD_LOGIC(0 STD_LOGIC)))
		(_type(_ext std.standard.NATURAL(1 NATURAL)))
		(_var(_ext sha256.sha256_pkg.WORD_SIZE(2 WORD_SIZE)))
		(_type(_ext sha256.sha256_pkg.K_DATA(2 K_DATA)))
		(_type(_ext sha256.sha256_pkg.M_DATA(2 M_DATA)))
		(_type(_ext sha256.sha256_pkg.H_DATA(2 H_DATA)))
		(_type(_ext ieee.NUMERIC_STD.UNSIGNED(3 UNSIGNED)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1526(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1526)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1512(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1512)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1514(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1514)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1516(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1516)))
		(_type(_ext ieee.std_logic_1164.STD_LOGIC_VECTOR(0 STD_LOGIC_VECTOR)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1524(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1524)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1518(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1518)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1520(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1520)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1522(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1522)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1530(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1530)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1528(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1528)))
		(_type(_ext std.standard.INTEGER(1 INTEGER)))
	)
	(_use(ieee(std_logic_1164))(std(standard))(.(sha256_pkg))(ieee(NUMERIC_STD)))
	(_static
		(1952543827 2004033637 1751348329 1948279909 1634213999 807430259 51)
	)
	(_model . sha256_ARCH 18 -1)
)
I 000052 55 13820         1705875559104 sha256_ARCH
(_unit VHDL(sha256 0 6(sha256_arch 0 22))
	(_version vef)
	(_time 1705875559105 2024.01.21 17:19:19)
	(_source(\../src/sha256.vhd\))
	(_parameters tan)
	(_code efe0bebcb1b8bafcededebb9f9b4bde9e7e9eeecedecea)
	(_ent
		(_time 1705867572636)
	)
	(_generate MESSAGE_BLOCK_INTERMEDIATE 0 262(_for 4 )
		(_object
			(_cnst(_int i 4 0 263(_arch)))
			(_prcs
				(line__266(_arch 3 0 266(_assignment(_trgt(24(_object 3)))(_sens(4(_range 8)))(_read(4(_range 9))))))
			)
		)
	)
	(_generate MESSAGE_SCHEDULE_INTERMEDIATE_00 0 269(_for 5 )
		(_object
			(_cnst(_int i 5 0 270(_arch)))
			(_prcs
				(line__272(_arch 4 0 272(_assignment(_trgt(25(_object 4)))(_sens(21(_object 4)))(_read(21(_object 4))))))
			)
		)
	)
	(_generate MESSAGE_SCHEDULE_INTERMEDIATE_01 0 275(_for 6 )
		(_object
			(_cnst(_int i 6 0 276(_arch)))
			(_prcs
				(line__278(_arch 5 0 278(_assignment(_trgt(25(_object 5)))(_sens(25(_index 10))(25(_index 11))(25(_index 12))(25(_index 13)))(_read(25(_index 14))(25(_index 15))(25(_index 16))(25(_index 17))))))
			)
		)
	)
	(_object
		(_gen(_int RESET_VALUE -1 0 8 \'0'\ (_ent gms((i 2)))))
		(_port(_int clk -1 0 11(_ent(_in)(_event))))
		(_port(_int rst -1 0 12(_ent(_in)(_event))))
		(_port(_int data_ready -1 0 13(_ent(_in))))
		(_port(_int n_blocks -2 0 14(_ent(_in))))
		(_type(_int ~STD_LOGIC_VECTOR{0~to~{16*WORD_SIZE}-1}~12 0 15(_array -1((_to i 0 i 511)))))
		(_port(_int msg_block_in 0 0 15(_ent(_in))))
		(_port(_int finished -1 0 17(_ent(_out))))
		(_type(_int ~STD_LOGIC_VECTOR{{WORD_SIZE*8}-1~downto~0}~12 0 18(_array -1((_dto i 255 i 0)))))
		(_port(_int data_out 1 0 18(_ent(_out))))
		(_sig(_int HASH_ROUND_COUNTER -2 0 23(_arch(_uni((i 0))))))
		(_sig(_int MSG_BLOCK_COUNTER -2 0 24(_arch(_uni((i 0))))))
		(_sig(_int HASH_02_COUNTER -2 0 25(_arch(_uni((i 0))))))
		(_cnst(_int HASH_02_COUNT_LIMIT -2 0 26(_arch((i 64)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~13 0 29(_array -1((_dto i 31 i 0)))))
		(_sig(_int T1 2 0 29(_arch(_uni((_others(i 2)))))))
		(_sig(_int T2 2 0 30(_arch(_uni((_others(i 2)))))))
		(_sig(_int a 2 0 33(_arch(_uni((_others(i 2)))))))
		(_sig(_int b 2 0 34(_arch(_uni((_others(i 2)))))))
		(_sig(_int c 2 0 35(_arch(_uni((_others(i 2)))))))
		(_sig(_int d 2 0 36(_arch(_uni((_others(i 2)))))))
		(_sig(_int e 2 0 37(_arch(_uni((_others(i 2)))))))
		(_sig(_int f 2 0 38(_arch(_uni((_others(i 2)))))))
		(_sig(_int g 2 0 39(_arch(_uni((_others(i 2)))))))
		(_sig(_int h 2 0 40(_arch(_uni((_others(i 2)))))))
		(_cnst(_int K -3 0 42(_arch(((_string \"01000010100010100010111110011000"\))((_string \"01110001001101110100010010010001"\))((_string \"10110101110000001111101111001111"\))((_string \"11101001101101011101101110100101"\))((_string \"00111001010101101100001001011011"\))((_string \"01011001111100010001000111110001"\))((_string \"10010010001111111000001010100100"\))((_string \"10101011000111000101111011010101"\))((_string \"11011000000001111010101010011000"\))((_string \"00010010100000110101101100000001"\))((_string \"00100100001100011000010110111110"\))((_string \"01010101000011000111110111000011"\))((_string \"01110010101111100101110101110100"\))((_string \"10000000110111101011000111111110"\))((_string \"10011011110111000000011010100111"\))((_string \"11000001100110111111000101110100"\))((_string \"11100100100110110110100111000001"\))((_string \"11101111101111100100011110000110"\))((_string \"00001111110000011001110111000110"\))((_string \"00100100000011001010000111001100"\))((_string \"00101101111010010010110001101111"\))((_string \"01001010011101001000010010101010"\))((_string \"01011100101100001010100111011100"\))((_string \"01110110111110011000100011011010"\))((_string \"10011000001111100101000101010010"\))((_string \"10101000001100011100011001101101"\))((_string \"10110000000000110010011111001000"\))((_string \"10111111010110010111111111000111"\))((_string \"11000110111000000000101111110011"\))((_string \"11010101101001111001000101000111"\))((_string \"00000110110010100110001101010001"\))((_string \"00010100001010010010100101100111"\))((_string \"00100111101101110000101010000101"\))((_string \"00101110000110110010000100111000"\))((_string \"01001101001011000110110111111100"\))((_string \"01010011001110000000110100010011"\))((_string \"01100101000010100111001101010100"\))((_string \"01110110011010100000101010111011"\))((_string \"10000001110000101100100100101110"\))((_string \"10010010011100100010110010000101"\))((_string \"10100010101111111110100010100001"\))((_string \"10101000000110100110011001001011"\))((_string \"11000010010010111000101101110000"\))((_string \"11000111011011000101000110100011"\))((_string \"11010001100100101110100000011001"\))((_string \"11010110100110010000011000100100"\))((_string \"11110100000011100011010110000101"\))((_string \"00010000011010101010000001110000"\))((_string \"00011001101001001100000100010110"\))((_string \"00011110001101110110110000001000"\))((_string \"00100111010010000111011101001100"\))((_string \"00110100101100001011110010110101"\))((_string \"00111001000111000000110010110011"\))((_string \"01001110110110001010101001001010"\))((_string \"01011011100111001100101001001111"\))((_string \"01101000001011100110111111110011"\))((_string \"01110100100011111000001011101110"\))((_string \"01111000101001010110001101101111"\))((_string \"10000100110010000111100000010100"\))((_string \"10001100110001110000001000001000"\))((_string \"10010000101111101111111111111010"\))((_string \"10100100010100000110110011101011"\))((_string \"10111110111110011010001111110111"\))((_string \"11000110011100010111100011110010"\))))))
		(_sig(_int W -3 0 62(_arch(_uni(((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\)))))))
		(_sig(_int M -4 0 83(_arch(_uni))))
		(_sig(_int HV -5 0 85(_arch(_uni))))
		(_sig(_int HV_INITIAL_VALUES -5 0 86(_arch(_uni(((_string \"01101010000010011110011001100111"\))((_string \"10111011011001111010111010000101"\))((_string \"00111100011011101111001101110010"\))((_string \"10100101010011111111010100111010"\))((_string \"01010001000011100101001001111111"\))((_string \"10011011000001010110100010001100"\))((_string \"00011111100000111101100110101011"\))((_string \"01011011111000001100110100011001"\)))))))
		(_sig(_int M_INT -4 0 91(_arch(_uni))))
		(_sig(_int W_INT -3 0 94(_arch(_uni))))
		(_type(_int SHA_256_HASH_CORE_STATE 0 97(_enum1 RESET IDLE READ_MSG_BLOCK PREP_MSG_SCHEDULE_00 PREP_MSG_SCHEDULE_01 PREP_MSG_SCHEDULE_02 PREP_MSG_SCHEDULE_03 HASH_01 HASH_02 HASH_02b HASH_02c HASH_03 DONE (_to i 0 i 12))))
		(_sig(_int CURRENT_STATE 3 0 98(_arch(_uni)(_event))))
		(_sig(_int NEXT_STATE 3 0 98(_arch(_uni))))
		(_sig(_int PREVIOUS_STATE 3 0 99(_arch(_uni((i 2))))))
		(_type(_int ~INTEGER~range~0~to~15~13 0 263(_scalar (_to i 0 i 15))))
		(_type(_int ~INTEGER~range~0~to~15~135 0 270(_scalar (_to i 0 i 15))))
		(_type(_int ~INTEGER~range~16~to~63~13 0 276(_scalar (_to i 16 i 63))))
		(_prcs
			(line__104(_arch 0 0 104(_prcs(_trgt(26))(_sens(0)(1)(27))(_dssslsensitivity 2))))
			(line__116(_arch 1 0 116(_prcs(_simple)(_trgt(27))(_sens(7)(9)(26)(1)(2)(3))(_mon))))
			(line__181(_arch 2 0 181(_prcs(_trgt(7)(8)(9)(10)(11)(12)(13)(14)(15)(16)(17)(18)(19)(20(t_48_63))(20(t_32_47))(20(t_16_31))(20(t_0_15))(20)(21)(22(7))(22(6))(22(5))(22(4))(22(3))(22(2))(22(1))(22(0))(22))(_sens(26)(0)(1)(7)(9)(10)(11)(12)(13)(14)(15)(16)(17)(18)(19)(20)(21)(22)(23)(24)(25(t_48_63))(25(t_32_47))(25(t_16_31))(25(t_0_15))(3))(_dssslsensitivity 3))))
			(line__282(_arch 6 0 282(_assignment(_trgt(5))(_sens(26)))))
			(line__285(_arch 7 0 285(_assignment(_alias((data_out)(HV(0))(HV(1))(HV(2))(HV(3))(HV(4))(HV(5))(HV(6))(HV(7))))(_trgt(6))(_sens(22(7))(22(6))(22(5))(22(4))(22(3))(22(2))(22(1))(22(0))))))
		)
		(_subprogram
			(_ext SIGMA_UCASE_1(2 6))
			(_ext CH(2 3))
			(_ext SIGMA_UCASE_0(2 5))
			(_ext MAJ(2 4))
			(_ext SIGMA_LCASE_1(2 8))
			(_ext SIGMA_LCASE_0(2 7))
		)
		(_type(_ext ieee.std_logic_1164.STD_LOGIC(0 STD_LOGIC)))
		(_type(_ext std.standard.NATURAL(1 NATURAL)))
		(_var(_ext sha256.sha256_pkg.WORD_SIZE(2 WORD_SIZE)))
		(_type(_ext sha256.sha256_pkg.K_DATA(2 K_DATA)))
		(_type(_ext sha256.sha256_pkg.M_DATA(2 M_DATA)))
		(_type(_ext sha256.sha256_pkg.H_DATA(2 H_DATA)))
		(_type(_ext ieee.NUMERIC_STD.UNSIGNED(3 UNSIGNED)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1526(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1526)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1512(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1512)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1514(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1514)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1516(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1516)))
		(_type(_ext ieee.std_logic_1164.STD_LOGIC_VECTOR(0 STD_LOGIC_VECTOR)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1524(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1524)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1518(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1518)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1520(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1520)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1522(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1522)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1530(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1530)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1528(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1528)))
		(_type(_ext std.standard.INTEGER(1 INTEGER)))
	)
	(_use(ieee(std_logic_1164))(std(standard))(.(sha256_pkg))(ieee(NUMERIC_STD)))
	(_static
		(1702129221 1735289202 1635021600 1377854836 1598308677 1598509901 1129270338 75)
		(1702129221 1735289202 1635021600 1344300404 1599096146 1598509901 1162363731 1162630468 3158111)
		(1702129221 1735289202 1635021600 1344300404 1599096146 1598509901 1162363731 1162630468 3223647)
		(1702129221 1735289202 1635021600 1344300404 1599096146 1598509901 1162363731 1162630468 3289183)
		(1702129221 1735289202 1635021600 1344300404 1599096146 1598509901 1162363731 1162630468 3354719)
		(1702129221 1735289202 1635021600 1210082676 1598575425 12592)
		(1702129221 1735289202 1635021600 1210082676 1598575425 12848)
		(1702129221 1735289202 1635021600 1210082676 1598575425 13104)
		(1702129221 1735289202 1635021600 1210082676 1598575425 1113535024)
		(1702129221 1735289202 1635021600 1210082676 1598575425 1130312240)
		(1702129221 1735289202 1635021600 1142973812 4542031)
		(1702129221 1735289202 1635021600 1226859892 4541508)
	)
	(_model . sha256_ARCH 18 -1)
)
I 000049 55 4342          1705875559126 behavior
(_unit VHDL(sha256_tb 0 6(behavior 0 10))
	(_version vef)
	(_time 1705875559127 2024.01.21 17:19:19)
	(_source(\../src/sha256_testbench.vhd\))
	(_parameters tan)
	(_code fef1afaea3a9abedfaf9eba1a9fba8f9faf8fcf9fd)
	(_ent
		(_time 1705867572661)
	)
	(_comp
		(sha256
			(_object
				(_gen(_int RESET_VALUE -1 0 15(_ent((i 2)))))
				(_port(_int clk -1 0 18(_ent (_in))))
				(_port(_int rst -1 0 19(_ent (_in))))
				(_port(_int data_ready -1 0 20(_ent (_in))))
				(_port(_int n_blocks -2 0 21(_ent (_in))))
				(_port(_int msg_block_in 0 0 22(_ent (_in))))
				(_port(_int finished -1 0 23(_ent (_out))))
				(_port(_int data_out 1 0 24(_ent (_out))))
			)
		)
	)
	(_inst uut 0 48(_comp sha256)
		(_gen
			((RESET_VALUE)((i 2)))
		)
		(_port
			((clk)(clk))
			((rst)(rst))
			((data_ready)(data_ready))
			((n_blocks)(n_blocks))
			((msg_block_in)(msg_block_in))
			((finished)(finished))
			((data_out)(data_out))
		)
		(_use(_ent . sha256)
			(_gen
				((RESET_VALUE)((i 2)))
			)
		)
	)
	(_object
		(_type(_int ~STD_LOGIC_VECTOR{0~to~{16*WORD_SIZE}-1}~13 0 22(_array -1((_to i 0 i 511)))))
		(_type(_int ~STD_LOGIC_VECTOR{{WORD_SIZE*8}-1~downto~0}~13 0 24(_array -1((_dto i 255 i 0)))))
		(_cnst(_int WORD_SIZE -2 0 29(_arch((i 32)))))
		(_sig(_int clk -1 0 32(_arch(_uni((i 2))))))
		(_sig(_int rst -1 0 33(_arch(_uni((i 2))))))
		(_sig(_int data_ready -1 0 34(_arch(_uni((i 2))))))
		(_sig(_int n_blocks -2 0 35(_arch(_uni((i 0))))))
		(_type(_int ~STD_LOGIC_VECTOR{0~to~{16*WORD_SIZE}-1}~132 0 36(_array -1((_to i 0 i 511)))))
		(_sig(_int msg_block_in 2 0 36(_arch(_uni((_others(i 2)))))))
		(_sig(_int finished -1 0 39(_arch(_uni))))
		(_type(_int ~STD_LOGIC_VECTOR{{WORD_SIZE*8}-1~downto~0}~134 0 40(_array -1((_dto i 255 i 0)))))
		(_sig(_int data_out 3 0 40(_arch(_uni))))
		(_cnst(_int clk_period -3 0 43(_arch((ns 4621819117588971520)))))
		(_cnst(_int \clk_period/2\ -3 0 0(_int gms(_code 2))))
		(_prcs
			(clk_process(_arch 0 0 63(_prcs(_wait_for)(_trgt(0)))))
			(stim_proc(_arch 1 0 72(_prcs(_wait_for)(_trgt(1)(2)(3)(4))(_sens(5))(_mon)(_read(6)))))
		)
		(_type(_ext ieee.std_logic_1164.STD_LOGIC(0 STD_LOGIC)))
		(_type(_ext std.standard.NATURAL(1 NATURAL)))
		(_var(_ext sha256.sha256_pkg.WORD_SIZE(2 WORD_SIZE)))
		(_type(_ext std.standard.TIME(1 TIME)))
	)
	(_use(ieee(std_logic_1164))(std(standard))(.(sha256_pkg))(ieee(NUMERIC_STD)))
	(_static
		
		
		(1752392008 1668180256 1701999215 1881175139 544372079 1981833580 1969581153 1650532466 99)
		(1752392008 1953459744 1852401184 1701344105 100)
	)
	(_model . behavior 3 -1)
)
I 000049 55 4342          1705875586100 behavior
(_unit VHDL(sha256_tb 0 6(behavior 0 10))
	(_version vef)
	(_time 1705875586101 2024.01.21 17:19:46)
	(_source(\../src/sha256_testbench.vhd\))
	(_parameters tan)
	(_code 570651545800024453524208005201505351555054)
	(_ent
		(_time 1705867572661)
	)
	(_comp
		(sha256
			(_object
				(_gen(_int RESET_VALUE -1 0 15(_ent((i 2)))))
				(_port(_int clk -1 0 18(_ent (_in))))
				(_port(_int rst -1 0 19(_ent (_in))))
				(_port(_int data_ready -1 0 20(_ent (_in))))
				(_port(_int n_blocks -2 0 21(_ent (_in))))
				(_port(_int msg_block_in 0 0 22(_ent (_in))))
				(_port(_int finished -1 0 23(_ent (_out))))
				(_port(_int data_out 1 0 24(_ent (_out))))
			)
		)
	)
	(_inst uut 0 48(_comp sha256)
		(_gen
			((RESET_VALUE)((i 2)))
		)
		(_port
			((clk)(clk))
			((rst)(rst))
			((data_ready)(data_ready))
			((n_blocks)(n_blocks))
			((msg_block_in)(msg_block_in))
			((finished)(finished))
			((data_out)(data_out))
		)
		(_use(_ent . sha256)
			(_gen
				((RESET_VALUE)((i 2)))
			)
		)
	)
	(_object
		(_type(_int ~STD_LOGIC_VECTOR{0~to~{16*WORD_SIZE}-1}~13 0 22(_array -1((_to i 0 i 511)))))
		(_type(_int ~STD_LOGIC_VECTOR{{WORD_SIZE*8}-1~downto~0}~13 0 24(_array -1((_dto i 255 i 0)))))
		(_cnst(_int WORD_SIZE -2 0 29(_arch((i 32)))))
		(_sig(_int clk -1 0 32(_arch(_uni((i 2))))))
		(_sig(_int rst -1 0 33(_arch(_uni((i 2))))))
		(_sig(_int data_ready -1 0 34(_arch(_uni((i 2))))))
		(_sig(_int n_blocks -2 0 35(_arch(_uni((i 0))))))
		(_type(_int ~STD_LOGIC_VECTOR{0~to~{16*WORD_SIZE}-1}~132 0 36(_array -1((_to i 0 i 511)))))
		(_sig(_int msg_block_in 2 0 36(_arch(_uni((_others(i 2)))))))
		(_sig(_int finished -1 0 39(_arch(_uni))))
		(_type(_int ~STD_LOGIC_VECTOR{{WORD_SIZE*8}-1~downto~0}~134 0 40(_array -1((_dto i 255 i 0)))))
		(_sig(_int data_out 3 0 40(_arch(_uni))))
		(_cnst(_int clk_period -3 0 43(_arch((ns 4621819117588971520)))))
		(_cnst(_int \clk_period/2\ -3 0 0(_int gms(_code 2))))
		(_prcs
			(clk_process(_arch 0 0 63(_prcs(_wait_for)(_trgt(0)))))
			(stim_proc(_arch 1 0 72(_prcs(_wait_for)(_trgt(1)(2)(3)(4))(_sens(5))(_mon)(_read(6)))))
		)
		(_type(_ext ieee.std_logic_1164.STD_LOGIC(0 STD_LOGIC)))
		(_type(_ext std.standard.NATURAL(1 NATURAL)))
		(_var(_ext sha256.sha256_pkg.WORD_SIZE(2 WORD_SIZE)))
		(_type(_ext std.standard.TIME(1 TIME)))
	)
	(_use(ieee(std_logic_1164))(std(standard))(.(sha256_pkg))(ieee(NUMERIC_STD)))
	(_static
		(33751810 50463234 33751810 33751554 33751810 50528770 33686019 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 33686018 50463234 33686019)
		
		(1752392008 1668180256 1701999215 1881175139 544372079 1981833580 1969581153 1650532466 99)
		(1752392008 1953459744 1852401184 1701344105 100)
	)
	(_model . behavior 3 -1)
)
I 000049 55 4342          1705875651823 behavior
(_unit VHDL(sha256_tb 0 6(behavior 0 10))
	(_version vef)
	(_time 1705875651824 2024.01.21 17:20:51)
	(_source(\../src/sha256_testbench.vhd\))
	(_parameters tan)
	(_code 0e5f0b0853595b1d0a0a1b51590b58090a080c090d)
	(_ent
		(_time 1705867572661)
	)
	(_comp
		(sha256
			(_object
				(_gen(_int RESET_VALUE -1 0 15(_ent((i 2)))))
				(_port(_int clk -1 0 18(_ent (_in))))
				(_port(_int rst -1 0 19(_ent (_in))))
				(_port(_int data_ready -1 0 20(_ent (_in))))
				(_port(_int n_blocks -2 0 21(_ent (_in))))
				(_port(_int msg_block_in 0 0 22(_ent (_in))))
				(_port(_int finished -1 0 23(_ent (_out))))
				(_port(_int data_out 1 0 24(_ent (_out))))
			)
		)
	)
	(_inst uut 0 48(_comp sha256)
		(_gen
			((RESET_VALUE)((i 2)))
		)
		(_port
			((clk)(clk))
			((rst)(rst))
			((data_ready)(data_ready))
			((n_blocks)(n_blocks))
			((msg_block_in)(msg_block_in))
			((finished)(finished))
			((data_out)(data_out))
		)
		(_use(_ent . sha256)
			(_gen
				((RESET_VALUE)((i 2)))
			)
		)
	)
	(_object
		(_type(_int ~STD_LOGIC_VECTOR{0~to~{16*WORD_SIZE}-1}~13 0 22(_array -1((_to i 0 i 511)))))
		(_type(_int ~STD_LOGIC_VECTOR{{WORD_SIZE*8}-1~downto~0}~13 0 24(_array -1((_dto i 255 i 0)))))
		(_cnst(_int WORD_SIZE -2 0 29(_arch((i 32)))))
		(_sig(_int clk -1 0 32(_arch(_uni((i 2))))))
		(_sig(_int rst -1 0 33(_arch(_uni((i 2))))))
		(_sig(_int data_ready -1 0 34(_arch(_uni((i 2))))))
		(_sig(_int n_blocks -2 0 35(_arch(_uni((i 0))))))
		(_type(_int ~STD_LOGIC_VECTOR{0~to~{16*WORD_SIZE}-1}~132 0 36(_array -1((_to i 0 i 511)))))
		(_sig(_int msg_block_in 2 0 36(_arch(_uni((_others(i 2)))))))
		(_sig(_int finished -1 0 39(_arch(_uni))))
		(_type(_int ~STD_LOGIC_VECTOR{{WORD_SIZE*8}-1~downto~0}~134 0 40(_array -1((_dto i 255 i 0)))))
		(_sig(_int data_out 3 0 40(_arch(_uni))))
		(_cnst(_int clk_period -3 0 43(_arch((ns 4621819117588971520)))))
		(_cnst(_int \clk_period/2\ -3 0 0(_int gms(_code 2))))
		(_prcs
			(clk_process(_arch 0 0 63(_prcs(_wait_for)(_trgt(0)))))
			(stim_proc(_arch 1 0 72(_prcs(_wait_for)(_trgt(1)(2)(3)(4))(_sens(5))(_mon)(_read(6)))))
		)
		(_type(_ext ieee.std_logic_1164.STD_LOGIC(0 STD_LOGIC)))
		(_type(_ext std.standard.NATURAL(1 NATURAL)))
		(_var(_ext sha256.sha256_pkg.WORD_SIZE(2 WORD_SIZE)))
		(_type(_ext std.standard.TIME(1 TIME)))
	)
	(_use(ieee(std_logic_1164))(std(standard))(.(sha256_pkg))(ieee(NUMERIC_STD)))
	(_static
		
		(50528771 33751555 50529026 33686019 50463234 33751810 50528771 50529027 33686019 50529027 33686018 50463234 33686275 50529027 33751811 33751555 33686274 50463234 33686274 33686018 50463491 33751811 50463490 50463491 33751555 33751811 33751554 33751554 33751554 50528770 50528771 33686018 33686018 50528770 33751810 50463234 33751555 50528770 50463235 33751810 50463234 50529026 50529026 33751555 50463235 33686275 50528771 33686274 50463234 33686018 50529027 50529027 33751810 50463234 50529027 33751554 33686018 33686018 50463234 50463490 33751555 50463491)
		(1752392008 1668180256 1701999215 1881175139 544372079 1981833580 1969581153 1650532466 99)
		(1752392008 1953459744 1852401184 1701344105 100)
	)
	(_model . behavior 3 -1)
)
V 000052 55 13820         1705875761568 sha256_ARCH
(_unit VHDL(sha256 0 6(sha256_arch 0 22))
	(_version vef)
	(_time 1705875761569 2024.01.21 17:22:41)
	(_source(\../src/sha256.vhd\))
	(_parameters tan)
	(_code c492c591c89391d7c6c6c092d29f96c2ccc2c5c7c6c7c1)
	(_ent
		(_time 1705867572636)
	)
	(_generate MESSAGE_BLOCK_INTERMEDIATE 0 262(_for 4 )
		(_object
			(_cnst(_int i 4 0 263(_arch)))
			(_prcs
				(line__266(_arch 3 0 266(_assignment(_trgt(24(_object 3)))(_sens(4(_range 8)))(_read(4(_range 9))))))
			)
		)
	)
	(_generate MESSAGE_SCHEDULE_INTERMEDIATE_00 0 269(_for 5 )
		(_object
			(_cnst(_int i 5 0 270(_arch)))
			(_prcs
				(line__272(_arch 4 0 272(_assignment(_trgt(25(_object 4)))(_sens(21(_object 4)))(_read(21(_object 4))))))
			)
		)
	)
	(_generate MESSAGE_SCHEDULE_INTERMEDIATE_01 0 275(_for 6 )
		(_object
			(_cnst(_int i 6 0 276(_arch)))
			(_prcs
				(line__278(_arch 5 0 278(_assignment(_trgt(25(_object 5)))(_sens(25(_index 10))(25(_index 11))(25(_index 12))(25(_index 13)))(_read(25(_index 14))(25(_index 15))(25(_index 16))(25(_index 17))))))
			)
		)
	)
	(_object
		(_gen(_int RESET_VALUE -1 0 8 \'0'\ (_ent gms((i 2)))))
		(_port(_int clk -1 0 11(_ent(_in)(_event))))
		(_port(_int rst -1 0 12(_ent(_in)(_event))))
		(_port(_int data_ready -1 0 13(_ent(_in))))
		(_port(_int n_blocks -2 0 14(_ent(_in))))
		(_type(_int ~STD_LOGIC_VECTOR{0~to~{16*WORD_SIZE}-1}~12 0 15(_array -1((_to i 0 i 511)))))
		(_port(_int msg_block_in 0 0 15(_ent(_in))))
		(_port(_int finished -1 0 17(_ent(_out))))
		(_type(_int ~STD_LOGIC_VECTOR{{WORD_SIZE*8}-1~downto~0}~12 0 18(_array -1((_dto i 255 i 0)))))
		(_port(_int data_out 1 0 18(_ent(_out))))
		(_sig(_int HASH_ROUND_COUNTER -2 0 23(_arch(_uni((i 0))))))
		(_sig(_int MSG_BLOCK_COUNTER -2 0 24(_arch(_uni((i 0))))))
		(_sig(_int HASH_02_COUNTER -2 0 25(_arch(_uni((i 0))))))
		(_cnst(_int HASH_02_COUNT_LIMIT -2 0 26(_arch((i 64)))))
		(_type(_int ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~13 0 29(_array -1((_dto i 31 i 0)))))
		(_sig(_int T1 2 0 29(_arch(_uni((_others(i 2)))))))
		(_sig(_int T2 2 0 30(_arch(_uni((_others(i 2)))))))
		(_sig(_int a 2 0 33(_arch(_uni((_others(i 2)))))))
		(_sig(_int b 2 0 34(_arch(_uni((_others(i 2)))))))
		(_sig(_int c 2 0 35(_arch(_uni((_others(i 2)))))))
		(_sig(_int d 2 0 36(_arch(_uni((_others(i 2)))))))
		(_sig(_int e 2 0 37(_arch(_uni((_others(i 2)))))))
		(_sig(_int f 2 0 38(_arch(_uni((_others(i 2)))))))
		(_sig(_int g 2 0 39(_arch(_uni((_others(i 2)))))))
		(_sig(_int h 2 0 40(_arch(_uni((_others(i 2)))))))
		(_cnst(_int K -3 0 42(_arch(((_string \"01000010100010100010111110011000"\))((_string \"01110001001101110100010010010001"\))((_string \"10110101110000001111101111001111"\))((_string \"11101001101101011101101110100101"\))((_string \"00111001010101101100001001011011"\))((_string \"01011001111100010001000111110001"\))((_string \"10010010001111111000001010100100"\))((_string \"10101011000111000101111011010101"\))((_string \"11011000000001111010101010011000"\))((_string \"00010010100000110101101100000001"\))((_string \"00100100001100011000010110111110"\))((_string \"01010101000011000111110111000011"\))((_string \"01110010101111100101110101110100"\))((_string \"10000000110111101011000111111110"\))((_string \"10011011110111000000011010100111"\))((_string \"11000001100110111111000101110100"\))((_string \"11100100100110110110100111000001"\))((_string \"11101111101111100100011110000110"\))((_string \"00001111110000011001110111000110"\))((_string \"00100100000011001010000111001100"\))((_string \"00101101111010010010110001101111"\))((_string \"01001010011101001000010010101010"\))((_string \"01011100101100001010100111011100"\))((_string \"01110110111110011000100011011010"\))((_string \"10011000001111100101000101010010"\))((_string \"10101000001100011100011001101101"\))((_string \"10110000000000110010011111001000"\))((_string \"10111111010110010111111111000111"\))((_string \"11000110111000000000101111110011"\))((_string \"11010101101001111001000101000111"\))((_string \"00000110110010100110001101010001"\))((_string \"00010100001010010010100101100111"\))((_string \"00100111101101110000101010000101"\))((_string \"00101110000110110010000100111000"\))((_string \"01001101001011000110110111111100"\))((_string \"01010011001110000000110100010011"\))((_string \"01100101000010100111001101010100"\))((_string \"01110110011010100000101010111011"\))((_string \"10000001110000101100100100101110"\))((_string \"10010010011100100010110010000101"\))((_string \"10100010101111111110100010100001"\))((_string \"10101000000110100110011001001011"\))((_string \"11000010010010111000101101110000"\))((_string \"11000111011011000101000110100011"\))((_string \"11010001100100101110100000011001"\))((_string \"11010110100110010000011000100100"\))((_string \"11110100000011100011010110000101"\))((_string \"00010000011010101010000001110000"\))((_string \"00011001101001001100000100010110"\))((_string \"00011110001101110110110000001000"\))((_string \"00100111010010000111011101001100"\))((_string \"00110100101100001011110010110101"\))((_string \"00111001000111000000110010110011"\))((_string \"01001110110110001010101001001010"\))((_string \"01011011100111001100101001001111"\))((_string \"01101000001011100110111111110011"\))((_string \"01110100100011111000001011101110"\))((_string \"01111000101001010110001101101111"\))((_string \"10000100110010000111100000010100"\))((_string \"10001100110001110000001000001000"\))((_string \"10010000101111101111111111111010"\))((_string \"10100100010100000110110011101011"\))((_string \"10111110111110011010001111110111"\))((_string \"11000110011100010111100011110010"\))))))
		(_sig(_int W -3 0 62(_arch(_uni(((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\))((_string \"00000000000000000000000000000000"\)))))))
		(_sig(_int M -4 0 83(_arch(_uni))))
		(_sig(_int HV -5 0 85(_arch(_uni))))
		(_sig(_int HV_INITIAL_VALUES -5 0 86(_arch(_uni(((_string \"01101010000010011110011001100111"\))((_string \"10111011011001111010111010000101"\))((_string \"00111100011011101111001101110010"\))((_string \"10100101010011111111010100111010"\))((_string \"01010001000011100101001001111111"\))((_string \"10011011000001010110100010001100"\))((_string \"00011111100000111101100110101011"\))((_string \"01011011111000001100110100011001"\)))))))
		(_sig(_int M_INT -4 0 91(_arch(_uni))))
		(_sig(_int W_INT -3 0 94(_arch(_uni))))
		(_type(_int SHA_256_HASH_CORE_STATE 0 97(_enum1 RESET IDLE READ_MSG_BLOCK PREP_MSG_SCHEDULE_00 PREP_MSG_SCHEDULE_01 PREP_MSG_SCHEDULE_02 PREP_MSG_SCHEDULE_03 HASH_01 HASH_02 HASH_02b HASH_02c HASH_03 DONE (_to i 0 i 12))))
		(_sig(_int CURRENT_STATE 3 0 98(_arch(_uni)(_event))))
		(_sig(_int NEXT_STATE 3 0 98(_arch(_uni))))
		(_sig(_int PREVIOUS_STATE 3 0 99(_arch(_uni((i 2))))))
		(_type(_int ~INTEGER~range~0~to~15~13 0 263(_scalar (_to i 0 i 15))))
		(_type(_int ~INTEGER~range~0~to~15~135 0 270(_scalar (_to i 0 i 15))))
		(_type(_int ~INTEGER~range~16~to~63~13 0 276(_scalar (_to i 16 i 63))))
		(_prcs
			(line__104(_arch 0 0 104(_prcs(_trgt(26))(_sens(0)(1)(27))(_dssslsensitivity 2))))
			(line__116(_arch 1 0 116(_prcs(_simple)(_trgt(27))(_sens(7)(9)(26)(1)(2)(3))(_mon))))
			(line__181(_arch 2 0 181(_prcs(_trgt(7)(8)(9)(10)(11)(12)(13)(14)(15)(16)(17)(18)(19)(20(t_48_63))(20(t_32_47))(20(t_16_31))(20(t_0_15))(20)(21)(22(7))(22(6))(22(5))(22(4))(22(3))(22(2))(22(1))(22(0))(22))(_sens(26)(0)(1)(7)(9)(10)(11)(12)(13)(14)(15)(16)(17)(18)(19)(20)(21)(22)(23)(24)(25(t_48_63))(25(t_32_47))(25(t_16_31))(25(t_0_15))(3))(_dssslsensitivity 3))))
			(line__282(_arch 6 0 282(_assignment(_trgt(5))(_sens(26)))))
			(line__285(_arch 7 0 285(_assignment(_alias((data_out)(HV(0))(HV(1))(HV(2))(HV(3))(HV(4))(HV(5))(HV(6))(HV(7))))(_trgt(6))(_sens(22(7))(22(6))(22(5))(22(4))(22(3))(22(2))(22(1))(22(0))))))
		)
		(_subprogram
			(_ext SIGMA_UCASE_1(2 6))
			(_ext CH(2 3))
			(_ext SIGMA_UCASE_0(2 5))
			(_ext MAJ(2 4))
			(_ext SIGMA_LCASE_1(2 8))
			(_ext SIGMA_LCASE_0(2 7))
		)
		(_type(_ext ieee.std_logic_1164.STD_LOGIC(0 STD_LOGIC)))
		(_type(_ext std.standard.NATURAL(1 NATURAL)))
		(_var(_ext sha256.sha256_pkg.WORD_SIZE(2 WORD_SIZE)))
		(_type(_ext sha256.sha256_pkg.K_DATA(2 K_DATA)))
		(_type(_ext sha256.sha256_pkg.M_DATA(2 M_DATA)))
		(_type(_ext sha256.sha256_pkg.H_DATA(2 H_DATA)))
		(_type(_ext ieee.NUMERIC_STD.UNSIGNED(3 UNSIGNED)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1526(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1526)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1512(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1512)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1514(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1514)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1516(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1516)))
		(_type(_ext ieee.std_logic_1164.STD_LOGIC_VECTOR(0 STD_LOGIC_VECTOR)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1524(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1524)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1518(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1518)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1520(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1520)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1522(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1522)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1530(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1530)))
		(_type(_ext sha256.sha256_pkg.STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1528(2 ~STD_LOGIC_VECTOR{WORD_SIZE-1~downto~0}~1528)))
		(_type(_ext std.standard.INTEGER(1 INTEGER)))
	)
	(_use(ieee(std_logic_1164))(std(standard))(.(sha256_pkg))(ieee(NUMERIC_STD)))
	(_static
		(1702129221 1735289202 1635021600 1377854836 1598308677 1598509901 1129270338 75)
		(1702129221 1735289202 1635021600 1226859892 4541508)
		(1702129221 1735289202 1635021600 1344300404 1599096146 1598509901 1162363731 1162630468 3158111)
		(1702129221 1735289202 1635021600 1344300404 1599096146 1598509901 1162363731 1162630468 3223647)
		(1702129221 1735289202 1635021600 1344300404 1599096146 1598509901 1162363731 1162630468 3289183)
		(1702129221 1735289202 1635021600 1344300404 1599096146 1598509901 1162363731 1162630468 3354719)
		(1702129221 1735289202 1635021600 1210082676 1598575425 12592)
		(1702129221 1735289202 1635021600 1210082676 1598575425 12848)
		(1702129221 1735289202 1635021600 1210082676 1598575425 13104)
		(1702129221 1735289202 1635021600 1210082676 1598575425 1113535024)
		(1702129221 1735289202 1635021600 1210082676 1598575425 1130312240)
		(1702129221 1735289202 1635021600 1142973812 4542031)
	)
	(_model . sha256_ARCH 18 -1)
)
I 000049 55 4342          1705875761581 behavior
(_unit VHDL(sha256_tb 0 6(behavior 0 10))
	(_version vef)
	(_time 1705875761582 2024.01.21 17:22:41)
	(_source(\../src/sha256_testbench.vhd\))
	(_parameters tan)
	(_code d482d586d88381c7d0d4c18b83d182d3d0d2d6d3d7)
	(_ent
		(_time 1705867572661)
	)
	(_comp
		(sha256
			(_object
				(_gen(_int RESET_VALUE -1 0 15(_ent((i 2)))))
				(_port(_int clk -1 0 18(_ent (_in))))
				(_port(_int rst -1 0 19(_ent (_in))))
				(_port(_int data_ready -1 0 20(_ent (_in))))
				(_port(_int n_blocks -2 0 21(_ent (_in))))
				(_port(_int msg_block_in 0 0 22(_ent (_in))))
				(_port(_int finished -1 0 23(_ent (_out))))
				(_port(_int data_out 1 0 24(_ent (_out))))
			)
		)
	)
	(_inst uut 0 48(_comp sha256)
		(_gen
			((RESET_VALUE)((i 2)))
		)
		(_port
			((clk)(clk))
			((rst)(rst))
			((data_ready)(data_ready))
			((n_blocks)(n_blocks))
			((msg_block_in)(msg_block_in))
			((finished)(finished))
			((data_out)(data_out))
		)
		(_use(_ent . sha256)
			(_gen
				((RESET_VALUE)((i 2)))
			)
		)
	)
	(_object
		(_type(_int ~STD_LOGIC_VECTOR{0~to~{16*WORD_SIZE}-1}~13 0 22(_array -1((_to i 0 i 511)))))
		(_type(_int ~STD_LOGIC_VECTOR{{WORD_SIZE*8}-1~downto~0}~13 0 24(_array -1((_dto i 255 i 0)))))
		(_cnst(_int WORD_SIZE -2 0 29(_arch((i 32)))))
		(_sig(_int clk -1 0 32(_arch(_uni((i 2))))))
		(_sig(_int rst -1 0 33(_arch(_uni((i 2))))))
		(_sig(_int data_ready -1 0 34(_arch(_uni((i 2))))))
		(_sig(_int n_blocks -2 0 35(_arch(_uni((i 0))))))
		(_type(_int ~STD_LOGIC_VECTOR{0~to~{16*WORD_SIZE}-1}~132 0 36(_array -1((_to i 0 i 511)))))
		(_sig(_int msg_block_in 2 0 36(_arch(_uni((_others(i 2)))))))
		(_sig(_int finished -1 0 39(_arch(_uni))))
		(_type(_int ~STD_LOGIC_VECTOR{{WORD_SIZE*8}-1~downto~0}~134 0 40(_array -1((_dto i 255 i 0)))))
		(_sig(_int data_out 3 0 40(_arch(_uni))))
		(_cnst(_int clk_period -3 0 43(_arch((ns 4621819117588971520)))))
		(_cnst(_int \clk_period/2\ -3 0 0(_int gms(_code 2))))
		(_prcs
			(clk_process(_arch 0 0 63(_prcs(_wait_for)(_trgt(0)))))
			(stim_proc(_arch 1 0 72(_prcs(_wait_for)(_trgt(1)(2)(3)(4))(_sens(5))(_mon)(_read(6)))))
		)
		(_type(_ext ieee.std_logic_1164.STD_LOGIC(0 STD_LOGIC)))
		(_type(_ext std.standard.NATURAL(1 NATURAL)))
		(_var(_ext sha256.sha256_pkg.WORD_SIZE(2 WORD_SIZE)))
		(_type(_ext std.standard.TIME(1 TIME)))
	)
	(_use(ieee(std_logic_1164))(std(standard))(.(sha256_pkg))(ieee(NUMERIC_STD)))
	(_static
		
		
		(1752392008 1668180256 1701999215 1881175139 544372079 1981833580 1969581153 1650532466 99)
		(1752392008 1953459744 1852401184 1701344105 100)
	)
	(_model . behavior 3 -1)
)
I 000049 55 4335          1705875815599 behavior
(_unit VHDL(sha256_tb 0 6(behavior 0 10))
	(_version vef)
	(_time 1705875815600 2024.01.21 17:23:35)
	(_source(\../src/sha256_testbench.vhd\))
	(_parameters tan)
	(_code d3d3d581d88486c0d7d2c68c84d685d4d7d5d1d4d0)
	(_ent
		(_time 1705867572661)
	)
	(_comp
		(sha256
			(_object
				(_gen(_int RESET_VALUE -1 0 15(_ent((i 2)))))
				(_port(_int clk -1 0 18(_ent (_in))))
				(_port(_int rst -1 0 19(_ent (_in))))
				(_port(_int data_ready -1 0 20(_ent (_in))))
				(_port(_int n_blocks -2 0 21(_ent (_in))))
				(_port(_int msg_block_in 0 0 22(_ent (_in))))
				(_port(_int finished -1 0 23(_ent (_out))))
				(_port(_int data_out 1 0 24(_ent (_out))))
			)
		)
	)
	(_inst uut 0 48(_comp sha256)
		(_gen
			((RESET_VALUE)((i 2)))
		)
		(_port
			((clk)(clk))
			((rst)(rst))
			((data_ready)(data_ready))
			((n_blocks)(n_blocks))
			((msg_block_in)(msg_block_in))
			((finished)(finished))
			((data_out)(data_out))
		)
		(_use(_ent . sha256)
			(_gen
				((RESET_VALUE)((i 2)))
			)
		)
	)
	(_object
		(_type(_int ~STD_LOGIC_VECTOR{0~to~{16*WORD_SIZE}-1}~13 0 22(_array -1((_to i 0 i 511)))))
		(_type(_int ~STD_LOGIC_VECTOR{{WORD_SIZE*8}-1~downto~0}~13 0 24(_array -1((_dto i 255 i 0)))))
		(_cnst(_int WORD_SIZE -2 0 29(_arch((i 32)))))
		(_sig(_int clk -1 0 32(_arch(_uni((i 2))))))
		(_sig(_int rst -1 0 33(_arch(_uni((i 2))))))
		(_sig(_int data_ready -1 0 34(_arch(_uni((i 2))))))
		(_sig(_int n_blocks -2 0 35(_arch(_uni((i 0))))))
		(_type(_int ~STD_LOGIC_VECTOR{0~to~{16*WORD_SIZE}-1}~132 0 36(_array -1((_to i 0 i 511)))))
		(_sig(_int msg_block_in 2 0 36(_arch(_uni((_others(i 2)))))))
		(_sig(_int finished -1 0 39(_arch(_uni))))
		(_type(_int ~STD_LOGIC_VECTOR{{WORD_SIZE*8}-1~downto~0}~134 0 40(_array -1((_dto i 255 i 0)))))
		(_sig(_int data_out 3 0 40(_arch(_uni))))
		(_cnst(_int clk_period -3 0 43(_arch((ns 4621819117588971520)))))
		(_cnst(_int \clk_period/2\ -3 0 0(_int gms(_code 2))))
		(_prcs
			(clk_process(_arch 0 0 63(_prcs(_wait_for)(_trgt(0)))))
			(stim_proc(_arch 1 0 72(_prcs(_wait_for)(_trgt(1)(2)(3)(4))(_mon)(_read(5)(6)))))
		)
		(_type(_ext ieee.std_logic_1164.STD_LOGIC(0 STD_LOGIC)))
		(_type(_ext std.standard.NATURAL(1 NATURAL)))
		(_var(_ext sha256.sha256_pkg.WORD_SIZE(2 WORD_SIZE)))
		(_type(_ext std.standard.TIME(1 TIME)))
	)
	(_use(ieee(std_logic_1164))(std(standard))(.(sha256_pkg))(ieee(NUMERIC_STD)))
	(_static
		
		
		(1752392008 1668180256 1701999215 1881175139 544372079 1981833580 1969581153 1650532466 99)
		(1752392008 1953459744 1852401184 1701344105 100)
	)
	(_model . behavior 3 -1)
)
I 000049 55 4335          1705875891298 behavior
(_unit VHDL(sha256_tb 0 6(behavior 0 10))
	(_version vef)
	(_time 1705875891299 2024.01.21 17:24:51)
	(_source(\../src/sha256_testbench.vhd\))
	(_parameters tan)
	(_code 7b752c7a212c2e687f7a6e242c7e2d7c7f7d797c78)
	(_ent
		(_time 1705867572661)
	)
	(_comp
		(sha256
			(_object
				(_gen(_int RESET_VALUE -1 0 15(_ent((i 2)))))
				(_port(_int clk -1 0 18(_ent (_in))))
				(_port(_int rst -1 0 19(_ent (_in))))
				(_port(_int data_ready -1 0 20(_ent (_in))))
				(_port(_int n_blocks -2 0 21(_ent (_in))))
				(_port(_int msg_block_in 0 0 22(_ent (_in))))
				(_port(_int finished -1 0 23(_ent (_out))))
				(_port(_int data_out 1 0 24(_ent (_out))))
			)
		)
	)
	(_inst uut 0 48(_comp sha256)
		(_gen
			((RESET_VALUE)((i 2)))
		)
		(_port
			((clk)(clk))
			((rst)(rst))
			((data_ready)(data_ready))
			((n_blocks)(n_blocks))
			((msg_block_in)(msg_block_in))
			((finished)(finished))
			((data_out)(data_out))
		)
		(_use(_ent . sha256)
			(_gen
				((RESET_VALUE)((i 2)))
			)
		)
	)
	(_object
		(_type(_int ~STD_LOGIC_VECTOR{0~to~{16*WORD_SIZE}-1}~13 0 22(_array -1((_to i 0 i 511)))))
		(_type(_int ~STD_LOGIC_VECTOR{{WORD_SIZE*8}-1~downto~0}~13 0 24(_array -1((_dto i 255 i 0)))))
		(_cnst(_int WORD_SIZE -2 0 29(_arch((i 32)))))
		(_sig(_int clk -1 0 32(_arch(_uni((i 2))))))
		(_sig(_int rst -1 0 33(_arch(_uni((i 2))))))
		(_sig(_int data_ready -1 0 34(_arch(_uni((i 2))))))
		(_sig(_int n_blocks -2 0 35(_arch(_uni((i 0))))))
		(_type(_int ~STD_LOGIC_VECTOR{0~to~{16*WORD_SIZE}-1}~132 0 36(_array -1((_to i 0 i 511)))))
		(_sig(_int msg_block_in 2 0 36(_arch(_uni((_others(i 2)))))))
		(_sig(_int finished -1 0 39(_arch(_uni))))
		(_type(_int ~STD_LOGIC_VECTOR{{WORD_SIZE*8}-1~downto~0}~134 0 40(_array -1((_dto i 255 i 0)))))
		(_sig(_int data_out 3 0 40(_arch(_uni))))
		(_cnst(_int clk_period -3 0 43(_arch((ns 4621819117588971520)))))
		(_cnst(_int \clk_period/2\ -3 0 0(_int gms(_code 2))))
		(_prcs
			(clk_process(_arch 0 0 63(_prcs(_wait_for)(_trgt(0)))))
			(stim_proc(_arch 1 0 72(_prcs(_wait_for)(_trgt(1)(2)(3)(4))(_mon)(_read(5)(6)))))
		)
		(_type(_ext ieee.std_logic_1164.STD_LOGIC(0 STD_LOGIC)))
		(_type(_ext std.standard.NATURAL(1 NATURAL)))
		(_var(_ext sha256.sha256_pkg.WORD_SIZE(2 WORD_SIZE)))
		(_type(_ext std.standard.TIME(1 TIME)))
	)
	(_use(ieee(std_logic_1164))(std(standard))(.(sha256_pkg))(ieee(NUMERIC_STD)))
	(_static
		
		
		(1752392008 1668180256 1701999215 1881175139 544372079 1981833580 1969581153 1650532466 99)
		(1752392008 1953459744 1852401184 1701344105 100)
	)
	(_model . behavior 3 -1)
)
I 000049 55 4335          1705876016336 behavior
(_unit VHDL(sha256_tb 0 6(behavior 0 10))
	(_version vef)
	(_time 1705876016337 2024.01.21 17:26:56)
	(_source(\../src/sha256_testbench.vhd\))
	(_parameters tan)
	(_code 010e0407085654120507145e560457060507030602)
	(_ent
		(_time 1705867572661)
	)
	(_comp
		(sha256
			(_object
				(_gen(_int RESET_VALUE -1 0 15(_ent((i 2)))))
				(_port(_int clk -1 0 18(_ent (_in))))
				(_port(_int rst -1 0 19(_ent (_in))))
				(_port(_int data_ready -1 0 20(_ent (_in))))
				(_port(_int n_blocks -2 0 21(_ent (_in))))
				(_port(_int msg_block_in 0 0 22(_ent (_in))))
				(_port(_int finished -1 0 23(_ent (_out))))
				(_port(_int data_out 1 0 24(_ent (_out))))
			)
		)
	)
	(_inst uut 0 48(_comp sha256)
		(_gen
			((RESET_VALUE)((i 2)))
		)
		(_port
			((clk)(clk))
			((rst)(rst))
			((data_ready)(data_ready))
			((n_blocks)(n_blocks))
			((msg_block_in)(msg_block_in))
			((finished)(finished))
			((data_out)(data_out))
		)
		(_use(_ent . sha256)
			(_gen
				((RESET_VALUE)((i 2)))
			)
		)
	)
	(_object
		(_type(_int ~STD_LOGIC_VECTOR{0~to~{16*WORD_SIZE}-1}~13 0 22(_array -1((_to i 0 i 511)))))
		(_type(_int ~STD_LOGIC_VECTOR{{WORD_SIZE*8}-1~downto~0}~13 0 24(_array -1((_dto i 255 i 0)))))
		(_cnst(_int WORD_SIZE -2 0 29(_arch((i 32)))))
		(_sig(_int clk -1 0 32(_arch(_uni((i 2))))))
		(_sig(_int rst -1 0 33(_arch(_uni((i 2))))))
		(_sig(_int data_ready -1 0 34(_arch(_uni((i 2))))))
		(_sig(_int n_blocks -2 0 35(_arch(_uni((i 0))))))
		(_type(_int ~STD_LOGIC_VECTOR{0~to~{16*WORD_SIZE}-1}~132 0 36(_array -1((_to i 0 i 511)))))
		(_sig(_int msg_block_in 2 0 36(_arch(_uni((_others(i 2)))))))
		(_sig(_int finished -1 0 39(_arch(_uni))))
		(_type(_int ~STD_LOGIC_VECTOR{{WORD_SIZE*8}-1~downto~0}~134 0 40(_array -1((_dto i 255 i 0)))))
		(_sig(_int data_out 3 0 40(_arch(_uni))))
		(_cnst(_int clk_period -3 0 43(_arch((ns 4621819117588971520)))))
		(_cnst(_int \clk_period/2\ -3 0 0(_int gms(_code 2))))
		(_prcs
			(clk_process(_arch 0 0 63(_prcs(_wait_for)(_trgt(0)))))
			(stim_proc(_arch 1 0 72(_prcs(_wait_for)(_trgt(1)(2)(3)(4))(_mon)(_read(5)(6)))))
		)
		(_type(_ext ieee.std_logic_1164.STD_LOGIC(0 STD_LOGIC)))
		(_type(_ext std.standard.NATURAL(1 NATURAL)))
		(_var(_ext sha256.sha256_pkg.WORD_SIZE(2 WORD_SIZE)))
		(_type(_ext std.standard.TIME(1 TIME)))
	)
	(_use(ieee(std_logic_1164))(std(standard))(.(sha256_pkg))(ieee(NUMERIC_STD)))
	(_static
		
		
		(1752392008 1668180256 1701999215 1881175139 544372079 1981833580 1969581153 1650532466 99)
		(1752392008 1953459744 1852401184 1701344105 100)
	)
	(_model . behavior 3 -1)
)
I 000049 55 4335          1705876036151 behavior
(_unit VHDL(sha256_tb 0 6(behavior 0 10))
	(_version vef)
	(_time 1705876036152 2024.01.21 17:27:16)
	(_source(\../src/sha256_testbench.vhd\))
	(_parameters tan)
	(_code 560556555801034552504309015300515250545155)
	(_ent
		(_time 1705867572661)
	)
	(_comp
		(sha256
			(_object
				(_gen(_int RESET_VALUE -1 0 15(_ent((i 2)))))
				(_port(_int clk -1 0 18(_ent (_in))))
				(_port(_int rst -1 0 19(_ent (_in))))
				(_port(_int data_ready -1 0 20(_ent (_in))))
				(_port(_int n_blocks -2 0 21(_ent (_in))))
				(_port(_int msg_block_in 0 0 22(_ent (_in))))
				(_port(_int finished -1 0 23(_ent (_out))))
				(_port(_int data_out 1 0 24(_ent (_out))))
			)
		)
	)
	(_inst uut 0 48(_comp sha256)
		(_gen
			((RESET_VALUE)((i 2)))
		)
		(_port
			((clk)(clk))
			((rst)(rst))
			((data_ready)(data_ready))
			((n_blocks)(n_blocks))
			((msg_block_in)(msg_block_in))
			((finished)(finished))
			((data_out)(data_out))
		)
		(_use(_ent . sha256)
			(_gen
				((RESET_VALUE)((i 2)))
			)
		)
	)
	(_object
		(_type(_int ~STD_LOGIC_VECTOR{0~to~{16*WORD_SIZE}-1}~13 0 22(_array -1((_to i 0 i 511)))))
		(_type(_int ~STD_LOGIC_VECTOR{{WORD_SIZE*8}-1~downto~0}~13 0 24(_array -1((_dto i 255 i 0)))))
		(_cnst(_int WORD_SIZE -2 0 29(_arch((i 32)))))
		(_sig(_int clk -1 0 32(_arch(_uni((i 2))))))
		(_sig(_int rst -1 0 33(_arch(_uni((i 2))))))
		(_sig(_int data_ready -1 0 34(_arch(_uni((i 2))))))
		(_sig(_int n_blocks -2 0 35(_arch(_uni((i 0))))))
		(_type(_int ~STD_LOGIC_VECTOR{0~to~{16*WORD_SIZE}-1}~132 0 36(_array -1((_to i 0 i 511)))))
		(_sig(_int msg_block_in 2 0 36(_arch(_uni((_others(i 2)))))))
		(_sig(_int finished -1 0 39(_arch(_uni))))
		(_type(_int ~STD_LOGIC_VECTOR{{WORD_SIZE*8}-1~downto~0}~134 0 40(_array -1((_dto i 255 i 0)))))
		(_sig(_int data_out 3 0 40(_arch(_uni))))
		(_cnst(_int clk_period -3 0 43(_arch((ns 4621819117588971520)))))
		(_cnst(_int \clk_period/2\ -3 0 0(_int gms(_code 2))))
		(_prcs
			(clk_process(_arch 0 0 63(_prcs(_wait_for)(_trgt(0)))))
			(stim_proc(_arch 1 0 72(_prcs(_wait_for)(_trgt(1)(2)(3)(4))(_mon)(_read(5)(6)))))
		)
		(_type(_ext ieee.std_logic_1164.STD_LOGIC(0 STD_LOGIC)))
		(_type(_ext std.standard.NATURAL(1 NATURAL)))
		(_var(_ext sha256.sha256_pkg.WORD_SIZE(2 WORD_SIZE)))
		(_type(_ext std.standard.TIME(1 TIME)))
	)
	(_use(ieee(std_logic_1164))(std(standard))(.(sha256_pkg))(ieee(NUMERIC_STD)))
	(_static
		
		
		(1752392008 1668180256 1701999215 1881175139 544372079 1981833580 1969581153 1650532466 99)
		(1752392008 1953459744 1852401184 1701344105 100)
	)
	(_model . behavior 3 -1)
)
I 000049 55 4335          1705876055665 behavior
(_unit VHDL(sha256_tb 0 6(behavior 0 10))
	(_version vef)
	(_time 1705876055666 2024.01.21 17:27:35)
	(_source(\../src/sha256_testbench.vhd\))
	(_parameters tan)
	(_code 9294c79d98c5c781969487cdc597c4959694909591)
	(_ent
		(_time 1705867572661)
	)
	(_comp
		(sha256
			(_object
				(_gen(_int RESET_VALUE -1 0 15(_ent((i 2)))))
				(_port(_int clk -1 0 18(_ent (_in))))
				(_port(_int rst -1 0 19(_ent (_in))))
				(_port(_int data_ready -1 0 20(_ent (_in))))
				(_port(_int n_blocks -2 0 21(_ent (_in))))
				(_port(_int msg_block_in 0 0 22(_ent (_in))))
				(_port(_int finished -1 0 23(_ent (_out))))
				(_port(_int data_out 1 0 24(_ent (_out))))
			)
		)
	)
	(_inst uut 0 48(_comp sha256)
		(_gen
			((RESET_VALUE)((i 2)))
		)
		(_port
			((clk)(clk))
			((rst)(rst))
			((data_ready)(data_ready))
			((n_blocks)(n_blocks))
			((msg_block_in)(msg_block_in))
			((finished)(finished))
			((data_out)(data_out))
		)
		(_use(_ent . sha256)
			(_gen
				((RESET_VALUE)((i 2)))
			)
		)
	)
	(_object
		(_type(_int ~STD_LOGIC_VECTOR{0~to~{16*WORD_SIZE}-1}~13 0 22(_array -1((_to i 0 i 511)))))
		(_type(_int ~STD_LOGIC_VECTOR{{WORD_SIZE*8}-1~downto~0}~13 0 24(_array -1((_dto i 255 i 0)))))
		(_cnst(_int WORD_SIZE -2 0 29(_arch((i 32)))))
		(_sig(_int clk -1 0 32(_arch(_uni((i 2))))))
		(_sig(_int rst -1 0 33(_arch(_uni((i 2))))))
		(_sig(_int data_ready -1 0 34(_arch(_uni((i 2))))))
		(_sig(_int n_blocks -2 0 35(_arch(_uni((i 0))))))
		(_type(_int ~STD_LOGIC_VECTOR{0~to~{16*WORD_SIZE}-1}~132 0 36(_array -1((_to i 0 i 511)))))
		(_sig(_int msg_block_in 2 0 36(_arch(_uni((_others(i 2)))))))
		(_sig(_int finished -1 0 39(_arch(_uni))))
		(_type(_int ~STD_LOGIC_VECTOR{{WORD_SIZE*8}-1~downto~0}~134 0 40(_array -1((_dto i 255 i 0)))))
		(_sig(_int data_out 3 0 40(_arch(_uni))))
		(_cnst(_int clk_period -3 0 43(_arch((ns 4621819117588971520)))))
		(_cnst(_int \clk_period/2\ -3 0 0(_int gms(_code 2))))
		(_prcs
			(clk_process(_arch 0 0 63(_prcs(_wait_for)(_trgt(0)))))
			(stim_proc(_arch 1 0 72(_prcs(_wait_for)(_trgt(1)(2)(3)(4))(_mon)(_read(5)(6)))))
		)
		(_type(_ext ieee.std_logic_1164.STD_LOGIC(0 STD_LOGIC)))
		(_type(_ext std.standard.NATURAL(1 NATURAL)))
		(_var(_ext sha256.sha256_pkg.WORD_SIZE(2 WORD_SIZE)))
		(_type(_ext std.standard.TIME(1 TIME)))
	)
	(_use(ieee(std_logic_1164))(std(standard))(.(sha256_pkg))(ieee(NUMERIC_STD)))
	(_static
		
		
		(1752392008 1668180256 1701999215 1881175139 544372079 1981833580 1969581153 1650532466 99)
		(1752392008 1953459744 1852401184 1701344105 100)
	)
	(_model . behavior 3 -1)
)
V 000049 55 4335          1705876087361 behavior
(_unit VHDL(sha256_tb 0 6(behavior 0 10))
	(_version vef)
	(_time 1705876087362 2024.01.21 17:28:07)
	(_source(\../src/sha256_testbench.vhd\))
	(_parameters tan)
	(_code 69673869683e3c7a6d6f7c363e6c3f6e6d6f6b6e6a)
	(_ent
		(_time 1705867572661)
	)
	(_comp
		(sha256
			(_object
				(_gen(_int RESET_VALUE -1 0 15(_ent((i 2)))))
				(_port(_int clk -1 0 18(_ent (_in))))
				(_port(_int rst -1 0 19(_ent (_in))))
				(_port(_int data_ready -1 0 20(_ent (_in))))
				(_port(_int n_blocks -2 0 21(_ent (_in))))
				(_port(_int msg_block_in 0 0 22(_ent (_in))))
				(_port(_int finished -1 0 23(_ent (_out))))
				(_port(_int data_out 1 0 24(_ent (_out))))
			)
		)
	)
	(_inst uut 0 48(_comp sha256)
		(_gen
			((RESET_VALUE)((i 2)))
		)
		(_port
			((clk)(clk))
			((rst)(rst))
			((data_ready)(data_ready))
			((n_blocks)(n_blocks))
			((msg_block_in)(msg_block_in))
			((finished)(finished))
			((data_out)(data_out))
		)
		(_use(_ent . sha256)
			(_gen
				((RESET_VALUE)((i 2)))
			)
		)
	)
	(_object
		(_type(_int ~STD_LOGIC_VECTOR{0~to~{16*WORD_SIZE}-1}~13 0 22(_array -1((_to i 0 i 511)))))
		(_type(_int ~STD_LOGIC_VECTOR{{WORD_SIZE*8}-1~downto~0}~13 0 24(_array -1((_dto i 255 i 0)))))
		(_cnst(_int WORD_SIZE -2 0 29(_arch((i 32)))))
		(_sig(_int clk -1 0 32(_arch(_uni((i 2))))))
		(_sig(_int rst -1 0 33(_arch(_uni((i 2))))))
		(_sig(_int data_ready -1 0 34(_arch(_uni((i 2))))))
		(_sig(_int n_blocks -2 0 35(_arch(_uni((i 0))))))
		(_type(_int ~STD_LOGIC_VECTOR{0~to~{16*WORD_SIZE}-1}~132 0 36(_array -1((_to i 0 i 511)))))
		(_sig(_int msg_block_in 2 0 36(_arch(_uni((_others(i 2)))))))
		(_sig(_int finished -1 0 39(_arch(_uni))))
		(_type(_int ~STD_LOGIC_VECTOR{{WORD_SIZE*8}-1~downto~0}~134 0 40(_array -1((_dto i 255 i 0)))))
		(_sig(_int data_out 3 0 40(_arch(_uni))))
		(_cnst(_int clk_period -3 0 43(_arch((ns 4621819117588971520)))))
		(_cnst(_int \clk_period/2\ -3 0 0(_int gms(_code 2))))
		(_prcs
			(clk_process(_arch 0 0 63(_prcs(_wait_for)(_trgt(0)))))
			(stim_proc(_arch 1 0 72(_prcs(_wait_for)(_trgt(1)(2)(3)(4))(_mon)(_read(5)(6)))))
		)
		(_type(_ext ieee.std_logic_1164.STD_LOGIC(0 STD_LOGIC)))
		(_type(_ext std.standard.NATURAL(1 NATURAL)))
		(_var(_ext sha256.sha256_pkg.WORD_SIZE(2 WORD_SIZE)))
		(_type(_ext std.standard.TIME(1 TIME)))
	)
	(_use(ieee(std_logic_1164))(std(standard))(.(sha256_pkg))(ieee(NUMERIC_STD)))
	(_static
		
		
		(1752392008 1668180256 1701999215 1881175139 544372079 1981833580 1969581153 1650532466 99)
		(1752392008 1953459744 1852401184 1701344105 100)
	)
	(_model . behavior 3 -1)
)
